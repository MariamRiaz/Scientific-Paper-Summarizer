{"sections": [{"text": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 107\u2013117, Austin, Texas, November 1-5, 2016. c\u00a92016 Association for Computational Linguistics"}, {"heading": "1 Introduction", "text": "Many recent advances in NLP problems have come from formulating and training expressive and elaborate neural models. This includes models for sentiment classification, parsing, and machine translation among many others. The gains in accuracy have, however, come at the cost of interpretability since complex neural models offer little transparency concerning their inner workings. In many applications, such as medicine, predictions are used to drive critical decisions, including treatment options. It is necessary in such cases to be able to verify and under-\n1Our code and data are available at https://github. com/taolei87/rcnn.\nstand the underlying basis for the decisions. Ideally, complex neural models would not only yield improved performance but would also offer interpretable justifications \u2013 rationales \u2013 for their predictions.\nIn this paper, we propose a novel approach to incorporating rationale generation as an integral part of the overall learning problem. We limit ourselves to extractive (as opposed to abstractive) rationales. From this perspective, our rationales are simply subsets of the words from the input text that satisfy two key properties. First, the selected words represent short and coherent pieces of text (e.g., phrases) and, second, the selected words must alone suffice for prediction as a substitute of the original text. More concretely, consider the task of multi-aspect sentiment analysis. Figure 1 illustrates a product review along with user rating in terms of two categories or aspects. If the model in this case predicts five star rating for color, it should also identify the phrase \u201da very pleasant ruby red-amber color\u201d as the rationale underlying this decision.\nIn most practical applications, rationale genera-\n107\ntion must be learned entirely in an unsupervised manner. We therefore assume that our model with rationales is trained on the same data as the original neural models, without access to additional rationale annotations. In other words, target rationales are never provided during training; the intermediate step of rationale generation is guided only by the two desiderata discussed above. Our model is composed of two modular components that we call the generator and the encoder. Our generator specifies a distribution over possible rationales (extracted text) and the encoder maps any such text to task specific target values. They are trained jointly to minimize a cost function that favors short, concise rationales while enforcing that the rationales alone suffice for accurate prediction.\nThe notion of what counts as a rationale may be ambiguous in some contexts and the task of selecting rationales may therefore be challenging to evaluate. We focus on two domains where ambiguity is minimal (or can be minimized). The first scenario concerns with multi-aspect sentiment analysis exemplified by the beer review corpus (McAuley et al., 2012). A smaller test set in this corpus identifies, for each aspect, the sentence(s) that relate to this aspect. We can therefore directly evaluate our predictions on the sentence level with the caveat that our model makes selections on a finer level, in terms of words, not complete sentences. The second scenario concerns with the problem of retrieving similar questions. The extracted rationales should capture the main purpose of the questions. We can therefore evaluate the quality of rationales as a compressed proxy for the full text in terms of retrieval performance. Our model achieves high performance on both tasks. For instance, on the sentiment prediction task, our model achieves extraction accuracy of 96%, as compared to 38% and 81% obtained by the bigram SVM and a neural attention baseline."}, {"heading": "2 Related Work", "text": "Developing sparse interpretable models is of considerable interest to the broader research community(Letham et al., 2015; Kim et al., 2015). The need for interpretability is even more pronounced with recent neural models. Efforts in this area include analyzing and visualizing state activation (Hermans\nand Schrauwen, 2013; Karpathy et al., 2015; Li et al., 2016), learning sparse interpretable word vectors (Faruqui et al., 2015b), and linking word vectors to semantic lexicons or word properties (Faruqui et al., 2015a; Herbelot and Vecchi, 2015).\nBeyond learning to understand or further constrain the network to be directly interpretable, one can estimate interpretable proxies that approximate the network. Examples include extracting \u201cif-then\u201d rules (Thrun, 1995) and decision trees (Craven and Shavlik, 1996) from trained networks. More recently, Ribeiro et al. (2016) propose a modelagnostic framework where the proxy model is learned only for the target sample (and its neighborhood) thus ensuring locally valid approximations. Our work differs from these both in terms of what is meant by an explanation and how they are derived. In our case, an explanation consists of a concise yet sufficient portion of the text where the mechanism of selection is learned jointly with the predictor.\nAttention based models offer another means to explicate the inner workings of neural models (Bahdanau et al., 2015; Cheng et al., 2016; Martins and Astudillo, 2016; Chen et al., 2015; Xu and Saenko, 2015; Yang et al., 2015). Such models have been successfully applied to many NLP problems, improving both prediction accuracy as well as visualization and interpretability (Rush et al., 2015; Rockta\u0308schel et al., 2016; Hermann et al., 2015). Xu et al. (2015) introduced a stochastic attention mechanism together with a more standard soft attention on image captioning task. Our rationale extraction can be understood as a type of stochastic attention although architectures and objectives differ. Moreover, we compartmentalize rationale generation from downstream encoding so as to expose knobs to directly control types of rationales that are acceptable, and to facilitate broader modular use in other applications.\nFinally, we contrast our work with rationale-based classification (Zaidan et al., 2007; Marshall et al., 2015; Zhang et al., 2016) which seek to improve prediction by relying on richer annotations in the form of human-provided rationales. In our work, rationales are never given during training. The goal is to learn to generate them."}, {"heading": "3 Extractive Rationale Generation", "text": "We formalize here the task of extractive rationale generation and illustrate it in the context of neural models. To this end, consider a typical NLP task where we are provided with a sequence of words as input, namely x = {x1, \u00b7 \u00b7 \u00b7 , xl}, where each xt \u2208 Rd denotes the vector representation of the ith word. The learning problem is to map the input sequence x to a target vector in Rm. For example, in multi-aspect sentiment analysis each coordinate of the target vector represents the response or rating pertaining to the associated aspect. In text retrieval, on the other hand, the target vectors are used to induce similarity assessments between input sequences. Broadly speaking, we can solve the associated learning problem by estimating a complex parameterized mapping enc(x) from input sequences to target vectors. We call this mapping an encoder. The training signal for these vectors is obtained either directly (e.g., multi-sentiment analysis) or via similarities (e.g., text retrieval). The challenge is that a complex neural encoder enc(x) reveals little about its internal workings and thus offers little in the way of justification for why a particular prediction was made.\nIn extractive rationale generation, our goal is to select a subset of the input sequence as a rationale. In order for the subset to qualify as a rationale it should satisfy two criteria: 1) the selected words should be interpretable and 2) they ought to suffice to reach nearly the same prediction (target vector) as the original input. In other words, a rationale must be short and sufficient. We will assume that a short selection is interpretable and focus on optimizing sufficiency under cardinality constraints.\nWe encapsulate the selection of words as a rationale generator which is another parameterized mapping gen(x) from input sequences to shorter sequences of words. Thus gen(x) must include only a few words and enc(gen(x)) should result in nearly the same target vector as the original input passed through the encoder or enc(x). We can think of the generator as a tagging model where each word in the input receives a binary tag pertaining to whether it is selected to be included in the rationale. In our case, the generator is probabilistic and specifies a distribution over possible selections.\nThe rationale generation task is entirely unsupervised in the sense that we assume no explicit annotations about which words should be included in the rationale. Put another way, the rationale is introduced as a latent variable, a constraint that guides how to interpret the input sequence. The encoder and generator are trained jointly, in an end-to-end fashion so as to function well together."}, {"heading": "4 Encoder and Generator", "text": "We use multi-aspect sentiment prediction as a guiding example to instantiate the two key components \u2013 the encoder and the generator. The framework itself generalizes to other tasks.\nEncoder enc(\u00b7): Given a training instance (x,y) where x = {xt}lt=1 is the input text sequence of length l and y \u2208 [0, 1]m is the target m-dimensional sentiment vector, the neural encoder predicts y\u0303 = enc(x). If trained on its own, the encoder would aim to minimize the discrepancy between the predicted sentiment vector y\u0303 and the gold target vector y. We will use the squared error (i.e. L2 distance) as the sentiment loss function,\nL(x,y) = \u2016y\u0303 \u2212 y\u201622 = \u2016enc(x)\u2212 y\u201622 The encoder could be realized in many ways such as a recurrent neural network. For example, let ht = fe(xt,ht\u22121) denote a parameterized recurrent unit mapping input word xt and previous state ht\u22121 to next state ht. The target vector is then generated on the basis of the final state reached by the recurrent unit after processing all the words in the input sequence. Specifically,\nht = fe(xt,ht\u22121), t = 1, . . . , l\ny\u0303 = \u03c3e(W ehl + b e)\nGenerator gen(\u00b7): The rationale generator extracts a subset of text from the original input x to function as an interpretable summary. Thus the rationale for a given sequence x can be equivalently defined in terms of binary variables {z1, \u00b7 \u00b7 \u00b7 , zl} where each zt \u2208 0, 1 indicates whether word xt is selected or not. From here on, we will use z to specify the binary selections and thus (z,x) is the actual rationale generated (selections, input). We will use generator gen(x) as synonymous with a\nprobability distribution over binary selections, i.e., z \u223c gen(x) \u2261 p(z|x) where the length of z varies with the input x.\nIn a simple generator, the probability that the tth word is selected can be assumed to be conditionally independent from other selections given the input x. That is, the joint probability p(z|x) factors according to\np(z|x) = l\u220f\nt=1\np(zt|x) (independent selection)\nThe component distributions p(zt|x) can be modeled using a shared bi-directional recurrent neural network. Specifically, let \u2212\u2192 f () and \u2190\u2212 f () be the forward and backward recurrent unit, respectively, then\n\u2212\u2192 ht = \u2212\u2192 f (xt, \u2212\u2212\u2192 ht\u22121) \u2190\u2212 ht = \u2190\u2212 f (xt, \u2190\u2212\u2212 ht+1)\np(zt|x) = \u03c3z(Wz[ \u2212\u2192 ht; \u2190\u2212 ht] + b z)\nIndependent but context dependent selection of words is often sufficient. However, the model is unable to select phrases or refrain from selecting the same word again if already chosen. To this end, we also introduce a dependent selection of words,\np(z|x) = l\u220f\nt=1\np(zt|x, z1 \u00b7 \u00b7 \u00b7 zt\u22121)\nwhich can be also expressed as a recurrent neural network. To this end, we introduce another hidden state st whose role is to couple the selections. For example,\np(zt|x, z1,t\u22121) = \u03c3z(Wz[ \u2212\u2192 ht; \u2190\u2212 ht; st\u22121] + bz)\nst = fz([ \u2212\u2192 ht; \u2190\u2212 ht; zt], st\u22121)\nJoint objective: A rationale in our definition corresponds to the selected words, i.e., {xk|zk = 1}. We will use (z,x) as the shorthand for this rationale and, thus, enc(z,x) refers to the target vector obtained by applying the encoder to the rationale as the input. Our goal here is to formalize how the rationale can be made short and meaningful yet function well in conjunction with the encoder. Our generator and encoder are learned jointly to interact well but they are treated as independent units for modularity.\nThe generator is guided in two ways during learning. First, the rationale that it produces must suffice as a replacement for the input text. In other words, the target vector (sentiment) arising from the rationale should be close to the gold sentiment. The corresponding loss function is given by\nL(z,x,y) = \u2016enc(z,x)\u2212 y\u201622 Note that the loss function depends directly (parametrically) on the encoder but only indirectly on the generator via the sampled selection.\nSecond, we must guide the generator to realize short and coherent rationales. It should select only a few words and those selections should form phrases (consecutive words) rather than represent isolated, disconnected words. We therefore introduce an additional regularizer over the selections\n\u2126(z) = \u03bb1\u2016z\u2016+ \u03bb2 \u2211\nt\n|zt \u2212 zt\u22121|\nwhere the first term penalizes the number of selections while the second one discourages transitions (encourages continuity of selections). Note that this regularizer also depends on the generator only indirectly via the selected rationale. This is because it is easier to assess the rationale once produced rather than directly guide how it is obtained.\nOur final cost function is the combination of the two, cost(z,x,y) = L(z,x,y) + \u2126(z). Since the selections are not provided during training, we minimize the expected cost:\nmin \u03b8e,\u03b8g\n\u2211\n(x,y)\u2208D Ez\u223cgen(x) [cost(z,x,y)]\nwhere \u03b8e and \u03b8g denote the set of parameters of the encoder and generator, respectively, and D is the collection of training instances. Our joint objective encourages the generator to compress the input text into coherent summaries that work well with the associated encoder it is trained with.\nMinimizing the expected cost is challenging since it involves summing over all the possible choices of rationales z. This summation could potentially be made feasible with additional restrictive assumptions about the generator and encoder. However, we assume only that it is possible to efficiently sample from the generator.\nDoubly stochastic gradient We now derive a sampled approximation to the gradient of the expected cost objective. This sampled approximation is obtained separately for each input text x so as to work well with an overall stochastic gradient method. Consider therefore a training pair (x,y). For the parameters of the generator \u03b8g,\n\u2202Ez\u223cgen(x) [cost(z,x,y)] \u2202\u03b8g\n= \u2211\nz\ncost(z,x,y) \u00b7 \u2202p(z|x) \u2202\u03b8g\n= \u2211\nz\ncost(z,x,y) \u00b7 \u2202p(z|x) \u2202\u03b8g \u00b7 p(z|x) p(z|x)\nUsing the fact (log f(\u03b8))\u2032 = f \u2032(\u03b8)/f(\u03b8), we get\n\u2211\nz\ncost(z,x,y) \u00b7 \u2202p(z|x) \u2202\u03b8g \u00b7 p(z|x) p(z|x)\n= \u2211\nz\ncost(z,x,y) \u00b7 \u2202 log p(z|x) \u2202\u03b8g \u00b7 p(z|x)\n= Ez\u223cgen(x) [ cost(z,x,y) \u2202 log p(z|x)\n\u2202\u03b8g\n]\nThe last term is the expected gradient where the expectation is taken with respect to the generator distribution over rationales z. Therefore, we can simply sample a few rationales z from the generator gen(x) and use the resulting average gradient in an overall stochastic gradient method. A sampled approximation to the gradient with respect to the encoder parameters \u03b8e can be derived similarly,\n\u2202Ez\u223cgen(x) [cost(z,x,y)] \u2202\u03b8e\n= \u2211\nz\n\u2202cost(z,x,y) \u2202\u03b8e \u00b7 p(z|x)\n= Ez\u223cgen(x) [ \u2202cost(z,x,y)\n\u2202\u03b8e\n]\nChoice of recurrent unit We employ recurrent convolution (RCNN), a refinement of local-ngram based convolution. RCNN attempts to learn n-gram features that are not necessarily consecutive, and average features in a dynamic (recurrent) fashion. Specifically, for bigrams (filter width n = 2) RCNN computes ht = f(xt,ht\u22121) as follows\n\u03bbt = \u03c3(W \u03bbxt + U \u03bbht\u22121 + b \u03bb)\nc (1) t = \u03bbt c(1)t\u22121 + (1\u2212 \u03bbt) (W1xt) c (2) t = \u03bbt c(2)t\u22121 + (1\u2212 \u03bbt) (c (1) t\u22121 + W2xt)\nht = tanh(c (2) t + b)\nRCNN has been shown to work remarkably in classification and retrieval applications (Lei et al., 2015; Lei et al., 2016) compared to other alternatives such CNNs and LSTMs. We use it for all the recurrent units introduced in our model."}, {"heading": "5 Experiments", "text": "We evaluate the proposed joint model on two NLP applications: (1) multi-aspect sentiment analysis on product reviews and (2) similar text retrieval on AskUbuntu question answering forum."}, {"heading": "5.1 Multi-aspect Sentiment Analysis", "text": "Dataset We use the BeerAdvocate2 review dataset used in prior work (McAuley et al., 2012).3 This dataset contains 1.5 million reviews written by the website users. The reviews are naturally multiaspect \u2013 each of them contains multiple sentences describing the overall impression or one particular aspect of a beer, including appearance, smell (aroma), palate and the taste. In addition to the written text, the reviewer provides the ratings (on a scale of 0 to 5 stars) for each aspect as well as an overall rating. The ratings can be fractional (e.g. 3.5 stars), so we normalize the scores to [0, 1] and use them as the (only) supervision for regression.\nMcAuley et al. (2012) also provided sentencelevel annotations on around 1,000 reviews. Each sentence is annotated with one (or multiple) aspect label, indicating what aspect this sentence covers.\n2www.beeradvocate.com 3http://snap.stanford.edu/data/\nweb-BeerAdvocate.html\nWe use this set as our test set to evaluate the precision of words in the extracted rationales.\nTable 1 shows several statistics of the beer review dataset. The sentiment correlation between any pair of aspects (and the overall score) is quite high, getting 63.5% on average and a maximum of 79.1% (between the taste and overall score). If directly training the model on this set, the model can be confused due to such strong correlation. We therefore perform a preprocessing step, picking \u201cless correlated\u201d examples from the dataset.4 This gives us a de-correlated subset for each aspect, each containing about 80k to 90k reviews. We use 10k as the development set. We focus on three aspects since the fourth aspect taste still gets > 50% correlation with the overall sentiment.\nSentiment Prediction Before training the joint model, it is worth assessing the neural encoder separately to check how accurately the neural network predicts the sentiment. To this end, we compare neural encoders with bigram SVM model, training medium and large SVM models using 260k and all\n4Specifically, for each aspect we train a simple linear regression model to predict the rating of this aspect given the ratings of the other four aspects. We then keep picking reviews with largest prediction error until the sentiment correlation in the selected subset increases dramatically.\n1580k reviews respectively. As shown in Table 3, the recurrent neural network models outperform the SVM model for sentiment prediction and also require less training data to achieve the performance. The LSTM and RCNN units obtain similar test error, getting 0.0094 and 0.0087 mean squared error respectively. The RCNN unit performs slightly better and uses less parameters. Based on the results, we choose the RCNN encoder network with 2 stacking layers and 200 hidden states.\nTo train the joint model, we also use RCNN unit with 200 states as the forward and backward recurrent unit for the generator gen(). The dependent generator has one additional recurrent layer. For this layer we use 30 states so the dependent version still has a number of parameters comparable to the independent version. The two versions of the generator have 358k and 323k parameters respectively.\nFigure 2 shows the performance of our joint dependent model when trained to predict the sentiment of all aspects. We vary the regularization \u03bb1 and \u03bb2 to show various runs that extract different amount of text as rationales. Our joint model gets performance close to the best encoder run (with full text) when few words are extracted.\na beer that is not sold in my neck of the woods , but managed to get while on a roadtrip . poured into an imperial pint glass with a generous head that sustained life throughout . nothing out of the ordinary here , but a good brew s9ll . body was kind of heavy , but not thick . the hop smell was excellent and en9cing . very drinkable\nvery dark beer . pours a nice finger and a half of creamy foam and stays throughout the beer . smells of coffee and roasted malt . has a major coffee-like taste with hints of chocolate . if you like black coffee , you will love this porter . creamy smooth mouthfeel and definitely gets smoother on the palate once it warms . it 's an ok porter but i feel there are much beAer one 's out there .\npoured into a sniBer . produces a small coffee head that reduces quickly . black as night . preAy typical imp . roasted malts hit on the nose . a liAle sweet chocolate follows . big toasty character on the taste . in between i 'm geDng plenty of dark chocolate and some biAer espresso . it finishes with hop biAerness . nice smooth mouthfeel with perfect carbona9on for the style . overall a nice stout i would love to have again , maybe with some age on it .\ni really did not like this . it just seemed extremely watery . i dont ' think this had any carbona9on whatsoever . maybe it was flat , who knows ? but even if i got a bad brew i do n't see how this would possibly be something i 'd get 9me and 9me again . i could taste the hops towards the middle , but the beer got preAy nasty towards the boAom . i would never drink this again , unless it was free . i 'm kind of upset i bought this .\na : poured a nice dark brown with a tan colored head about half an inch thick , nice red/garnet accents when held to the light . liAle clumps of lacing all around the glass , not too shabby . not terribly impressive though s : smells like a more guinness-y guinness really , there are some roasted malts there , signature guinness smells , less burnt though , a liAle bit of chocolate \u2026 \u2026 m : rela9vely thick , it is n't an export stout or imperial stout , but s9ll is preAy heBy in the mouth , very smooth , not much carbona9on . not too shabby d : not quite as drinkable as the draught , but s9ll not too bad . i could easily see drinking a few of these .\nFigure 3: Examples of extracted rationales indicating the sentiments of various aspects. The extracted texts for appearance, smell and palate are shown in red, blue and green color respectively. The last example is shortened for space.\nSVM Attention Gen (independent) Gen (recurrent)\n1 73.9 1 89.1 6 97.4 12 96.5 3 55.9 3 88.1 13 94.9 14 96.3 5 48.5 5 86.4 16 92.9 16 91.2 7 44.7 7 84.1\n9 42.2 9 82.3 11 41.2 11 79.8 13 38.3 13 77.1 15 36.7 15 74.4 17 35.1 17 71.6\n30\n48\n65\n83\n100\n5 7 9 11 13 15 17\nSVM Attention Gen (independent) Gen (recurrent)\nFigure 4: Precision (y-axis) when various percentages of text are extracted as rationales (x-axis) for the appearance aspect.\nRationale Selection To evaluate the supporting rationales for each aspect, we train the joint encodergenerator model on each de-correlated subset. We set the cardinality regularization \u03bb1 between values {2e \u2212 4, 3e \u2212 4, 4e \u2212 4} so the extracted rationale texts are neither too long nor too short. For simplicity, we set \u03bb2 = 2\u03bb1 to encourage local coherency of the extraction.\nFor comparison we use the bigram SVM model and implement an attention-based neural network model. The SVM model successively extracts unigram or bigram (from the test reviews) with the highest feature. The attention-based model learns a normalized attention vector of the input tokens (using similarly the forward and backward RNNs), then the model averages over the encoder states accordingly to the attention, and feed the averaged vector to the output layer. Similar to the SVM model, the attention-based model can selects words based on their attention weights.\n0 50 100\n0.03\n0.04\n0.05\n0.06\nGen (recurrent) Gen (independent)\n0.2\n0.4\n0.6\n0.8\n1.0\nFigure 5: Learning curves of the optimized cost function on the development set and the precision of rationales on the test set. The smell (aroma) aspect is the target aspect.\nTable 2 presents the precision of the extracted rationales calculated based on sentence-level aspect annotations. The \u03bb1 regularization hyper-parameter is tuned so the two versions of our model extract similar number of words as rationales. The SVM and attention-based model are constrained similarly for comparison. Figure 4 further shows the precision when different amounts of text are extracted. Again, for our model this corresponds to changing the \u03bb1 regularization. As shown in the table and the figure, our encoder-generator networks extract text pieces describing the target aspect with high precision, ranging from 80% to 96% across the three aspects appearance, smell and palate. The SVM baseline performs poorly, achieving around 30% accuracy. The attention-based model achieves reasonable but worse performance than the rationale generator, suggesting the potential of directly modeling rationales as explicit extraction.\n113\nFigure 5 shows the learning curves of our model for the smell aspect. In the early training epochs, both the independent and (recurrent) dependent selection models fail to produce good rationales, getting low precision as a result. After a few epochs of exploration however, the models start to achieve high accuracy. We observe that the dependent version learns more quickly in general, but both versions obtain close results in the end.\nFinally we conduct a qualitative case study on the extracted rationales. Figure 3 presents several reviews, with highlighted rationales predicted by the model. Our rationale generator identifies key phrases or adjectives that indicate the sentiment of a particular aspect."}, {"heading": "5.2 Similar Text Retrieval on QA Forum", "text": "Dataset For our second application, we use the real-world AskUbuntu5 dataset used in recent work (dos Santos et al., 2015; Lei et al., 2016). This set contains a set of 167k unique questions (each consisting a question title and a body) and 16k useridentified similar question pairs. Following previous work, this data is used to train the neural encoder that learns the vector representation of the input question, optimizing the cosine distance (i.e. cosine similarity) between similar questions against random non-similar ones. We use the \u201cone-versusall\u201d hinge loss (i.e. positive versus other negatives) for the encoder, similar to (Lei et al., 2016). During development and testing, the model is used to score 20 candidate questions given each query question, and a total of 400\u00d720 query-candidate question pairs are annotated for evaluation6.\nTask/Evaluation Setup The question descriptions are often long and fraught with irrelevant details. In this set-up, a fraction of the original question text should be sufficient to represent its content, and be used for retrieving similar questions. Therefore, we will evaluate rationales based on the accuracy of the question retrieval task, assuming that better rationales achieve higher performance. To put this performance in context, we also report the accuracy when full body of a question is used, as well as titles alone. The latter constitutes an upper bound on\n5askubuntu.com 6https://github.com/taolei87/askubuntu\nGen (independent) Gen (recurrent)\n0.052 47.08 0.063 50.54 0.058 52.36 0.067 49.48 0.059 46.02 0.07 51.96 0.062 49.76 0.078 51.54 0.064 47.94 0.086 52.55 0.068 48.93 0.095 53.59\n0.07 49.5 0.108 53.15 0.081 52.18 0.112 51.48 0.081 51.84 0.116 54.62 0.094 51.24 0.121 52.12 0.094 52.21 0.137 53 0.097 53.61 0.163 53.2 0.098 54.11 0.179 54.13 0.122 49.03 0.193 52.11 0.133 54.19 0.262 52.32 0.135 50.21 0.277 50.87 0.136 48.22 0.328 53.21 0.145 50.96 0.328 55.61 0.155 52.91 0.347 51 0.173 52.74 0.378 54.93 0.197 52.6\nthe model performance as in this dataset titles provide short, informative summaries of the question content. We evaluate the rationales using the mean average precision (MAP) of retrieval.\nResults Table 4 presents the results of our rationale model. We explore a range of hyper-parameter values7. We include two runs for each version. The first one achieves the highest MAP on the development set, The second run is selected to compare the models when they use roughly 10% of question text (7 words on average). We also show the results of different runs in Figure 6. The rationales achieve the MAP up to 56.5%, getting close to using the titles. The models also outperform the baseline of using the noisy question bodies, indicating the the models\u2019 capacity of extracting short but important fragments.\nFigure 7 shows the rationales for several questions in the AskUbuntu domain, using the recurrent version with around 10% extraction. Interestingly, the model does not always select words from the question title. The reasons are that the question body can contain the same or even complementary information useful for retrieval. Indeed, some rationale fragments shown in the figure are error messages,\n7\u03bb1 \u2208 {.008, .01, .012, .015}, \u03bb2 = {0, \u03bb1, 2\u03bb1}, dropout \u2208 {0.1, 0.2}\n114\ni accidentally removed the ubuntu soBware centre , when i was actually trying to remove my ubuntu one applica9ons . although i do n't remember directly uninstalling the centre , i think dele9ng one of those packages might have triggered it . i can not look at history of applica9on changes , as the soBware centre is missing . please advise on how to install , or rather reinstall , ubuntu soBware centre on my computer . how do i install ubuntu soBware centre applica9on ?\ni know this will be an odd ques9on , but i was wondering if anyone knew how to install the ubuntu installer package in an ubuntu installa9on . to clarify , when you boot up to an ubuntu livecd , it 's got the installer program available so that you can install ubuntu to a drive . naturally , this program is not present in the installed ubuntu . is there , though , a way to download and install it like other packages ? invariably , someone will ask what i 'm trying to do , and the answer \u2026 install installer package on an installed system ?\nwhich are typically not in the titles but very useful to identify similar questions."}, {"heading": "6 Discussion", "text": "We proposed a novel modular neural framework to automatically generate concise yet sufficient text fragments to justify predictions made by neural networks. We demonstrated that our encoder-generator framework, trained in an end-to-end manner, gives rise to quality rationales in the absence of any explicit rationale annotations. The approach could be modified or ext nded in various ways to other applications or types of data.\nChoices of enc(\u00b7) and gen(\u00b7). The encoder and generator can be realized in numerous ways without changing the broader algorithm. For instance, we could use a convolutional network (Kim, 2014; Kalchbrenner et al., 2014), deep averaging network (Iyyer et al., 2015; Joulin et al., 2016) or a boosting classifier as the encoder. When rationales can be expected to conform to repeated stereotypical patterns in the text, a simpler encoder consistent with this bias can work better. We emphasize that, in this paper, rationales are flexible explanations that may vary substantially from instance to another. On the generator side, many additional constraints could be imposed to further guide acceptable rationales.\nDealing with Search Space. Our training method employs a REINFORCE-style algorithm (Williams, 1992) where the gradient with respect to the parameters is estimated by sampling possible rationales.\nAdditional constraints on the generator output can be helpful in alleviating problems of exploring potentially a large space of possible rationales in terms of their interaction with the encoder. We could also apply variance reduction techniques to increase stability of stochastic training (cf. (Weaver and Tao, 2001; Mni et al., 2014; Ba et al., 2015; Xu et al., 2015))."}, {"heading": "7 Acknowledgments", "text": "We thank Prof. Julian McAuley for sharing the review dat s t and annotations. We also th nk MIT NLP group and the reviewers for their helpful comments. The work is supported by the Arabic Language Technologies (ALT) group at Qatar Computing Research Institute (QCRI) within the IYAS project. Any opinions, findings, conclusions, or recommendations expressed in this paper are those of the authors, and do not necessarily reflect the views of the funding organizations."}], "year": 2016, "references": [{"title": "Multiple object recognition with visual attention", "authors": ["Jimmy Ba", "Volodymyr Mnih", "Koray Kavukcuoglu."], "venue": "Proceedings of the International Conference on Learning Representations (ICLR).", "year": 2015}, {"title": "Neural machine translation by jointly learning to align and translate", "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "International Conference on Learning Representations.", "year": 2015}, {"title": "Long short-term memory-networks for machine reading", "authors": ["Jianpeng Cheng", "Li Dong", "Mirella Lapata."], "venue": "arXiv preprint arXiv:1601.06733.", "year": 2016}, {"title": "Extracting tree-structured representations of trained networks", "authors": ["Mark W Craven", "Jude W Shavlik."], "venue": "Advances in neural information processing systems (NIPS).", "year": 1996}, {"title": "Learning hybrid representations to retrieve semantically equivalent questions", "authors": ["Cicero dos Santos", "Luciano Barbosa", "Dasha Bogdanova", "Bianca Zadrozny."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the", "year": 2015}, {"title": "Retrofitting word vectors to semantic lexicons", "authors": ["Manaal Faruqui", "Jesse Dodge", "Sujay K. Jauhar", "Chris Dyer", "Eduard Hovy", "Noah A. Smith."], "venue": "Proceedings of NAACL.", "year": 2015}, {"title": "Sparse overcomplete word vector representations", "authors": ["Manaal Faruqui", "Yulia Tsvetkov", "Dani Yogatama", "Chris Dyer", "Noah A. Smith."], "venue": "Proceedings of ACL.", "year": 2015}, {"title": "Building a shared world: mapping distributional to modeltheoretic semantic spaces", "authors": ["Aur\u00e9lie Herbelot", "Eva Maria Vecchi."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for Computational Lin-", "year": 2015}, {"title": "Teaching machines to read and comprehend", "authors": ["Karl Moritz Hermann", "Tomas Kocisky", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."], "venue": "Advances in Neural Information Processing Systems, pages 1684\u20131692.", "year": 2015}, {"title": "Training and analysing deep recurrent neural networks", "authors": ["Michiel Hermans", "Benjamin Schrauwen."], "venue": "Advances in Neural Information Processing Systems, pages 190\u2013198.", "year": 2013}, {"title": "Deep unordered composition rivals syntactic methods for text classification", "authors": ["Mohit Iyyer", "Varun Manjunatha", "Jordan Boyd-Graber", "Hal Daum\u00e9 III."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th", "year": 2015}, {"title": "Bag of tricks for efficient text classification", "authors": ["Armand Joulin", "Edouard Grave", "Piotr Bojanowski", "Tomas Mikolov."], "venue": "arXiv preprint arXiv:1607.01759.", "year": 2016}, {"title": "A convolutional neural network for modelling sentences", "authors": ["Nal Kalchbrenner", "Edward Grefenstette", "Phil Blunsom."], "venue": "Proceedings of the 52th Annual Meeting of the Association for Computational Linguistics.", "year": 2014}, {"title": "Visualizing and understanding recurrent networks", "authors": ["Andrej Karpathy", "Justin Johnson", "Fei-Fei Li."], "venue": "arXiv preprint arXiv:1506.02078.", "year": 2015}, {"title": "Mind the gap: A generative approach to interpretable feature selection and extraction", "authors": ["B Kim", "JA Shah", "F Doshi-Velez."], "venue": "Advances in Neural Information Processing Systems.", "year": 2015}, {"title": "Convolutional neural networks for sentence classification", "authors": ["Yoon Kim."], "venue": "Proceedings of the Empiricial Methods in Natural Language Processing (EMNLP 2014).", "year": 2014}, {"title": "Molding cnns for text: non-linear, non-consecutive convolutions", "authors": ["Tao Lei", "Regina Barzilay", "Tommi Jaakkola."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing (EMNLP).", "year": 2015}, {"title": "Semi-supervised question retrieval with gated convolutions", "authors": ["Tao Lei", "Hrishikesh Joshi", "Regina Barzilay", "Tommi Jaakkola", "Katerina Tymoshenko", "Alessandro Moschitti", "Llu\u0131\u0301s M\u00e0rquez"], "venue": "In Proceedings of the 2016 Conference of the North Ameri-", "year": 2016}, {"title": "Interpretable classifiers using rules and bayesian analysis: Building a better stroke prediction model", "authors": ["Benjamin Letham", "Cynthia Rudin", "Tyler H. McCormick", "David Madigan."], "venue": "Annals of Applied Statistics, 9(3):1350\u20131371.", "year": 2015}, {"title": "Visualizing and understanding neural models in nlp", "authors": ["Jiwei Li", "Xinlei Chen", "Eduard Hovy", "Dan Jurafsky."], "venue": "Proceedings of NAACL.", "year": 2016}, {"title": "Robotreviewer: evaluation of a system for automatically assessing bias in clinical trials", "authors": ["Iain J Marshall", "Jo\u00ebl Kuiper", "Byron C Wallace."], "venue": "Journal of the American Medical Informatics Association.", "year": 2015}, {"title": "From softmax to sparsemax: A sparse model of attention and multi-label classification", "authors": ["Andr\u00e9 F.T. Martins", "Ram\u00f3n Fernandez Astudillo."], "venue": "CoRR, abs/1602.02068.", "year": 2016}, {"title": "Learning attitudes and attributes from multi-aspect reviews", "authors": ["Julian McAuley", "Jure Leskovec", "Dan Jurafsky."], "venue": "Data Mining (ICDM), 2012 IEEE 12th International Conference on, pages 1020\u20131025. IEEE.", "year": 2012}, {"title": "Recurrent models of visual attention", "authors": ["Volodymyr Mnih", "Nicolas Heess", "Alex Graves"], "venue": "In Advances in Neural Information Processing Systems (NIPS)", "year": 2014}, {"title": " why should i trust you?\u201d: Explaining the predictions of any classifier", "authors": ["Marco Tulio Ribeiro", "Sameer Singh", "Carlos Guestrin."], "venue": "ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD).", "year": 2016}, {"title": "Reasoning about entailment with neural attention", "authors": ["Tim Rockt\u00e4schel", "Edward Grefenstette", "Karl Moritz Hermann", "Tom\u00e1\u0161 Ko\u010disk\u1ef3", "Phil Blunsom."], "venue": "International Conference on Learning Representations.", "year": 2016}, {"title": "A neural attention model for abstractive sentence summarization", "authors": ["Alexander M Rush", "Sumit Chopra", "Jason Weston."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing.", "year": 2015}, {"title": "Extracting rules from artificial neural networks with distributed representations", "authors": ["Sebastian Thrun."], "venue": "Advances in neural information processing systems (NIPS).", "year": 1995}, {"title": "The optimal reward baseline for gradient-based reinforcement learning", "authors": ["Lex Weaver", "Nigel Tao."], "venue": "Proceedings of the Seventeenth conference on Uncertainty in artificial intelligence.", "year": 2001}, {"title": "Simple statistical gradientfollowing algorithms for connectionist reinforcement learning", "authors": ["Ronald J Williams."], "venue": "Machine learning.", "year": 1992}, {"title": "Ask, attend and answer: Exploring question-guided spatial attention for visual question answering", "authors": ["Huijuan Xu", "Kate Saenko."], "venue": "arXiv preprint arXiv:1511.05234.", "year": 2015}, {"title": "Show, attend and tell: Neural image caption generation with visual attention", "authors": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Kyunghyun Cho", "Aaron Courville", "Ruslan Salakhudinov", "Rich Zemel", "Yoshua Bengio."], "venue": "Proceedings of the 32nd International Conference on", "year": 2015}, {"title": "Stacked attention networks for image question answering", "authors": ["Zichao Yang", "Xiaodong He", "Jianfeng Gao", "Li Deng", "Alex Smola."], "venue": "arXiv preprint arXiv:1511.02274.", "year": 2015}, {"title": "Using \u201dannotator rationales\u201d to improve machine learning for text categorization", "authors": ["Omar Zaidan", "Jason Eisner", "Christine D. Piatko."], "venue": "Proceedings of Human Language Technology Conference of the North American Chapter of the Association of Com-", "year": 2007}, {"title": "Rationale-augmented convolutional neural networks for text classification", "authors": ["Ye Zhang", "Iain James Marshall", "Byron C. Wallace."], "venue": "CoRR, abs/1605.04469.", "year": 2016}], "id": "SP:06d11bdd79c002f7cfdf9bcfa181f25c96f6009a", "authors": [{"name": "Tao Lei", "affiliations": []}, {"name": "Regina Barzilay", "affiliations": []}, {"name": "Tommi Jaakkola", "affiliations": []}], "abstractText": "Prediction without justification has limited applicability. As a remedy, we learn to extract pieces of input text as justifications \u2013 rationales \u2013 that are tailored to be short and coherent, yet sufficient for making the same prediction. Our approach combines two modular components, generator and encoder, which are trained to operate well together. The generator specifies a distribution over text fragments as candidate rationales and these are passed through the encoder for prediction. Rationales are never given during training. Instead, the model is regularized by desiderata for rationales. We evaluate the approach on multi-aspect sentiment analysis against manually annotated test cases. Our approach outperforms attention-based baseline by a significant margin. We also successfully illustrate the method on the question retrieval task.1", "title": "Rationalizing Neural Predictions"}