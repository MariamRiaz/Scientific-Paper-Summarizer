61	4	Independent and concurrent work (Acharya et al., 2017) obtained similar upper bounds for private identity and closeness testing.
64	4	We use [n] to denote the set {1, 2, .
71	8	(If kp qk1 ✏, we will say that p and q are ✏-far from each other.)
77	6	We will say that a tester is (✏, ⇠)-private, to mean that ✏ is the accuracy parameter, ⇠ is the privacy parameter, and the tester outputs the right answer with probability at least 2/31.
80	15	In this section, we provide a reduction of private identity testing (against a fixed distribution) to its special case of private uniformity testing.
82	3	Suppose we want to test identity between an unknown distribution p over [n] and an explicit distribution q.
83	3	The reduction of (Goldreich, 2016) transforms the distribution p into a new distribution p0, over a domain of size O(n), such that if p = q then p0 is the uniform distribution, and if p is far from q, p0 is also far from uniform.
94	3	, xs} 6: K 0 K + Lap(2/⇠) 7: T EU [K] C2/(2✏2) {where EU [K] equals to s · 1 1n s 1} 8: if K 0 < T then 9: Output reject.
103	3	Therefore, the greater the number of unique elements is, the more the distribution appears uniform.
116	3	In this subsection, we describe the private version of our collisions-based uniformity tester.
120	5	To overcome this obstacle, we add a pre-processing step to our tester.
135	4	By the Algorithm 2 Private uniformity tester based on the number of collisions: Private-Collisions-Uniformity 1: Input: Sample access to p, n, ✏, ⇠ 2: s ⇥ ✓p n ✏2 + p n logn ✏ ⇠1/2 + p nmax(1,log 1/⇠) ✏ ⇠ + 1 ✏2 ⇠ ◆ .
139	3	The difficulty appears in the complementary case, i.e., when f(X) is highly sensitive.
145	3	We have the following (see Appendix F for the proof): Theorem 4.2.
151	8	In this section, we give a private algorithm for testing equivalence of two unknown discrete distributions.
163	5	Since the sensitivity of Z is small, we can add a small amount of noise to it to make it private, using the Laplace mechanism.
165	4	Finally, we prove by the Chebyshev inequality that, with high probability, Z concentrates well around its expected value given the size of the sample set.
170	3	Before we describe our methodology and experimental results in detail, we make two crucial remarks.
186	3	We implemented PrivateUnique-Elements-Uniformity (Algorithm 1) and PrivateCollisions-Uniformity (Algorithm 2) to test the uniformity of a distribution in `1-distance.
188	4	Note that q is ✏-far from uniform in `1-distance.
208	3	We evaluate the various identity testers on two different pairs of distributions: (1) q+1 is the uniform distribution on [n], while q 1 assigns probability (1+✏)/n on half of the domain and probability (1 ✏)/n on the other half.
210	3	Testing uniformity is a special case of identity testing, and it is known to be essentially the hardest instance of this more general problem.
219	3	We remind the reader that (Gaboardi et al., 2016) did not provide any type II error guarantees for their tester MCGOF.
224	5	For given domain size n, to find the (approximately) minimum number of samples such that the error probability of the algorithm drops below 1/3, we proceed as follows: We start with an initial number of samples s. Then, we estimate the empirical error of the algorithm for these sample sets.
231	5	To evaluate the sample complexity of our algorithm, we use the tester to distinguish the following pairs: (q, q) and (p, q).
232	6	We set ✏ = 0.3, r = 200, and ⇠ = 0.2.
233	16	We calculate the required number of samples of this tester in order to achieve accuracy at least 2/3, for n raging from 104 up to 2⇥ 106, increasing n by 104 at each step.
234	41	As a point of comparison, we also implemented the nonprivate equivalence tester of (Chan et al., 2014).
235	194	As shown in Figure 5, the sample complexities of private and non-private equivalence testing are very close to each other.
236	200	This result was expected given the theoretical sample complexity of our equivalence tester, since the dependence on the privacy parameter ⇠ appears in an additive term, and is dominated by the other term, when ⇠ is a constant.
