{"sections": [{"text": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1455\u20131465, Lisbon, Portugal, 17-21 September 2015. c\u00a92015 Association for Computational Linguistics."}, {"heading": "1 Introduction", "text": "Semantic parsing, the task of mapping natural language (NL) sentences into a formal meaning representation language (MRL), has recently received a significant amount of attention with various models proposed over the past few years. Consider the NL sentence paired with its corresponding MRL in Figure 1(a). Semantic parsing can be\nnaturally viewed as a statistical machine translation (SMT) task, which translates a sentence in NL (i.e., the source language in SMT) into its meaning representation in MRL (i.e., the target language in SMT). Indeed, many attempts have been made to directly apply statistical machine translation (SMT) systems (or methodologies) to semantic parsing (Papineni et al., 1997; Macherey et al., 2001; Wong and Mooney, 2006; Andreas et al., 2013). However, although recent studies (Wong and Mooney, 2006; Andreas et al., 2013) show that semantic parsing with SCFGs, which form the basis of most existing statistical syntax-based translation models (Yamada and Knight, 2001; Chiang, 2007), achieves favorable results, this approach is still behind the most recent state-of-the-art. For details, please see performance comparison in Andreas et al. (2013) and Lu (2014).\nThe key issues behind the limited success of applying SMT systems directly to semantic parsing lie in the difference between semantic parsing and SMT: MRL is not a real natural language with different properties from natural language. First, MRL is machine-interpretable and thus strictly structured with the meaning representation in a nested structure of functions and arguments. Second, the two languages are intrinsically asymmetric since each token in MRL carries specific mean-\n1455\ning1 while this does not hold in NL since auxiliary words and some function words usually have no counterparts in MRL. Third and finally, the expressions in NL are more flexible with respect to lexicon selection and token ordering. For example, since sentences in NL \u2018could you tell me the states that utah borders\u2019, \u2018what states does utah border\u2019, and \u2018utah borders what states\u2019 convey the same meaning, they should have the same expression in MRL.\nMotivated by the above observations, we believe that semantic parsing with standard SMT components is not an ideal approach. Alternatively, this paper proposes an effective, yet simple way to enrich SCFG in hierarchical phrase-based SMT for better semantic parsing. Specifically, since the translation rules play a critical role in SMT, we explore to improve translation rule quality and increase its coverage in three ways. First, we enrich non-terminal symbols as to capture contextual and structured information. The enrichment of non-terminal symbols not only guides the translation in favor of well formed structures, but also is beneficial to translation. Second, we examine the difference between word alignments for semantic parsing and SMT to better adapt word alignment in SMT to semantic parsing. Third, unlike most existing SMT systems that keep unknown words untranslated and intact in translation, we exploit the translation of unknown words via synthetic translation rules. Evaluation on GeoQuery benchmark dataset shows that our approach obtains consistent improvement and achieves the state-of-the-art across various languages, including English, German and Greek."}, {"heading": "2 Background: Semantic Parsing as Statistical Machine Translation", "text": "In this section, we present the framework of semantic parsing as SMT, which was proposed in Andreas et al. (2013). Pre-Processing Various semantic formalisms have been considered for semantic parsing. Examples include the variable-free semantic representations (that is, the meaning representation for each utterance is tree-shaped), the lambda calculus expressions, and dependency-based compositional semantic representations. In this work, we specifi-\n1As seen in Section 2, delimiters, including parentheses and commas which do not carry any meaning will be removed in pre-processing and be recovered in post-processing\ncally focus on the variable-free semantic representations, as shown in Figure 1. On the target side, we convert these meaning representations to series of strings similar to NL. To do so, we simply take a preorder traversal of every functional form, and label every function with the number of arguments it takes. Figure 1(b) shows an example of converted meaning representation, where each token is in the format of A@B where A is the symbol while B is either s indicating that the symbol is a string or a number indicating the symbol\u2019s arity (constants, including strings, are treated as zeroargument functions).\nOn the source side, we perform stemming (for English and German) and lowercasing to overcome data sparseness.\nHereafter, we refer to the pre-processed NL and MRL as NL\u2032 and MRL\u2032 respectively. Translation Given a corpus of NL\u2032 sentences paired with MRL\u2032, we learn a semantic parser by adopting a string-to-string translation system. Typical components in such a translation system include word alignments between the source and the target languages, translation rule extraction, language model learning, parameter tuning and decoding. For more details about each component, please refer to (Chiang, 2007). In the rest of this paper, we refer to the source language (side) as NL\u2032, and the target language (side) as MRL\u2032. Post-Processing We convert MRL\u2032 back into MRL by recovering parentheses and commas to reconstruct the corresponding tree structure in MRL. This can be easily done by examining each symbol\u2019s arity. It eliminates any possible ambiguity from the tree reconstruction: given any sequence of tokens in MRL\u2032, we can always reconstruct the tree structure (if one exists). For those translations that can not be successfully converted, we call them ill-formed translations."}, {"heading": "3 Semantic Parsing with Enriched SCFG", "text": "In this section, we present the details of our enriched SCFG for semantic parsing."}, {"heading": "3.1 Enriched SCFG", "text": "In hierarchical phrase-based (HPB) translation models, synchronous rules take the form X \u2192 \u3008\u03b3, \u03b1,\u223c\u3009, where X is the non-terminal symbol, \u03b3 and \u03b1 are strings of lexical items and non-terminals in the source and target side respectively, and \u223c indicates the one-to-one cor-\nrespondence between non-terminals in \u03b3 and \u03b1. From an aligned phrase pair <state that border, state@1 next to 2@1> in Figure 2(a), for example, we can get a synchronous rule X \u2192\u2329 state X 1 , state@1 X 1 \u232a , where we use boxed indices to indicate which nonterminal occurrences are linked by\u223c. The fact that SCFGs in HPB models contain only one type of non-terminal symbol2 is responsible for ill-formed translation (e.g., answer@1 state@1). To this end, we enrich the nonterminals to capture the tree structure information, guiding the translation in favor of well-formed translations. The enrichment of non-terminals is two-fold: first, it can handle MRL with a nested structure to guarantee the well-formed translations; second, related studies in SMT have shown that introducing multiple non-terminal symbols in SCFGs benefits translation (Zollmann and Venugopal, 2006; Li et al., 2012).\nGiven a word sequence eij from position i to position j in MRL\u2032, we enrich the non-terminal symbol X to reflect the internal structure of the word sequence of eij . A correct translation rule selection therefore not only maps source terminals into target terminals, but is both constrained and guided by structure information in the nonterminals. As mentioned earlier, we regard the nested structure in MRL\u2032 as function-argument structure, where each function takes one or more arguments as input while its return serves as an argument to the outside function. As in Figure 1, function cityid holds two arguments and returns as an argument to function area 1. For a word sequence eij , we examine its completeness, which is defined as:\nDefinition 1. For word sequence eij , it is regarded as complete if it satisfies 1) every function (if exists) meets its argument requirement; and 2) it can serve as one argument to another function.\nWe use symbol C to label word sequences which are complete. For an incomplete word sequence, we examine 1) the number of arguments it requires on the right to be complete; and 2) the arity of a function it requires on the left to be complete. Then the sequence is labeled as (C\\Fm)/An, indicating it requires n arguments on the right and a function withm arities on the left. 3\n2In practice, non-terminal symbol S is used in glue rules. However, this is not relevant in the present discussion.\n3This is similar to the naming convention in combinatory categorial grammar (CCG) (Steedman, 2000)\n::::::::\nunderwave indicate the first and the sec-\nond phrases respectively.\nSpecifically, we omit \\Fm and /An if m = 0 and n = 0 respectively.4\nTable 1(a) demonstrates examples of phrase pairs in our enriched SCFG. For instance, word sequence stateid@1 texas@s is complete, and thus labeled as C. Similarly, to be complete, word sequence next to 2@1 requires one argument on the right side, labeled as C/A1 accordingly.\nWhen extracting translation rules from aligned datasets, we follow Chiang (2007) except that we use enriched non-terminal symbols rather than X . Each translation rule is associated with a set of translation model features {\u03c6i}, including phrase translation probability p (\u03b1 | \u03b3) and its inverse p (\u03b3 | \u03b1), the lexical translation probability plex (\u03b1 | \u03b3) and its inverse plex (\u03b3 | \u03b1), and a rule penalty that learns the preference for longer or shorter derivations. Inverted Glue Rules In SMT decoding (Chiang, 2007), if no rule (e.g., a rule whose left-hand side is X) can be applied or the length of the potential source span is larger than a pre-defined length (e.g., 10 as in Chiang (2007)), a glue rule (either S \u2192 \u2329X 1 , X 1 \u232a or S \u2192 \u2329S 1X 2 , S 1X 2 \u232a) will be used to simply stitch two consequent translated phrases together in a monotone way. Although this will reduce computational and modeling challenges, it obviously prevents some reasonable translation derivations because in certain cases, the order of phrases may be inverted on the target\n4If m = 0, it indicates that no function is needed.\nside. In this work, we additionally use an inverted glue rule which combines two non-terminals in a swapped way. Each glue rule, either straight or inverted, contains only two non-terminal symbols and is associated with two features, including phrase translation probability p (\u03b1 | \u03b3), and a glue rule penalty. Table 1(b) shows examples of a straight and an inverted glue rules. Moreover, these glue rules can be applied to any two neighboring translation nodes if the non-terminal symbols are matched."}, {"heading": "3.2 Word Alignment for Semantic Parsing", "text": "Word alignment is an essential step for rule extraction in SMT, where recognizing that wo shi in Chinese is a good translation for I am in English requires establishing a correspondence between wo and I, and between shi and am. In the SMT community, researchers have developed standard, proven alignment tools such as GIZA++ (Och and Ney, 2003), which can be used to train IBM Models 1-5. However, there is one fundamental problem with the IBM models (Brown et al., 1993): each word on one side can be traced back to exactly one particular on the other word (or the null token which indicates the word aligns to no word on the other side). Figure 2(a) shows an example of GIZA++ alignment output from source side to target side, from which we can see that each source word aligns to exactly one target word. While alignment of multiple target words to one source word is common in SMT, a trick is then to run IBM model training in both directions. Then two resulting word alignments can be symmetrized, for instance, taking the intersection or the union of alignment points of each alignment. For example, Figure 2(b) shows GIZA++ alignment output from target side to source side while Figure 2(c) shows the symmetrization result with widely used growdiag-final-and strategy.\nAlthough symmetrization of word alignments works for SMT, can it be applied to semantic parsing? There are reasons to be doubtful. Word alignment for semantic parsing differs from alignment for SMT in several important aspects, at least including:\n1. It is intrinsically asymmetric: within the semantic formalism used in this paper, NL\u2032 is often longer than MRL\u2032, and commonly contains words which have no counterpart in MRL\u2032.\n2. Little training data is available. SMT alignment models are typically trained in unsupervised fashion, inducing lexical correspondences from massive quantities of sentencealigned bitexts.\nConsequently, the symmetrization of word alignments may not work perfectly for semantic parsing. According to word alignment in Figure 2(c), a phrase extractor will generate a phrase pair \u3008have the highest, largest one@1\u3009, which is nonintuitive. By contrast, a more useful and general phrase pair \u3008highest, largest one@1\u3009 is typically excluded because largest one@1 aligns to all of have, the, and highest. Similarly, another useful phrase pair \u3008texas, texas@s\u3009 is prohibited since texas aligns to both stateid@1 and texas@s.\nIdeally a new semantic parsing aligner should be able to capture the semantic equivalence. Unfortunately we are not aware of any research on alignment for semantic parsing, possibly due to lack of a paucity of high quality, publicly available data from which to learn. Instead of developing new alignment algorithm for semantic parsing, we make use of all the alignments as shown in Figure 2. That is to say, we triple the training data with each sentence pair having three alignments, i.e., two alignments in both directions, and the symmetrization alignment.5 The advantages include: first, considering more possible alignments would increase the phrase coverage, especially when the training data is little; second, including the alignment from both directions would alleviate the error propagation caused by mis-aligned stop words (e.g., be, the in NL\u2032 and stateid@1 in MRL\u2032). As a result, the phrase extractor will include phrase pairs of both \u3008highest, largest one@1\u3009 and \u3008texas, texas@s\u3009. Our experiment shows that using the combination of all the three alignments achieve better performance than using any one, or any combination of two. Moreover, we found that we could achieve comparable performance even with manual alignment.\n5Combining multiple alignments from different alignment models usually improves translation performance in SMT (Tu et al., 2012). However, our preliminary experiments showed that this did not yield higher improvement in semantic parsing, which in turn also demonstrates the difference in alignments for semantic parsing and SMT."}, {"heading": "3.3 Synthetic Translation Rules for Unknown Word Translation", "text": "Most NLP tasks face the problem of unknown words, especially if only little training data is available. For example, it is estimated that 5.7% sentences in the (English) test data in our experiments have unknown words. Unknown words usually remain intact in the translation in most machine translation systems (Koehn et al., 2007; Dyer et al., 2010), resulting in the fact that certain translations can not be converted back to tree structures. This indicates that in semantic parsing the translation of a word can be from two categories: 1) a token in MRL; or 2) null (i.e., not translated at all), we generate synthetic translation rules for unknown word translation.\nAs a baseline, we simply skip unknown words as Kwiatkowski et al. (2010) by adding translation rules that translate them to null in MRL\u2032. Each such rule is accompanied with one feature indicating that it is a translation rule for unknown word.\nAlternatively, taking advantage of publicly available resources, we generate synthetic translation rules for unknown words pivoted by their semantically close words. Algorithm 1 illustrates the process to generate synthetic translation rules for unknown word translation. Given an unknown word wu, it generates its synthetic rules in two steps: 1) finding top n (e.g., 5 as in our experiments) close words via Word2Vec;6 and 2) generating synthetic translation rules based on the close\n6It is available at http://code.google.com/p/word2vec/. We use Word2Vec rather than other linguistic resources like WordNet because the approach can be easily adopted to other languages only if there exists large monolingual data to train Word2Vec models.\nAlgorithm 1: Generating synthetic translation rules for unknown words\nInput: Unknown word wu in the source language Source side training data vocabulary: W Lexical translation tables T1 and T2 (two directions) Output: Synthetic translation rule set R for wu 1. foreach word wi in W 2. si = sim(wu, wi) 3. get the top n words WB = {wb1...wbn} with the highest {si} 4. R = \u03c6 5. foreach wbi in WB 6. foreach tj such \u3008wbi, tj\u3009 in T1 and T2 7. R \u222a = generate rule(wu, wbi, tj , T1, T2) 8. return R\nsim: returns the similarity between wu and wi. generate rule: returns rule \u3008wu, tj\u3009 with a feature indicating the similarity between wu and wbi, and two features indicating the lexical translation probabilities from wbi to tj and the way around.\nwords. Note that it may generate a synthetic rule with null at the target side since the lexical translation table derived from aligned training data contains translation to null. Each synthetic translation rule for unknown words is associated with three features returned from function generate rule."}, {"heading": "4 Experimentation", "text": "In this section, we test our approach on the GeoQuery dataset, which is publicly available."}, {"heading": "4.1 Experimental Settings", "text": "Data GeoQuery dataset consists of 880 questions paired with their corresponding tree structured semantic representations. Following the experimental setup in Jones et al. (2012), we use the 600 question pairs to train and tune our SMT de-\ncoder, and evaluated on the remaining 280. Note that there is another version of GeoQuery dataset where the semantic representation is annotated with lambda calculus expressions and which is extensively studied (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2013). Performance on the version of lambda calculus is higher than that on the tree structured version, however, the results obtained over the two versions are not directly comparable.\nSMT Setting We use cdec (Dyer et al., 2010) as our HPB decoder. As mentioned above, 600 instances are used to train and tune our decoder. To get fair results, we split the 600 instances into 10 folds, each having 60 instances. Then for each fold, we use it as the tuning data while the other 540 instances and the NP list are used as training data.7 We use IRSTLM toolkit (Federico et al., 2008) to train a 5-gram LM on the MRL\u2032 side of the training data, using modified Kneser-Ney smoothing. We use Mira (Chiang et al., 2008) to tune the parameters of the system to maximize BLEU (Papineni et al., 2002). When extracting translation rules from aligned training data, we include both tight and untight phrases.\nEvaluation We use the standard evaluation criteria for evaluation by executing both the predicted MRL and the gold standard against the database and obtaining their respective answer. Specifically, we convert a translation from MRL\u2032 into MRL (if exists). The translation then is considered correct if and only if its MRL retrieves the same answers as the gold standard MRL (Jones et al., 2012), allowing for a fair comparison between our systems and previous works. As in Jones et al. (2012), we report accuracy, i.e. the percentage of translations with correct answers, and F1, i.e. the harmonic mean of precision (the proportion of correct answers out of translations with an answer) and recall (the proportion of correct answers out of all translations). In this section, we report our performance scores and analysis numbers averaged on our 10 SMT models.\n7The NP list is from GeoQUery dataset in Jones et al. (2012), which contains MRs for every noun phrase that appears in the NL utterances of each language. As in Andreas et al. (2013), the NP list is included by appending all entries as extra training sentences with 50 times the weight of regular training examples, to ensure that they are learned as translation rules."}, {"heading": "4.2 Experimental Results", "text": "Table 2 shows the results of (non-) enriched SCFG systems over different alignment settings. In Table 2, src2tgt and tgt2src indicate alignment of source to target direction and alignment of target to source direction, respectively; gdfa indicates symmetrization of alignment with growdiag-final-and strategy; src2tgt+tgt2src indicates doubling the training data with each sentence pair having both src2tgt and tgt2src alignments, similar for src2tgt+gdfa and tgt2src+gdfa; all indicates tripling the training data with each sentence pair having three alignments. Finally, gold indicates using gold alignment. 8 Effect of Enriched SCFG From Table 2, we observe that enriched SCFG systems outperform non-enriched SCFG systems over all alignment settings, indicating the effect of enriching nonterminals. In particular for tgt2src alignment, it obtains improvements of 3.5% in accuracy and 2.7% in F1.\nAs mentioned earlier, the non-enriched SCFG system may result in ill-formed translations, which can not be converted back to tree structure. One natural way to overcome this issue, as in Andreas et al. (2013), would be to simply filter n-best translation till a well-formed one is found. However, we see very limited performance changes in accuracy and F1, suggesting that the effect of using n-best translation is very limited. For example, after using n-best translation, the nonenriched SCFG system with all alignment obtains 82.0 in accuracy (increased from 81.5) and 84.5 in\n8We manually aligned sentence pairs in NL\u2032 and MRL\u2032.\nF1 (reduced from 85.2). Effect of Word Alignment With respect to the performance over different alignment settings, we have the following observations from Table 2:\n\u2022 Semantic parsing is substantially sensitive to alignment. Surprisingly, gdfa alignment, which is widely adopted in SMT, is inferior to tgt2src alignment. As expected, src2tgt alignment achieves the worst performance.\n\u2022 Thanks to the increased coverage, doubling the training data (e.g., rows of src2tgt+tgt2src, src2tgt+gdfa, and tgt2src+gdfa) usually outperforms its corresponding single alignment. Moreover, tripling the training data (e.g., rows of all) achieves slightly better performance than any way of doubling the training data. This is expected since the gdfa alignment actually comes from the alignments of src2tgt and tgt2src, thus doubling the training with src2tgt and tgt2src have already included most aligns in gdfa alignment.\n\u2022 Our approach of tripling the training data achieves comparable performance to the one with gold alignment, suggesting that instead of developing a brand new algorithm for semantic parsing alignment, we can simply make use of GIZA++ alignment output.\nIn terms of the src2tgt, tgt2src and gdfa alignments, the trend of the results is consistent over both non-enriched and enriched SCFG systems: the systems with tgt2src alignment work best while the systems with src2tgt alignment work worst. Next we look at the non-enriched SCFG systems to explore the behavior differences among the three alignments.\nWe examine the alignment accuracy against the gold alignment on training data (except the NP list part). As shown in Table 3, src2tgt has the highest recall while tgt2src has the highest precision. This is partly due to: 1) In src2tgt alignment, each source word aligns to exactly one particular target word (or the null token), resulting in frequent\nalignment errors for source side words that have no counterpart in target side. For example, both words of the and be on source side, which play functional roles in NL, rather than semantic roles, align to 15 different target words. 2) Except for a few words on target side, including stateid@1, all@0 which have strong occurrence patterns (e.g., stateid@1 is always followed by a state name), each word has counterpart on source side.\nAs to have a clearer understanding on the individual contribution of using enriched nonterminals and multiple word alignments, Table 4 presents two confusion matrices which show numbers of sentences that are correctly/wrongly parsed by three SMT systems on English test sentences. It shows that, for example, 211 sentences are correctly parsed by both non-enriched and enriched SCFG systems with gdfa alignment. Moving from performance of the non-enriched SMT system with gdfa alignment to that of the enriched SMT system with all alignment, we observe that on average more than half of the improvement comes from using multiple word alignments, the rest from using enriched non-terminals. Effect of Unknown Word Translation Since each of our SMT model is actually trained on 540 instances (plus the NP list), the rate of unknown words in the test data tends to be higher than that in a system trained with the whole 600 instances. Based on the system of enriched SCFG with all alignment, Table 5 shows the results of applying unknown word translation. It shows that translating all unknown words into null obtains 2.4 points in accuracy over the system without it (e.g., 85.3 vs. 82.9). However, the slight improvement in F1 (e.g., 86.3 vs. 86.1) suggests that there are many scenarios that translating unknown words into null is incorrect. Fortunately, our semantic approach is partially able to generate correct translation rules for those unknown words which have translation in MRL\u2032. Actually, the effect of our approach is highly dependent on the quality of the close words found via Word2Vec. With a manual examination\non the test data, we found that 11 out of all 17 unknown words should be translated into a corresponding token in MRL. For 8 of them, the synthetic translation rule set returned by Algorithm 1 contains correct translation rules.\nEffect across Different Languages We have also tested our approach on the same dataset with other three languages. Specifically, while we are not aware of public resources to looking for semantically close words in German, Greek and Thai, we translate unknown words into null for the three languages. Table 6 shows the performance over four different languages. It shows that our approach, including enriched SCFG, tripling training data with three alignments, and unknown word translation, obtains consistent improvement over the four languages.\nDecoding Time Analysis We analyze the effect on the decoding time of our approach, which is closely related to the size of phrase tables. Firstly, splitting non-terminal X into enriched ones increases the size of phrase tables. 9 This is not surprising since a phrase with non-terminal X (e.g., the X on the source side) may be further specified as multiple phrases with various nonterminals (e.g., the C, the C/A1, etc.). As a result, the average number of phrases per sentence (in English test data, hereafter) increases from 453 to 893 while the decoding time of the SMT decoder increases from 0.11 seconds to 0.19 seconds per sentence on average. Secondly, using multiple alignments also leads to larger phrase tables. This is illustrated by the increase of average number of phrases per sentence from 893 to 2055 while the decoding time moves from 0.19 seconds to 0.38 seconds per sentence on average. Finally, finding similar words via Word2Vec, however, is quite fast since this is bounded by the vocabulary size of our training set. Thanks to the small size of unknown words, adding unknown word translation rules has a very limited impact on the size of phrase table, consequently negligible changes on decoding time.\n9In cdec, we generate a phrase table for each sentence."}, {"heading": "5 Related Work", "text": "While there has been substantial work on semantic parsing, we focus our discussions on several approaches (e.g., SCFG approach, hybrid tree approach, and others approaches) that focus on the variable-free semantic representations.\nWASP (Wong and Mooney, 2006) was strongly influenced by SMT techniques. Although WASP was also using multiple non-terminal symbols in SCFG to guarantee well-formed translations, our work differs from theirs in at least three ways. First, we use a different inventory of non-terminal symbols from theirs which was derived from MRL parses in the GeoQuery dataset. Second, to avoid the issues caused by word alignment between NL and MRL, we triple training data with each sentence pair having multiple alignments. However, WASP used a sequence of productions to represent MRL before running GIZA++. Third, we use typical features in HPB SMT (e.g., phrase translation probabilities, lexical translation probabilities, language model feature, etc.) while WASP used rule identity features. SMT-SemParse (Andreas et al., 2013) adapted standard SMT components for semantic parsing. The present work is based on theirs with all the extensions detailed in Section 3.\nHYBRIDTREE+ (Lu et al., 2008) learned a synchronous generative model which simultaneously generated a NL sentence and an MRL tree. tsVB (Jones et al., 2012) used tree transducers, which were similar to the hybrid tree structures, to learn a generative process under a Bayesian framework. RHT (Lu, 2014) defined distributions over relaxed hybrid tree structures that jointly represented both sentences and semantics. Most recently, f-RHT (Lu, 2015) introduced constrained semantic forests to improve RHT model.\nSCISSOR (Ge and Mooney, 2005) augmented syntactic parse tree with semantic information and then performed integrated semantic and syntactic parsing to NL sentences. KRISP (Mooney, 2006) used string classifiers to label substrings of an NL with entities from the meaning representation. UBL (Kwiatkowski et al., 2010) performed semantic parsing with an automatically-induced CCG lexicon.\nTable 7 shows the evaluation results of our system as well as those of several other comparable related works which share the same experiment setup as ours. We can observe from Table 7 that semantic parsing with SMT components gives\ncompetitive performance when all the extensions (described in Section 3) are used. Specifically, it significantly outperforms the semantic parser with standard SMT components (Andreas et al., 2013). Our approach reports the best accuracy and F1 scores on English, German, and Greek. While we are able to obtain improvement on Thai, the performance is still lower than those of RHT and TREETRANS. This is probably because of the low quality of word alignment output between this Asian language and MRL."}, {"heading": "6 Conclusion and Future Work", "text": "In this paper, we have presented an enriched SCFG approach for semantic parsing which realizes the potential of the SMT approach. The performance improvement is contributed from the extension of translation rules with informative symbols and increased coverage. Such an extension share a similar spirit as generalization of a CCG lexicon for CCG-based semantic parser (Kwiatkowski et al., 2011; Wang et al., 2014). Experiments on benchmark data have shown that our model is competitive to previous work and achieves state-of-the-art performance across a few different languages.\nRecently the research of semantic parsing in open domain with weakly (or un-) supervised setups, under different settings where the goal was to optimize the performance of certain downstream NLP tasks such as answering questions, has received a significant amount of attention (Poon and Domingos, 2009; Clarke et al., 2010; Berant et al., 2013; Berant and Liang, 2014). One direc-\ntion of our future work is to extend the current framework to support the generation of synthetic translation rules from weaker signals (e.g., from question-answer pairs), rather than from aligned parallel data.\nWe also noticed recent advance in tree-based SMT. Applying such string-to-tree or tree-to-tree translation models (Yamada and Knight, 2001; Shen et al., 2008) to semantic parsing will naturally resolve the inconsistent semantic structure issue, though they require additional information to generate tree labels on the target side. However, due to the constraint that each target phrase needs to map to a syntactic constituent, phrase tables in tree-based translation models usually suffer from the low coverage issue, especially if the training data size is small. Therefore, another direction of our future work is to explore specific problems that will emerge when employing tree-based SMT systems to semantic parsing, and provide solutions to them."}, {"heading": "Acknowledgments", "text": "The authors would like to thank Zhaopeng Tu, S. Matthew English and three anonymous reviewers for providing helpful suggestions, and also acknowledge Jacob Andreas for help in running SMT-SemParse. Junhui Li and Guodong Zhou were supported partially by NSFC grants, No.61273320, No.61331011, No.61305088, No.61401295. Wei Lu was supported by SUTD grant SRG ISTD 2013 064."}], "year": 2015, "references": [{"title": "Semantic parsing as machine translation", "authors": ["Jacob Andreas", "Andreas Vlachos", "Stephen Clark."], "venue": "Proceedings of ACL 2013, pages 47\u201352.", "year": 2013}, {"title": "Semantic parsing via paraphrasing", "authors": ["Jonathan Berant", "Percy Liang."], "venue": "Proceedings of ACL 2014, pages 1415\u20131425.", "year": 2014}, {"title": "Semantic parsing on freebase from question-answer pairs", "authors": ["Jonathan Berant", "Andrew Chou", "Roy Frostig", "Percy Liang."], "venue": "Proceedings of EMNLP 2013, pages 1533\u20131544.", "year": 2013}, {"title": "The mathematics of statistical machine translation: Parameter estimation", "authors": ["Peter E. Brown", "Stephen A. Della Pietra", "Vincent J. Della Pietra", "Robert L. Mercer."], "venue": "Computational Linguistics, 19(2):263\u2013313.", "year": 1993}, {"title": "Online large-margin training of syntactic and structural translation features", "authors": ["David Chiang", "Yuval Marton", "Philip Resnik."], "venue": "Proceedings of EMNLP 2008, pages 224\u2013233.", "year": 2008}, {"title": "Hierarchical phrase-based translation", "authors": ["David Chiang."], "venue": "Computational Linguistics, 33(2):201\u2013228.", "year": 2007}, {"title": "Driving semantic parsing from the worlds response", "authors": ["James Clarke", "Dan Goldwasser", "Ming-Wei Chang", "Dan Roth."], "venue": "Proceedings of CoNLL 2010, pages 18\u201327.", "year": 2010}, {"title": "cdec: A decoder, alignment, and learning framework for finite-state and context-free translation models", "authors": ["Chris Dyer", "Adam Lopez", "Juri Ganitkevitch", "Jonathan Weese", "Ferhan Ture", "Phil Blunsom", "Hendra Setiawan", "Vladimir Eidelman", "Philip Resnik"], "year": 2010}, {"title": "IRSTLM: an open source toolkit for handling large scale language models", "authors": ["Marcello Federico", "Nicola Bertoldi", "Mauro Cettolo."], "venue": "Proceedings of Interspeech 2008, pages 1618\u20131621.", "year": 2008}, {"title": "A statistical semantic parser that integrates syntax and semantics", "authors": ["Ruifang Ge", "Raymond Mooney."], "venue": "Proceedings of CoNLL 2006, pages 9\u201316.", "year": 2005}, {"title": "Semantic parsing with bayesian tree transducers", "authors": ["Bevan Jones", "Mark Johnson", "Sharon Goldwater."], "venue": "Proceedings of ACL 2012, pages 488\u2013496.", "year": 2012}, {"title": "Inducing probabilistic CCG grammars from logical form with higherorder unification", "authors": ["Tom Kwiatkowski", "Luke Zettlemoyer", "Sharon Goldwater", "Mark Steedman."], "venue": "Proceedings of EMNLP 2010, pages 1223\u20131233.", "year": 2010}, {"title": "Lexical generalization in ccg grammar induction for semantic parsing", "authors": ["Tom Kwiatkowski", "Luke Zettlemoyer", "Sharon Goldwater", "Mark Steedman."], "venue": "Proceedings of EMNLP 2011, pages 1512\u20131523.", "year": 2011}, {"title": "Scaling semantic parsers with on-the-fly ontology matching", "authors": ["Tom Kwiatkowski", "Eunsol Choi", "Yoav Artzi", "Luke Zettlemoyer."], "venue": "Proceedings of EMNLP 2013, pages 1545\u20131556.", "year": 2013}, {"title": "Using syntactic head information in hierarchical phrase-based translation", "authors": ["Junhui Li", "Zhaopeng Tu", "Guodong Zhou", "Josef van Genabith."], "venue": "Proceedings of WMT 2012, pages 232\u2013242.", "year": 2012}, {"title": "Learning dependency-based compositional semantics", "authors": ["Percy Liang", "Michael I. Jordan", "Dan Klein."], "venue": "Proceedings of ACL 2011, pages 590\u2013599.", "year": 2011}, {"title": "A generative model for parsing natural language to meaning representations", "authors": ["Wei Lu", "Hwee Tou Ng", "Wee Sun Lee", "Luke S. Zettlemoyer."], "venue": "Proceedings of EMNLP 2008, pages 783\u2013792.", "year": 2008}, {"title": "Semantic parsing with relaxed hybrid trees", "authors": ["Wei Lu."], "venue": "Proceedings of EMNLP 2014, pages 1308\u2013 1318.", "year": 2014}, {"title": "Constrained semantic forests for improved discriminative semantic parsing", "authors": ["Wei Lu."], "venue": "Proceedings of ACL-IJCNLP 2015, pages 737\u2013742.", "year": 2015}, {"title": "Natural language understanding using statistical machine translation", "authors": ["Klaus Macherey", "Franz Josef Och", "Hermann Ney."], "venue": "Proceedings of EuroSpeech 2001, pages 2205\u20132208.", "year": 2001}, {"title": "Using string-kernels for learning semantic parsers", "authors": ["Rohit J. Kate", "Raymond J. Mooney."], "venue": "Proceedings of ACL-COLING 2006, pages 913\u2013920.", "year": 2006}, {"title": "A systematic comparison of various statistical alignment models", "authors": ["Franz Josef Och", "Hermann Ney."], "venue": "Computational Linguistics, 29(1):19\u201351.", "year": 2003}, {"title": "Feature-based language understanding", "authors": ["Kishore A. Papineni", "Salim Roukos", "Todd Ward."], "venue": "Proceedings of EuroSpeech 1997, pages 1435\u20131438.", "year": 1997}, {"title": "BLEU: A method for automatic evaluation of machine translation", "authors": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "WeiJing Zhu."], "venue": "Proceedings of ACL 2002, pages 311\u2013318.", "year": 2002}, {"title": "Unsupervised semantic parsing", "authors": ["Hoifung Poon", "Pedro Domingos."], "venue": "Proceedings of EMNLP 2009, pages 1\u201310.", "year": 2009}, {"title": "A new string-to-dependency machine translation algorithm with a target dependency language model", "authors": ["Libin Shen", "Jinxi Xu", "Ralph Weischedel."], "venue": "Proceedings of ACL 2008, pages 577\u2013585.", "year": 2008}, {"title": "The syntactic process", "authors": ["Mark Steedman."], "venue": "The MIT Press.", "year": 2000}, {"title": "Combining multiple alignments to improve machine translation", "authors": ["Zhaopeng Tu", "Yang Liu", "Yifan He", "Josef van Genabith", "Qun Liu", "Shouxun Lin."], "venue": "Proceedings of COLING 2012: Posters, pages 1249\u20131260.", "year": 2012}, {"title": "Morpho-syntactic lexical generalization for ccg semantic parsing", "authors": ["Adrienne Wang", "Tom Kwiatkowski", "Luke Zettlemoyer."], "venue": "Proceedings of EMNLP 2014, pages 1284\u20131295.", "year": 2014}, {"title": "Learning for semantic parsing with statistical machine translation", "authors": ["Yuk Wah Wong", "Raymond Mooney."], "venue": "Proceedings of HLT-NAACL 2006, pages 439\u2013446.", "year": 2006}, {"title": "Learning synchronous grammars for semantic parsing with lambda calculus", "authors": ["Yuk Wah Wong", "Raymond Mooney."], "venue": "Proceedings of ACL 2007, pages 960\u2013967.", "year": 2007}, {"title": "A syntaxbased statistical translation model", "authors": ["Kenji Yamada", "Kevin Knight."], "venue": "Proceedings of ACL 2001, pages 523\u2013530.", "year": 2001}, {"title": "Learning to map sentences to logical form: Structured classification with probabilistic categorial grammars", "authors": ["Luke S. Zettlemoyer", "Michael Collins."], "venue": "Proceedings of UAI 2005, pages 658\u2013 666.", "year": 2005}, {"title": "Syntax augmented machine translation via chart parsing", "authors": ["Andreas Zollmann", "Ashish Venugopal."], "venue": "Proceedings of WMT 2006, pages 138\u2013141.", "year": 2006}], "id": "SP:c1126946f05f200b6f0ef9a6d42fdeaa5b0ef0d2", "authors": [{"name": "Junhui Li", "affiliations": []}, {"name": "Muhua Zhu", "affiliations": []}, {"name": "Wei Lu", "affiliations": []}, {"name": "Guodong Zhou", "affiliations": []}], "abstractText": "Semantic parsing maps a sentence in natural language into a structured meaning representation. Previous studies show that semantic parsing with synchronous contextfree grammars (SCFGs) achieves favorable performance over most other alternatives. Motivated by the observation that the performance of semantic parsing with SCFGs is closely tied to the translation rules, this paper explores extending translation rules with high quality and increased coverage in three ways. First, we introduce structure informed non-terminals, better guiding the parsing in favor of well formed structure, instead of using a uninformed non-terminal in SCFGs. Second, we examine the difference between word alignments for semantic parsing and statistical machine translation (SMT) to better adapt word alignment in SMT to semantic parsing. Finally, we address the unknown word translation issue via synthetic translation rules. Evaluation on the standard GeoQuery benchmark dataset shows that our approach achieves the state-of-the-art across various languages, including English, German and Greek.", "title": "Improving Semantic Parsing with Enriched Synchronous Context-Free Grammar"}