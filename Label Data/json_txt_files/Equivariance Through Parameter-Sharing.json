{"sections": [{"text": "Given enough training data, a multi-layer perceptron would eventually learn the domain invariances in a classification task. Nevertheless, success of convolutional and recurrent networks suggests that encoding the domain symmetries through shared parameters can significantly boost the generalization of deep neural networks. The same observation can be made in deep learning for semi-supervised and unsupervised learning in structured domains. This raises an important question that is addressed in this paper: What kind of priors on input/output structure can be encoded through parameter-sharing?\nThis work is an attempt at answering this question, when our priors are in the form discrete domain symmetries. To formalize this type of prior, a family of transformations of input and output to a neural layer are expressed as group \u201caction\u201d on the input and output. The resulting neural network is invariant to this action, if transformations of the input within that particular family, does not change the output (e.g., rotation-invariance). However, if the output is transformed, in a predictable way, as we transform the input, the neural layer is equivariant to the action of the group.\n1School of Computer Science, Carnegie Mellon University, 5000 Forbes Ave., Pittsburgh, PA, USA 15217. Correspondence to: Siamak Ravanbakhsh <mravanba@cs.cmu.edu>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nOur goal is to show that parameter-sharing can be used to achieve equivariance to any discrete group action.\nApplication of group theory in machine learning has been the topic of various works in the past (e.g., Kondor, 2008; Barto\u0301k et al., 2010). In particular, many probabilistic inference techniques have been extended to graphical models with known symmetry groups (Raedt et al., 2016; Kersting et al., 2009; Bui et al., 2012; Niepert, 2012). Deep and hierarchical models have used a variety of techniques to study or obtain representations that isolate transformations from the \u201ccontent\u201d (e.g., Hinton et al., 2011; Jayaraman & Grauman, 2015; Lenc & Vedaldi, 2015; Agrawal et al., 2015). The simplest method of achieving equivariance is through data-augmentation (Krizhevsky et al., 2012; Dieleman et al., 2015). Going beyond augmentation, several methods directly apply the group-action, in one way or another, by transforming the data or its encodings using group members (Jaderberg et al., 2015; Anselmi et al., 2013; Dieleman et al., 2016). An alternative path to invariance via harmonic analysis. In particular cascade of wavelet transforms is investigated in (Bruna & Mallat, 2013; Oyallon & Mallat, 2015; Sifre & Mallat, 2013). More recently (Cohen & Welling, 2016b) study steerable filters (e.g., Freeman et al., 1991; Hel-Or & Teo, 1998) as a general mean for achieving equivariance in deep networks. Invariance and equivariance through parameter-sharing is also discussed in several prior works (Cohen & Welling, 2016a; Gens & Domingos, 2014).\nThe desirability of using parameter-sharing for this purpose is mainly due to its simplicity and computational efficiency. However, it also suggests possible directions for discovering domain symmetries through regularization schemes. Following the previous work on the study of symmetry in deep networks, we rely on group theory and group-actions to formulate invariances and equivariances of a function. Due to discrete nature of parameter-sharing, our treatment here is limited to permutation groups. Action of a permutation group G can model discrete transformations of a set of variables, such as translation and 90\u25cb rotation of pixels around any center in an image. If the output of a function transforms with a G-action as we transform its input with a different G-action, the function is equivariant with respect to action of G. For example, in a convolution layer, as we translate the input, the feature-maps are also translated. If ar X\niv :1\n70 2.\n08 38\n9v 2\n[ st\nat .M\nL ]\n1 3\nJu n\n20 17\nthe output does not transform at all, the function is invariant to the action of G. Therefore, invariance is a special equivariance. In this example, different translations correspond to the action of different members of G.\nThe novelty of this work is its focus on the \u201cmodel symmetry\u201d as a gateway to equivariance. This gives us new theoretical guarantees for a \u201cstrict\u201d notion of equivariance in neural networks. The core idea is simple: consider a colored bipartite graph \u2126 representing a neural network layer. Edges of the same color represent tied parameters. This neural network layer as a function is equivariant to the actions of a given group G (and nothing more) iff the action of G is the symmetry group of \u2126 \u2013 i.e., there is a simple bijection between parameter symmetries and equivariences of the corresponding neural network.\nThe problem then boils down to designing colored bipartite graphs with given symmetries, which constitutes a major part of this paper. Fig. 1 demonstrates this idea.1\nFor the necessary background on group theory see the Appendix. In the following, Section 1 formalizes equivariance wrt discrete group action. Section 2 relates the model symmetries a neural layer to its equivariance. Section 3 then builds on this observation to introduce two procedures for parameter-sharing that achieves a desirable equivariance.\n1Throughout this paper, since we deal with finite sets, we use circular shift and circular convolution instead of shift and convolution. The two can be made identical with zero-padding of the input.\nHere, we also see how group and graph convolution as well as deep-sets become special instances in our parametersharing procedure, which provides new insight and improved design in the case of group convolution. Where input and output of the layer have a one-to-one mapping, we see that the design problem reduces a well-known problem in combinatorics."}, {"heading": "1. Group Action and Equivariance", "text": "Let x = [x1, . . . , xN ] \u2208 XN denote a set of variables and G = {g} be a finite group. The discrete action of G on x is in the form of permutation of indices in N = {1, . . . ,N}. This group is a subgroup of the symmetric group SN; the group of all N ! permutations of N objects. We use \u00d0\u2192 N = [1, . . . ,N] to denote the ordered counterpart to N and the G-action on this vector g \u00d0\u2192 N \u2250 [g1, . . . ,gN] is a simple permutation. Using x\u00d0\u2192 N\nto denote x, the discrete action of g \u2208 G on x \u2208 XN is given by gx\u00d0\u2192\nN \u2250 x g \u00d0\u2192 N .\nG-action on N is a permutation group that is not necessarily isomorphic to G itself. GN \u2264 G captures the structure of G when it acts on N. We use gN to denote the image of g \u2208 G in GN. G-action is faithful iff two groups are isomorphic G \u2245 GN \u2013 that is G-action preserves its structure. In this case, each g \u2208 G maps to a distinct permutation g \u00d0\u2192 N \u2260 g\u2032\u00d0\u2192N\u2200g,g\u2032 \u2208 G. Given any G-action on N we can efficiently obtain GN; see Appendix.\nExample 1.1 (Cyclic Group) Consider the cyclic group G = Z6 and define its action on x \u2208 R3 by defining it on the index set N = {1,2,3} as gn \u2250 g + n mod 3\u2200g \u2208 Z6. This action is not faithful. For example, the action of g = 1 and g = 4 result in the same permutations of variables in x; i.e., single-step of circular shift to the right. With the above action, the resulting permutation group GN is isomorphic to Z3 < Z6. Now consider the same group G = Z6 with a different action on N: gn \u2250 g \u2212 n mod 3\u2200g \u2208 Z6, where we replaced (+) with (\u2212). Let G\u0303N be the resulting permutation group. Here again G\u0303N \u2245 Z3. Although isomorphic, G\u0303N \u2260 GN, as they are different permutation groups of N.\nConsider the function \u03c6 \u2236 XN \u2192 YM and let GN and GM be the action of G on input/output index sets N and M.\nDefinition 1.1 The joint permutation group GN,M is a subdirect product (or pairing) of GN and GM\nGN,M = GN \u2299GM \u2250 {(gN,gM) \u2223 g \u2208 G}.\nWe are now ready to define equivariance and invariance. \u03c6(\u22c5) is GN,M-equivariant iff\ngN\u03c6(x) = \u03c6(gMx) \u2200x \u2208 XN , (gN,gM) \u2208 GN,M (1)\nMoreover, if GM = {e} is trivial, we have\ngN\u03c6(x) = \u03c6(x) \u2200x \u2208 XN ,gN \u2208 GN and \u03c6(\u22c5) is GN-invariant. gN and gM can also be represented using permutation matrices GN \u2208 {0,1}N\u00d7N , and GM \u2208 {0,1}M\u00d7M . Equivariance relation of (1) then becomes\nGM\u03c6(x) = \u03c6(GNx)\u2200x \u2208 XN , (GN,GM) \u2208 GN,M (2)\nThe following observation shows that the subgroup relationship affects equivariance and invariance.\nObservation 1.1 If the function \u03c6 \u2236 XN \u2192 YM is GN,M - equivariant, then it is also HN,M -equivariant for any permutation group HN,M < G.\nExample 1.2 (Reverse Convolution) Consider the cyclic group G = Z6 and for g \u2208 G, define the action on N = {1,2,3} to be gn \u2250 g + n mod 3. Also let its action on M = {1, . . . ,6} be gm \u2250 g \u2212 n mod 6. In other words, G-action on N performs circular shift to the right and its action on M shifts variables to the left. Examples of the permutation matrix representation for\ntwo members of GN and GM are\n2N = ( 0 1 0 0 0 1 1 0 0 ) 2M = \u239b \u239c \u239d 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 \u239e \u239f \u23a0\ncorresponding to right and left shift on vectors of different lengths. Now consider the function \u03c6 \u2236 RN \u2192 RM\n\u03c6W(x) =Wx WT = ( 0 a b 0 a b a b 0 a b 0 b 0 a b 0 a ) \u2200a, b \u2208 R\nUsing permutation matrices one could check the equivariance condition (2) for this function. We can show that \u03c6 is equivariant to GN,M. Consider 2 \u2208 Z6 and its images 2N \u2208 GN and 2M \u2208 GM. L.h.s. of (2) is\n2M\u03c6W(x) = \u239b \u239c \u239d 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 \u239e \u239f \u23a0 \u239b \u239c \u239d 0 a b a b 0 b 0 a 0 a b a b 0 b 0 a \u239e \u239f \u23a0 x = \u239b \u239c \u239d b 0 a 0 a b a b 0 b 0 a 0 a b a b 0 \u239e \u239f \u23a0 x\nwhich is equal to its r.h.s.\n\u03c6W(2Nx) = \u239b \u239c \u239d 0 a b a b 0 b 0 a 0 a b a b 0 b 0 a \u239e \u239f \u23a0 ( 0 1 00 0 1 1 0 0 )x = \u239b \u239c \u239d b 0 a 0 a b a b 0 b 0 a 0 a b a b 0 \u239e \u239f \u23a0 x\nfor any x. One could verify this equality for all g \u2208 Z6. Now consider the group HN,M < GN,M, where HN = GN and members of HM = {0,2,4}, perform left circular shift of length 0,2 and 4. It is easy to see that HN,M \u2245 Z3. Moreover since HN,M < GN,M, \u03c6(\u22c5) above is HN,Mequivariant as well. However, one prefers to characterize the equivariance properties of \u03c6 using GN,M rather than HN,M.\nThe observation above suggests that GN,M-equivariance is not restrictive enough. As an extreme case, a constant function \u03c6(x) = 1 is equivariant to any permutation group GN,M \u2264 SN \u00d7 SM. In this case equivariance of \u03c6 with respect to a particular GN,M is not very informative to us. To remedy this, we define a more strict notion of equivariance.\nDefinition 1.2 we say a function \u03c6 \u2236 XN \u2192 YM is uniquely G-equivariant iff it is G-equivariant and it is \u201cnot\u201d H-equivariant for any H > G."}, {"heading": "2. Symmetry Groups of a Network", "text": "Given a group G, and its discrete action through GN,M, we are interested in defining parameter-sharing schemes for a parametric class of functions that guarantees their unique GN,M-equivariance. We start by looking at a single neural layer and relate its unique GN,M-equivariance to the symmetries of a colored multi-edged bipartite graph that de-\nfines parameter-sharing. We then show that the idea extends to multiple-layers.\nDefinition 2.1 A colored multi-edged bipartite graph \u2126 = (N,M, \u03b1) is a triple, where N and M are its two sets of nodes, and \u03b1 \u2236 N \u00d7 M \u2192 2{1,...,C} is the edge function that assigns multiple edge-colors from the set {1, . . . ,C} to each edge. Non-existing edges receive no color.\nWe are interested in the symmetries of this structure. The set of permutations (\u03c0N, \u03c0M) \u2208 SN \u00d7 SM of nodes (within each part of the bipartite graph) that preserve all edgecolors define the Automorphism Group Aut(\u2126) \u2264 SN \u00d7 SM \u2013 that is \u2200(n,m) \u2208 N \u00d7M\n(\u03c0N, \u03c0M) \u2208Aut(\u2126) \u21d4 \u03b1(n,m) = \u03b1((\u03c0Nn,\u03c0Mm)) (3)\nAlternatively, to facilitate the notation, we define the same structure (colored multi-edged bipartite graph) as a set of binary relations between N and M \u2013 that is \u2126 = (N,M,{\u2206c}1\u2264c\u2264C) where each relation is associated with one color \u2206c = {(n,m) \u2223 c \u2208 \u03b1(n,m)\u2200(n,m) \u2208 N \u00d7M}. This definition of structure, gives an alternative expression for Aut(\u2126)\n(\u03c0N, \u03c0M) \u2208Aut(\u2126) \u21d4 (4)\n((n,m) \u2208 \u2206c \u21d4 (\u03c0Nn,\u03c0Mm) \u2208 \u2206c) \u2200c, n,m\nThe significance of this structure is in that, it defines a parameter-sharing scheme in a neural layer, where the same edge-colors correspond to the same parameters. Consider the function \u03c6 \u2250 [\u03c61, . . . , \u03c6M ] \u2236 RN \u2192 RM\n\u03c6m(x;w,\u2126) \u2250 \u03c3(\u2211 n \u2211 c\u2208\u03b1(n,m) wcxn) \u2200m (5)\nwhere \u03c3 \u2236 R \u2192 R is a strictly monotonic nonlinearity and w = [w1, . . .wc, . . . ,wC] is the parameter-vector for this layer.\nThe following key theorem relates the equivariances of \u03c6(\u22c5;w,\u2126) to the symmetries of \u2126.\nTheorem 2.1 For any w \u2208 RC s.t., wc \u2260 wc\u2032\u2200c, c\u2032, the function \u03c6(\u22c5;w,\u2126) is uniquely Aut(\u2126)-equivariant.\nCorollary 2.2 For any HN,M \u2264 Aut(\u2126), the function \u03c6(\u22c5;w,\u2126) is HN,M-equivariant.\nThe implication is that to achieve unique equivariance for a given group-action, we need to define the parametersharing using the structure \u2126 with symmetry group GN,M.\nExample 2.1 (Reverse Convolution) Revisiting Example 1.2 we can show that the condition of Theorem 2.1 holds. In this case \u03c3(x) = x and the parameter-sharing of the matrix W is visualized below, where we used two different line styles for a, b \u2208 R.\nIn this figure, the circular shift of variables at the output and input level to the left and right respectively, does not change the edge-colors. For example in both cases node 1 \u2019s connection to nodes 3 , 6 using dashed-lines is preserved.\nSix repetitions of this action produces different permutations corresponding to six members of GN,M. Therefore GN,M \u2264Aut(\u2126) and according to Corollary 2.2, \u03c6(\u22c5) is GN,M equivariant. Moreover, using Theorem 3.3 of the next section, we can prove that these six permutations are the \u201conly\u201d edge-color preserving ones for this structure, resulting in unique equivariance.\nMatrix Form. To write (5) in a matrix form, if there are multiple edges between two nodes n,m, we need to merge them. In general, by assigning on distinct color to any set in the range of \u03b1 \u2236 N \u00d7M \u2192 2{1,...,C} we can w.l.o.g. reduce multiple edges to a single edge. In other words we can rewrite \u03c6 using W \u2208 RM\u00d7N\n\u03c6(x;w; \u2126) = \u03c3(Wx) Wm,n = \u2211 c\u2208\u03b1(n,m) wc (6)\nUsing this notation, and due to strict monotonicity of the nonlinearity \u03c3(\u22c5), Theorem 2.1 simply states that for all (gN,gM) \u2208Aut(\u2126), x \u2208 RN and W given by (6)\nGMWx =WGNx. (7)\nExample 2.2 (Permutation-Equivariant Layer) Consider all permutations of indices N and M = N.\nWe want to define a neural layer such that all permutations of the input gN \u2208 GN = SN result in the same\npermutation of the output gM = gN. Consider the following colored bipartite graph, for a special case where N = M = 4. It is easy to show that color-preserving permutations of this structure are Aut(\u2126) = SN \u2299 SN = {(g,g) \u2223 g \u2208 SN} \u2245 SN: On one hand, for (\u03c0N, \u03c0M) \u2208 SN \u00d7 SM, having \u03c0N = \u03c0M clearly preserves the colors. On the other hand, if \u03c0N \u2260 \u03c0M, there exists u \u2208 N (also in M) such that \u03c0Nu \u2260 \u03c0Mu. Therefore (\u03c0N, \u03c0M) does not preserve the relation \u2206 = {(n,n) \u2223 n \u2208 N} corresponding to dashed edges, and therefore (\u03c0N, \u03c0M) \u2209Aut(\u2126). This proves Aut(\u2126) = SN \u2299 SN. The function (5) for this \u2126 is\n\u03c6(x;w = [w1,w2],\u2126) = \u03c3(w1Ix +w211Tx).\nRavanbakhsh et al. (2016); Zaheer et al. (2017) derive the same permutation equivariant layer, by proving the commutativity in (7), while here it follows from Corollary 2.2.\nMultiple Layers. For deep networks, the equivariance of the composition \u03c62 \u25cb \u03c61 to G-action follows from that of individual layer \u03c61 \u2236 XN \u2192 YM and \u03c62 \u2236 YM \u2192 ZO. Assuming \u03c61 is GN,M-equivariant and \u03c62 is GM,O-equivariant, where G-action on M is shared between the two layers, it follows that \u03c62 \u25cb \u03c61 is GN,O-equivariant, where GN,O = GN \u2299GO. This is because \u2200g \u2208 G and x \u2208 XN\n\u03c62(\u03c61(gNx)) = \u03c62(gM\u03c61(x)) = gO\u03c62(\u03c61(x)). (8)"}, {"heading": "3. Structure Design", "text": "Consider the definition of neural layer (5) that employs parameter-sharing according to \u2126. Given G-action on N and M, we are interested in designing structures \u2126 such that Aut(\u2126) = GN,M. According to the Theorem 2.1, it then follows that \u03c6 is uniquely GN,M-equivariant. Here, we give the sufficient conditions and the design recipe to achieve this.\nFor this we briefly review some group properties that are used in later developments.\ntransitivity We say that G-action on N is transitive iff \u2200n1, n2 \u2208 N, there exists at least one action g \u2208 G (or gN \u2208 GN) such that gn1 = n2.\nregularity The group action is free or semi-regular iff \u2200n1, n2 \u2208 N, there is at most one g \u2208 G such at gn1 = n2, and the action is regular iff it is both transitive and free \u2013 i.e., for any pair n1, n2 \u2208 N, there is uniquely one g \u2208 G such that gn1 = n2. Any free action is also faithful. We use a similar terminology for GN. That is we call GN semi-regular iff \u2200n1, n2 \u2208 N at\nmost one gN \u2208 GN moves n1 to n2 and GN is regular if this number is exactly one.\norbit The orbit of n \u2208 N is all the members to which it can be moved, Gn = {gn \u2223 g \u2208 G}. The orbits of n \u2208 N form an equivalence relation2 This equivalence relation partitions N into orbits N = \u22c31\u2264p\u2264P Gnp, where np is an arbitrary representative of the partition Gnp \u2286 N. Note that the G-action on N is always transitive on its orbits \u2013 that is for any n,n\u2032 \u2208 Gnp, there is at least one g \u2208 G such that n = gn\u2032. Therefore, for a semi-regular G-action, the action of G on the orbits Gnp\u22001 \u2264 p \u2264 P is regular.\nExample 3.1 (Mirror Symmetry) Consider G = Z2 = {e = 0,1} (1 + 1 = 0) acting on N, where the only non-trivial action is defined as flipping the input: 1N[1, . . . ,N] = [N,N \u2212 1, . . . ,1]. G is faithful in its action on N, however GN is not transitive \u2013 e.g., N cannot be moved to N \u2212 1. If N is even, then G-action is semi-regular. This is because otherwise the element in the middle n = \u2308N\n2 \u2309 is moved to itself by\ntwo different actions e,1 \u2208 G. Furthermore, ifN is even, G-action has N\n2 orbits and G2 acts on these orbits regu-\nlarly. If N is odd, G-action has \u2308N 2 \u2309 orbits. However, its action on the orbit of the middle element G \u2308N 2 \u2309 is not regular.\nIn the following, Section 3.1 proposes a procedure for parameter-sharing in a fully connected layer. Although simple, this design is dense and does not guarantee \u201cunique\u201d of equivariance. Section 3.2 proposes an alternative design with sparse connections that in some settings ensures unique equivariance. Section 3.3 investigates the effect of having multiple input and output channels in the neural layer and Section 3.4 studies a special case of GN = GM, where input and output indices have a one-toone mapping."}, {"heading": "3.1. Dense Design", "text": "Consider a complete bipartite graph with N and M as its two parts and edges (n,m) \u2208 N \u00d7M. The action of GN,M partitions the edges into orbits {GN,M(np,mq)}np,mq , where (np,mq) is a representative edge from an orbit. Painting each orbit with a different color gives\n\u2126 = (N,M,{\u2206p,q = GN,M(np,mq)}). (9)\nTherefore two edges (n,m) and (n\u2032,m\u2032) have the same color iff an action in GN,M moves one edge to the other.\n2n \u223c n\u2032\u21d4 \u2203g s.t., n = gn\u2032\u21d4 n \u2208 Gn\u2032\u21d4 n\u2032 \u2208 Gn.\nProposition 3.1 GN,M \u2264 \u2126 for \u2126 of (9).\nCorollary 3.2 \u03c6(\u22c5;w,\u2126), for structure (9), is equivariant to GN,M.\nExample 3.2 (Nested Subsets and Wreath Product) The permutation-equivariant layer that we saw in Example 2.2 is useful for defining neural layers for set structure. If our data-structure is in the form of nested subsets, then we require equivariance to permutation of variables within each set as well as permutation of subsets. Here, we show how to use our dense design for this purpose.\nWe use a special indexing for the input to better identify the exchangeability of variables. We assume D subsets, each of which has d variables x = [x1,1, . . . , x1,d, x2,1, . . . , xD,d]. The group of our interest is the wreath product Sd \u2240 SD. This type of group product can be used to build hierarchical and nested structures with different type of symmetries at each level. Nesting subsets corresponds to the most basic form of such hierarchical constructions. We use (n,n\u2032) to index input variables and (m,m\u2032) for output variables.\nThe following figure shows the resulting parametersharing for an example with D = 2, d = 3.\nHow did we arrive at this structure \u2126? Recall Our objective is to define parameter-sharing so that \u03c6W \u2236 RdD \u2192 RdD is equivariant to the action of G = Sd \u2240 SD \u2013 i.e., permutations within sets at two levels. This group-action identifies three partitions of edges (seen in the figure): I) ((n,n\u2032), (n,n\u2032))\u2200n,n\u2032 connects each variable to its counterpart (dashed orange); II) ((n,n\u2032), (n,m\u2032))\u2200n,n\u2032 \u2260 m\u2032 connects each variable to other variables within the same subset; III) ((n,n\u2032), (m,m\u2032))\u2200n \u2260 m is the set of edges from one subset to another. According to the Corollary 3.2 this parameter-sharing guarantees equivariance.\nThis fully-connected design is useful when the group GN,M is large; for example when dealing with SN. However, for\nsmaller groups it could be very inefficient in practice, as sometimes we can achieve equivariance through a sparse structure \u2126. As an example, consider the 2D circular convolution layer. It is easy to show that according to this design, the convolution filter will be the same size as the input image. While this achieves the desirable equivariance, it is inefficient and does not generalize as well as a convolution layer with small filters. Moreover, the dense design does not guarantee \u201cunique\u201d equivariance. We next show under some conditions on GN,M the sparse design can produce this stronger guarantee."}, {"heading": "3.2. Sparse Design", "text": "Our sparse construction uses orbits and symmetric generating sets:\n\u2022 Let us denote the orbits of G-action on M and N by {Gnp \u2223 1 \u2264 p \u2264 P} and {Gmq \u2223 1 \u2264 q \u2264 Q} respectively, where P and Q are the total number of orbits and np,mq are (arbitrary) representative members of orbits Gnp, Gmq respectively. Note that in contrast to previous section, here we are considering the orbit of variables rather than the edges.\n\u2022 The set A \u2286 G is called the generating set of G (< A >= G), iff every member of G can be expressed as a combination of members of A. If the generating set is closed under inverse a \u2208A \u21d2 a\u22121 \u2208A we call it a symmetric generating set.\nDefine the structure \u2126 as\n\u2126 = (N,M,{\u2206p,q,a}1\u2264p\u2264P, 1\u2264q\u2264Q,a\u2208A) \u2206p,q,a = {(gNanp,gNmq) \u2223 (gN,gM) \u2208 GN,M}. (10)\nIn words, we have one color per each combination of orbits (p, q) and members of the generating set a \u2208 A. The following theorem relates the symmetry group of this structure to G.\nTheorem 3.3 GN,M \u2264 Aut(\u2126) for \u2126 of (10). Moreover if GN and GM are both semi-regular, then GN,M = Aut(\u2126).\nNote that this result holds for any choice of a symmetric generating set A in defining \u2126. Therefore, in designing sparse layers, one seeks a minimal A.\nCorollary 3.4 The function \u03c6(\u22c5,w,\u2126), using the structure (10) is GN,M-equivariant. If GN and GM are semi-regular, this function is \u201cuniquely\u201d GN,M-equivariant.\nNow, assuming G-action is semi-regular on both N and M, using (arbitrarily chosen) representatives {np}1\u2264p\u2264P and {mq}1\u2264q\u2264Q for orbits in N and M, we can rewrite the expression (5) of the structured neural layer for the structure above. Here, components of \u03c6 = [\u03c61, . . . , \u03c6M ] are enumerated for 1 \u2264 q \u2264 Q,gM \u2208 GM:\n\u03c6gMmq(x;w) = \u03c3( \u2211 1\u2264p\u2264P \u2211 a\u2208A wq,p,axgNanp) (11)\nwhere w \u2208 RP\u00d7Q\u00d7\u2223A\u2223 is the set of unique parameters, and each element \u03c6gMmq depends on subset of parameters {wq,p,a}p,a identified by q and a subset of inputs {xa,gNnp}p,a identified by gN.\nExample 3.3 (Dihedral Group of Fig. 1) In the example of Fig. 1, the number of orbits of G-action on N is P = 2 and for M this is Q = 1. The symmetric generating set is the generating set that is used in the Cayley diagram, with the addition of inverse shift (inverse of the blue arrow). We then used (10) to build the structure of Fig. 1 (right).\nExample 3.4 (Reverse Convolution) The parametersharing structure of reverse convolution in Examples 1.2 and 2.1 is produced using our sparse design. In these examples, both GN and GM are regular. Therefore the proposed parameter-sharing provides unique equivariance."}, {"heading": "3.3. Multiple Channels", "text": "In this section, we extend our results to multiple input and output channels. Up to this point, we considered a neural network layer \u03c6 \u2236 RN \u2192 RM . Here, we want to see how to achieve GN,M-equivariance for \u03c6 \u2236 RN\u00d7K \u2192 RM\u00d7K \u2032\n, where K and K \u2032 are the number of input and output channels.\nFirst, we extend the action of G on N and M to NK = [N, . . . ,N \u00b4\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b8\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b6 Ktimes ] as well as MK\u2032 , to accommodate multiple channels. For this, simply repeat the G-action on each component. G-action on multiple input channels is equivalent to sub-direct product GN \u2299 . . .\u2299GN\n\u00b4\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b8\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b9\u00b6 Ktimes\n\u2245 GN. The same applies\nto GM.\nThis repetition, multiplies the orbits of GN, one for each channel, so that instead of having P and Q orbits on the input N and output M sets, we have K \u00d7 P and K \u2032 \u00d7 Q orbits on the input NK and output MK \u2032\n. This increases the number of parameters by a factor of K \u00d7K \u2032.\nThe important implication is that, orbits and multiple channels are treated identically by both dense and sparse designs.\nExample 3.5 (Group Convolution) The idea of groupconvolution is studied by Cohen & Welling (2016a); see also (Olah, 2014). The following claim relates the function of this type of layer to our sparse design.\nClaim 3.5 Under the following conditions the neural layer (5) using our sparse design (10) performs group convolution: I) there is a bijection between the output and G (i.e., M = G) and; II) GN is transitive.\nThis also identifies the limitations of group-convolution even in the setting where M = G: When GN is semiregular and not transitive (P > 1), group convolution is not guaranteed to be uniquely equivariant while the sparse parameter-sharing of (10) provides this guarantee.\nFor demonstration consider the following example in equivariance to mirror symmetry.\nThis figure shows the bipartite structure for G = Z2 = {0,1} and A = {1}. G-action is horizontal flip of the input and the output. On the right, M = G while on the left GM-action has two orbits. Orbits are identified by line-style and color of the circles. In a neural layer with this parameter-sharing, when we flip the input variables (around the mirror line) the output is also flipped.\nThe representatives in each orbit on N and M is identified with a star. Note that each combination of orbits p and q has a parameter of its own, identified with different edge-styles. While this construction guarantees \u201cunique\u201d G-equivariance, if instead we use the same parameters across orbits (as suggested by the original group convolution) we get the parameter-sharing of the figure below middle.\nIn this case, the resulting neural layer has the desired equivariance (right). However, it is equivariant to the action of a larger group GN,M \u2245 Z2 \u00d7Z2 > Z2, in which 1 in the second Z2 group exchanges variables across the orbits on N (left in figure above)."}, {"heading": "3.4. GN = GM", "text": "In semi-supervised and un-supervised applications, we often need to produce a single output yn for each input xn\u2200n \u2208 N \u2013 that is N = M. We can ensure this by having a relation \u2206c\u2217 = {(n,n) \u2223 n \u2208 N} in \u2126 that guarantees any (\u03c0N, \u03c0M) \u2208Aut(\u2126) applies the same permutation to N and M = N \u2013 i.e., \u03c0N = \u03c0M. The resulting structure \u2126 = (N,N,{\u2206c}1\u2264c\u2264C \u222a {\u2206c\u2217}} can be also interpreted as a colored multi-edged directed graph (digraph). This is because we can collapse the two parts by identifying n \u2208 N with n \u2208M. Therefore, the symmetry-group of the original bipartite structure, is isomorphic to symmetry group of a colored multi-edged digraph on N. Achieving unique Gequivariance then reduces to answering the following question: when could we express a permutation group G \u2264 SN as the symmetry group Aut(\u2126) of a colored multi-edged digraph with N nodes?\nThis problem is well-studied under the class of concrete representation problems (Babai, 1994). Permutation groups G that can be expressed in this way are called 2- closed groups (Wielandt, 1969). The recipe for achieving GN \u2264 Aut(\u2126) is similar to our dense construction of Section 3.13 The 2-closure G\u0304N of a group GN is then, the greatest permutation group G\u0304N \u2264 SN with the same orbit on N\u00d7N as GN. It is known that for example semi-regular permutation groups are 2-closed G\u0304N = GN. This result also follows a corollary of our Theorem 3.3 for sparse design of (10).\nExample 3.6 (Equivariance to \u00d790\u25cb Rotations) Figure below compares the digraph representation of \u2126 produced using (left) our sparse design, and (right) our dense design.\n3In a fully connected digraph, the edges that belong to the same orbit by G-action on N \u00d7N, receive the same color.\nMultiples of \u00b190\u25cb rotation is produced as the action of cyclic group Z4 on eight input output variables \u2013 that is N = M = {1, . . . ,8}. Z4-action is semi-regular with two orbits; these orbits the two inner and outer set of four nodes. The representatives of each orbit in our sparse design is indicated using filled circles. The generating set consists of A = {1,3}, rotation by 90\u25cb and its inverse, rotation by 270\u25cb. Each edge in each of these figures, has a corresponding edge in the opposite direction, within a different relation. To avoid over-crowding the figure, we have dropped this edge from the drawing above, unless both edges belong to the same relation.\nExample 3.7 (Graph Convolution) Consider the setting where we use the (normalized) adjacency matrix B \u2208 {0,1}N\u00d7N (or Laplacian) of a graph \u039b, to identify parameter-sharing in a neural network layer. For a single input/output channel, this is often in the form of Ax, where x \u2208 RN and A = w1B+w2I has different parameters for diagonal and off-diagonal values (e.g., Kipf & Welling, 2016; Bruna et al., 2013; Henaff et al., 2015); for multiple channels see Section 3.3. The following corollary of Theorem 2.1 identifies the equivariance of Ax.\nCorollary 3.6 Given the digraph \u039b and its binary adjacency matrix B \u2208 {0,1}N\u00d7N , then (w1B + w2I)x is uniquely equivariant to the symmetry-group of \u039b.\nSince two graphs on N nodes can have identical symmetries, one implication of this corollary is that graphconvolution has identical equivariances for graphs with the same symmetry groups."}, {"heading": "4. Conclusion", "text": "This work is a step towards designing neural network layers with a given equivariance and invariance properties. Our approach was to relate the equivariance properties of the neural layer to the symmetries of the parameter-matrix.\nWe then proposed two parameter-sharing scheme that achieves equivariance wrt any discrete group-action. Moreover under some conditions, we guarantee sensitivity wrt other group actions. This is important because even a trivial constant function is invariant to all transformations. It is therefore essential to be able to draw the line between equivariance/invariance and sensitivity in a function. To our knowledge, our work presents the first results of its kind on guarantees regarding both variance and equivariance with respect to group actions."}, {"heading": "Acknowledgment", "text": "This research is supported in part by DOE grant DESC0011114 and NSF grant IIS1563887."}, {"heading": "A. Proofs", "text": "Proof of Observation 1.1\ngM\u03c6(x) = \u03c6(gNx)\u2200g \u2208 G\u21d2 gM\u03c6(x) = \u03c6(gMx)\u2200g \u2208H \u2282 G.\nProof of Theorem 2.1 For unique Aut(\u2126)-equivariance we need proofs in two directions. First we show that\n(\u03c0N, \u03c0M) \u2208Aut(\u2126)\u21d2 \u03c6(x;w,\u2126) = \u03c0\u22121M \u03c6(\u03c0Nx;w,\u2126) (12)\nwhich in turn shows that \u03c0M\u03c6(x;w,\u2126) = \u03c6(\u03c0Nx;w,\u2126). Starting from \u03c0\u22121M \u03c6(\u03c0Nx;w,\u2126) on the r.h.s. of (12) and considering an index m in \u03c6 = [\u03c61, . . . , \u03c6M ] we have\n\u03c6\u03c0\u22121 M m(\u03c0Nx;w,\u2126) = \u03c3( \u2211 n\u2208N,c\u2208\u03b1(n,\u03c0\u22121 M m) wcx\u03c0Nn)\n= \u03c3( \u2211 n\u2208\u03c0NN,c\u2208\u03b1(\u03c0\u22121N n,\u03c0 \u22121 N m) wcxn)\n= \u03c3( \u2211 n\u2208N,c\u2208\u03b1(n,m) wcxn) = \u03c6m(x;w,\u2126)\n(13)\nwhere in arriving at (13) we used the fact that (\u03c0N, \u03c0M) \u2208 Aut(\u2126) \u21d2 \u03b1(n,m) = \u03b1((\u03c0\u22121N n,\u03c0\u22121M m)). In the opposite direction we need to show that \u03c6(x;w,\u2126) = \u03c0M\u03c6(\u03c0\u22121N x;w,\u2126) \u2200x \u2208 RN ,w \u2208 RC only if (\u03c0N, \u03c0M) \u2208Aut(\u2126).\n\u03c6(x;w,\u2126) = \u03c0M\u03c6(\u03c0\u22121N x;w,\u2126) \u2200x \u2208 RN ,w \u2208 RC \u21d2\n(14)\n\u03c6m(x;w,\u2126) = \u03c6\u03c0Mm(\u03c0\u22121N x;w,\u2126) \u2200m,x \u2208 RN ,w \u2208 RC \u21d2 (15)\n\u2200m,x \u2208 RN ,w \u2208 RC (16) \u2211\nn\u2208N,c\u2208\u03b1(n,m) wcxn = \u2211 n\u2208N,c\u2208\u03b1(n,\u03c0Mm) wcx\u03c0\u22121 N n \u21d2 (17)\n\u2211 n\u2208N,c\u2208\u03b1(n,m) wcxn = \u2211 n\u2208N,c\u2208\u03b1(\u03c0Nn,\u03c0Mm) wcxn (18)\nwhere (17) follows from monotonicity of \u03c3 \u2236 R \u2192 R. We need to show that this final equality \u2200m,x \u2208 RN ,w \u2208 RC implies that \u03b1(\u03c0Nn,\u03c0Mm) = \u03b1(n,m), which in turn, according to (3) means (\u03c0N, \u03c0M) \u2208Aut(\u2126). We prove \u03b1(\u03c0\u03c0Nn,\u03c0\u03c0Mm) = \u03b1(n,m) by contradiction: assume \u03b1(\u03c0\u03c0Nn\u2217, \u03c0\u03c0Mm\u2217) \u2260 \u03b1(n\u2217,m\u2217) for some n\u2217,m\u2217. Since \u03b1(\u03c0Nn\u2217, \u03c0Mm\u2217) \u2260 \u03b1(n\u2217,m\u2217), we can w.l.o.g. assume \u2203c\u2217 \u2208 \u03b1(n\u2217,m\u2217) s.t. c\u2217 \u2209 \u03b1(\u03c0n\u2217, \u03c0m\u2217) (the reverse direction, where c\u2217 \u2208 \u03b1(\u03c0Nn\u2217, \u03c0Mm\u2217) \u2227 c\u2217 \u2209\n\u03b1(n\u2217,m\u2217) is similar). We show that an assignment of x \u2208 RN and w \u2208 RC contradicts (18). For this, define x such that xn = \u03b4(n,n\u2217), is non-zero only at index n\u2217. Moreover, assigning wc = \u03b4(c, c\u2217) the r.h.s. of (18) is \u2211n\u2208N,c\u2208\u03b1(\u03c0Nn,\u03c0Mm\u2217)wcxn = 0 while the l.h.s. is \u2211n\u2208N,c\u2208\u03b1(m,n)wcxn = wc\u2217xn\u2217 \u2260 0. Therefore \u03b1(\u03c0Nn,\u03c0Mm) = \u03b1(n,m) \u2200n,m, which by definition of Aut(\u2126) means (\u03c0N, \u03c0M) \u2208Aut(\u2126). \u220e\nProof of Proposition 3.1 To prove GM,N \u2264 Aut(\u2126) we simply show that all (gN,gM) \u2208 GN,M preserve the relations in Aut(\u2126). From (4),\ngN,M = (gN,gM) \u2208Aut(\u2126)\u21d0\n((n,m) \u2208 \u2206p,q \u21d4 (gNn,gMm) \u2208 \u2206p,q) \u2200(p, q), n,m\nThe r.h.s holds for all (gN,gM) \u2208 GN,M because in constructing relations \u2206p,q in the dense design, we used edge-orbits:\n(n,m) \u2208 \u2206p,q\u21d4 (gNn,gMm) \u2208 \u2206p,q \u2200(p, q), n,m.\nTherefore gN,M \u2208 GM,N \u21d2 gN,M \u2208Aut(\u2126). \u220e\nProof of Theorem 3.3 We first show that any permutation (gN,gM) \u2208 GN,M is also in Aut(\u2126). The major part of the proof is to show that when GN and GM are semi-regular, then \u2223Aut(\u2126)\u2223 \u2264 \u2223GN,M\u2223. Combination of these two proves Aut(\u2126) = GN,M. I) to prove that (hN,hM) \u2208 GN,M \u21d2 (hN,hM) \u2208 Aut(\u2126), we simply apply (hN,hM) to an arbitrary edge (m,n) in a relation of \u2126. According to (10)\n\u2206p,q,a = {(gNanp,gMmq) \u2223 (gN,gM) \u2208 GN,M}.\nApplication of (hN,hM) to (gNanp,gMmq) gives (hgNanp,hgMmq) = (g\u2032Nanp,g\u2032Mmq) \u2208 \u2206p,q,a . From (4), it follows that GN,M \u2264Aut(\u2126). II) For this part, we use the orbit-stabilizer theorem. The orbit of each pair (n,m) \u2208 \u2206p,q,a wrt HN,M is defined as HN,M(n,m) = {(hNn,hMm) \u2223 hN,M \u2208 HN,M}. The stabilizer H(n,m)N,M of (n,m) \u2208 \u2206p,q,a is H (n,m) N,M = {hN,M \u2208 HN,M \u2223 hN,M(n,m) = (n,m)}, the group of all actions that fix (n,m). The orbit-stabilizer theorem states that \u2223HN,M\u2223 = \u2223H(n,m)N,M \u2223\u00d7 \u2223HN,M(n,m)\u2223. In our argument, we apply this theorem to bound \u2223Aut(\u2126)\u2223 using \u2223Aut(\u2126)(n,m)\u2223 and \u2223Aut(\u2126)(n,m)\u2223. The orbit-size, \u2223Aut(\u2126)(n,m)\u2223, for a pair (n,m) is bounded by the size of its relation \u2223\u2206p,q,a \u2223, for some p, q,a. This is because, according to (3),\n\u03c0 \u2208Aut(\u2126)\u21d2 ((n,m) \u2208 \u2206p,q,a \u21d2 \u03c0(n,m) \u2208 \u2206p,q,a).\nFrom (10), \u2223\u2206p,q,a\u2223 = \u2223GN,M\u2223, and therefore \u2223Aut(\u2126)(n,m)\u2223 < \u2223GN,M\u2223. Now, it only remains to show that if GN and GM are regular orbits (or semi-regular), the stabilizer is trivial Aut(\u2126)(n,m) = {e}. Because in this case the size of Aut(\u2126) is bounded by the size of orbit \u2223Aut(\u2126)\u2223 = \u2223Aut(\u2126)(n,m)\u2223 \u2264 \u2223GN,M\u2223, which combined with the result of part (I) gives GN,M =Aut(\u2126). Since, according to our assumption, GN acts regularly on GNnp \u2200p, going back to definition of \u2206p,q,a = {(gNanp,gMmq) \u2223 gN,M \u2208 GN,M}, this (see definition of regularity) implies that for each n \u2208 GNnp, a \u2208 A and mq , we can identify a single g\u2032N \u2208 GN such that for some (n,m) = (ag\u2032Nnp,g\u2032Mmq) \u2208 \u2206p,q,a . This means that the edges (or pairs) adjacent to each node n \u2208 GNnp all have distinct colors. The same argument using regularity of GMaction on GMmq \u2200q shows that edges (or pairs) adjacent to m \u2208 GMmq all have distinct colors. Therefore if we fix a pair (m,n), all their neighboring edges (adjacent on n or m) are unambiguously fixed. The same goes for the neighbors of the newly fixed nodes and so on. If we can show that the bipartite graph representing \u2126 is connected then fixing a pair guarantees that all pairs in all relations of \u2126 are fixed and therefore (n,m) has a trivial stabilizer.\nTwo properties guarantee the connectedness of \u2126:\n\u2022 Since A = A\u22121 is a generating set of G, the bipartite subset consisting of subset of nodes GNnp and GMmq are connected. To show this, it is enough to show that we can reach any node nz starting from an arbitrary representative np and zigzagging through the bipartite structure. Since nz, np \u2208 GNnp \u21d2 \u2203gz \u2208 GN s.t. nz = gznp. Since < A >= GN,M, we can write gz = a1 . . .aL. The path that starts from np and takes the connections corresponding to \u2206p,q,aL ,\u2206p,q,a\u22121L\u22121 ,\u2206p,q,aL\u22122 , . . . ,\u2206p,q,a\u221211 takes us through a zigzag path from np to nz .\n\u2022 Since we have a relation \u2206p,q,a for all pairs p, q, all the induced bipartite subgraphs on GNnp-GMmq are connected.\nThis proves that the whole bipartite graph is connected and unambiguously fixed if we fix any pair (n,m). Therefore, (n,m) has a trivial stabilizer, proving that Aut(\u2126) = GN,M. \u220e\nProof of Corollary 3.4 Follows directly from Theorems 2.1 and 3.3. \u220e\nProof of Claim 3.5 To see this, note that GM acts on M = G regularly, with\nthe natural (group) action gh. Set the representative from the resulting single orbit as mq = e. Then (11) becomes \u03c6 = [\u03c6g]g\u2208G with components\n\u03c6g(x;w) = \u03c3( \u2211 1\u2264p\u2264P \u2211 a\u2208A wa,pxgNanp) (19)\nIf we further tie the parameters across the orbits so that wa,p = wa,p\u2032\u2200p, p\u2032, the (19) above is equivalent to formulation of (Cohen & Welling, 2016a) for a single input/output channels (see Section 3.3 for multiple channels). \u220e\nProof of Corollary 3.6 First we show this assuming a single channel K = 1. For multiple channels see Section 3.3.\nConsider the bipartite structure constructed from \u039b: \u2126 = (N,N,{{(n,n) \u2223 n \u2208 N},{(n,n\u2032) \u2223 (n,n\u2032) \u2208 E(\u039b)}}). Applying the result of Theorem 2.1 using \u03c3(x) = x tells us that the function Ax is uniquely Aut(\u2126)-equivariant \u2013 that is \u03c0(Bx\u22c5,k) = B(\u03c0x\u22c5,k)\u2200\u03c0 \u2208Aut(\u2126). Because of the relation \u2206c\u2217 = {{(n,n) \u2223 n \u2208 N} in \u2126, the same bipartite structure \u2126, can be interpreted as a digraph; here with a single color, since \u2126 has only one relation in addition to \u2206c\u2217 . Since this relation defines \u039b, Aut(\u2126) = Aut(\u039b), which means Bx is uniquely Aut(\u039b)-equivariant. \u220e"}, {"heading": "B. Background on Permutation Groups", "text": "Let x = [x1, . . . , xN ] \u2208 XN be a vector of N variables taking value in the same domain X. A group G is a set, equipped with a binary operation, with the following properties: I) G is closed under its binary operation; II) the group operation is associative \u2013i.e., (g1g2)g3 = g1(g2g3)\u2200g1,g2,g3 \u2208 G; III) there exists an identity e \u2208 G such that ge = eg = g and ; IV) every element g \u2208 G has an inverse g\u22121 \u2208 G, such that gg\u22121 = g\u22121g = e. A subset H \u2286 G is a subgroup of G (G \u2264 H) iff H equipped with the binary operation of G forms a group. Moreover, if H is a proper subset of G, H is a proper subgroup of G, H < G. Two groups are isomorphic G \u2245 H if there exists a bijection \u03b2 \u2236 G \u2192 H, such that g1g2 = g3 \u21d4 \u03b2(g1)\u03b2(g2) = \u03b2(g3)\u2200g1,g2,g3. If this last relation holds for a surjective mapping (not necessarily one-to-one) then \u03b2 is a homomorphic mapping and H is isomorphic to a subgroup of G.\nCayley Diagram. The set A \u2286 G is called the generating set of G (< A >= G), iff every member of G can be expressed as a combination of members of A. If the generating set is closed under inverse a \u2208A \u21d2 a\u22121 \u2208A we call it a symmetric generating set. A is the minimal generating set if it has the least number of members among the generating sets of G. Note that the minimal generating sets are generally not unique. The size of the minimal generating set of a group G becomes important because, the number\nof parameters in our parameter-sharing scheme grows linearly with \u2223A\u2223. A group G is often visualized by its Cayley diagram; a colored digraph in which the node-set is G and directed edge (g,ag)\u2200g \u2208 G,a \u2208 A is colored by a \u2208 A. Fig. 1(lower-left) shows the Cayley diagram of G =D5.\nB.1. Discrete Group Action\nWe are interested on the way a group \u201cacts\u201d on the input and output of a deep network. Function \u03b3 \u2236 G \u00d7X \u2192 X is the left action of group G on x iff I) \u03b3(e,x) = x and; II) \u03b3(g1, \u03b3(g2,x)) = \u03b3(g1g2,x).4\nFor our purpose we limit this action to actions on the indices N = {1, . . . ,N} of x = [xn] \u2013 i.e., function \u03b3 \u2236 G \u00d7 N \u2192 N satisfies \u03b3(e, n) = n and \u03b3(g1, \u03b3(g2, n)) = \u03b3(g1g2, n). We often use gn as a shorthand for \u03b3(g, n), and also use gN to denote {gn \u2223 n \u2208 N}. The action of g on a vector/sequence \u00d0\u2192 N = [1, . . . ,N] is defined similarly g \u00d0\u2192 N \u2250 [g1, . . . ,gN]. Considering this, the G-action on x = [x1, . . . , xN ] is gx \u2250 [xg1, . . . xgN ]. From the properties of group and its action it follows that \u03b3(g, \u22c5) \u2236 N \u2192 N is a bijection with \u03b3\u22121(g, n) = \u03b3(g\u22121, n)\u2200n \u2208 N,g \u2208 G. Since N is a finite set, this bijection for each g \u2208 G is a permutation of \u00d0\u2192N \u2013 i.e., g\u00d0\u2192N \u2250 [\u03b3(g,1), . . . , \u03b3(g,N)] is a permutation of \u00d0\u2192N . Let GN = {\u03b3(g, \u22c5) \u2223 g \u2208 G} with (function composition as the binary group operation) denote the group of permutations of \u00d0\u2192 N induced by g \u2208 G. This group is a subgroup of the symmetric group SN; the group of all N ! permutations of \u00d0\u2192 N . GN captures the structure of G when it acts on the set N and it is indeed a homomorphic image of G. We use gN to denote \u03b3(g, \u22c5), the the image of g \u2208 G in GN.\nB.1.1. PROPERTIES OF GROUP ACTION\nG-action is faithful iff two groups are isomorphic G \u2245 GN. In this case all actions of g \u2208 G are distinct permutations \u2013 that is g \u00d0\u2192 N \u2260 g\u2032\u00d0\u2192N\u2200g,g\u2032 \u2208 G. Given any G-action on N we can obtain its faithful subgroup that is isomorphic to GN. The importance of faithfulness of G-action is because it preserves the structure of G, and if an action is not faithful, we might as well focus on GN-action.\nGiven any unfaithful G-action \u03b3 \u2236 G \u00d7 N \u2192 N, let K\u03b3 be the normal subgroup of G that corresponds to identity permutation \u2013i.e., K\u03b3 = {g \u2208 G \u2223 \u03b3(g, n) = n\u2200n \u2208 N}. One obtains the group GN that acts faithfully on N as the quotient group GN = G/K\u03b3 . We now define some group properties that are important in guaranteeing the \u201cstrict\u201d equivariance with respect to G-\n4All the following definitions and results may be extended to the \u201cright\u201d group action by substituting g\u2194 g\u22121\u2200g \u2208 G.\naction. G-action on N is transitive iff \u2200n1, n2 \u2208 N, there exists at least one action g \u2208 G such that gn1 = n2. The group action is free or semi-regular iff \u2200n1, n2 \u2208 N, there is at most one g \u2208 G such at gn1 = n2, and the action is regular iff it is both transitive and free \u2013 i.e., for any pair n1, n2 \u2208 N, there is uniquely one g \u2208 G such that gn1 = n2. Any free action is also faithful.\nB.1.2. ORBITS\nGiven G-action on N, the orbit of n \u2208 N is all the members to which it can be moved, Gn = {gn \u2223 n \u2208 N}. The orbits of n \u2208 N form an equivalence relation, where n \u223c n\u2032 \u21d4 \u2203g s.t., n = gn\u2032 \u21d4 n \u2208 Gn\u2032 \u21d4 n\u2032 \u2208 Gn. This equivalence relation partitions N into orbits N = \u22c31\u2264p\u2264P Gnp, where np is an arbitrary representative of the partition Gnp \u2286 N. Note that the G-action on N is always transitive on its orbits \u2013 that is for any n,n\u2032 \u2208 Gnp, there is at least one g \u2208 G such that n = gn\u2032. Therefore, for a semi-regular G-action, the action of G on the orbits Gnp\u22001 \u2264 p \u2264 P is regular. As we see the number of distinct parameters in our parametersharing scheme grows with the number of orbits.\nCycle Notation. To explicitly show the action of g \u2208 G on the set N, we sometimes use the cycle notation of a permutation. Any permutation \u03c0 \u2208 SN is decomposable to product of disjoint cycles. A cycle of length d, (b1, . . . , bd) sends bi \u2192 bi+1 mod d. Here bi \u2208 {1, . . . ,N} and a cycle acts on a subset of N. For example, the action of (1,3,2) on [1, . . . ,6] is [3,1,2,4,5,6]. We can write the permutation g where g[1, . . . ,6] = [3,1,2,5,4,6] as the product of disjoint cycles {(1,3,2), (6), (4,5)} = {(1,3,2), (4,5)}."}], "year": 2017, "references": [{"title": "Learning to see by moving", "authors": ["Agrawal", "Pulkit", "Carreira", "Joao", "Malik", "Jitendra"], "venue": "In Proceedings of the IEEE International Conference on Computer Vision,", "year": 2015}, {"title": "Unsupervised learning of invariant representations in hierarchical architectures", "authors": ["Anselmi", "Fabio", "Leibo", "Joel Z", "Rosasco", "Lorenzo", "Mutch", "Jim", "Tacchetti", "Andrea", "Poggio", "Tomaso"], "venue": "arXiv preprint arXiv:1311.4158,", "year": 2013}, {"title": "Automorphism groups, isomorphism, reconstruction (chapter 27 of the handbook of combinatorics)", "authors": ["Babai", "Laszlo"], "venue": "University of Chicago,", "year": 1994}, {"title": "Models of active learning in group-structured state spaces", "authors": ["Bart\u00f3k", "G\u00e1bor", "Szepesv\u00e1ri", "Csaba", "Zilles", "Sandra"], "venue": "Information and Computation,", "year": 2010}, {"title": "Invariant scattering convolution networks", "authors": ["Bruna", "Joan", "Mallat", "St\u00e9phane"], "venue": "IEEE transactions on pattern analysis and machine intelligence,", "year": 2013}, {"title": "Spectral networks and locally connected networks on graphs", "authors": ["Bruna", "Joan", "Zaremba", "Wojciech", "Szlam", "Arthur", "LeCun", "Yann"], "venue": "arXiv preprint arXiv:1312.6203,", "year": 2013}, {"title": "Automorphism groups of graphical models and lifted variational inference", "authors": ["Bui", "Hung Hai", "Huynh", "Tuyen N", "Riedel", "Sebastian"], "venue": "arXiv preprint arXiv:1207.4814,", "year": 2012}, {"title": "Group equivariant convolutional networks", "authors": ["Cohen", "Taco S", "Welling", "Max"], "venue": "arXiv preprint arXiv:1602.07576,", "year": 2016}, {"title": "Steerable cnns", "authors": ["Cohen", "Taco S", "Welling", "Max"], "venue": "arXiv preprint arXiv:1612.08498,", "year": 2016}, {"title": "Rotation-invariant convolutional neural networks for galaxy morphology prediction", "authors": ["Dieleman", "Sander", "Willett", "Kyle W", "Dambre", "Joni"], "venue": "Monthly notices of the royal astronomical society,", "year": 2015}, {"title": "Exploiting cyclic symmetry in convolutional neural networks", "authors": ["Dieleman", "Sander", "De Fauw", "Jeffrey", "Kavukcuoglu", "Koray"], "venue": "arXiv preprint arXiv:1602.02660,", "year": 2016}, {"title": "The design and use of steerable filters", "authors": ["Freeman", "William T", "Adelson", "Edward H"], "venue": "IEEE Transactions on Pattern analysis and machine intelligence,", "year": 1991}, {"title": "Deep symmetry networks", "authors": ["Gens", "Robert", "Domingos", "Pedro M"], "venue": "In Advances in neural information processing systems,", "year": 2014}, {"title": "A common framework for steerability, motion estimation, and invariant feature detection", "authors": ["Hel-Or", "Yacov", "Teo", "Patrick C"], "venue": "In Circuits and Systems,", "year": 1998}, {"title": "Deep convolutional networks on graph-structured data", "authors": ["Henaff", "Mikael", "Bruna", "Joan", "LeCun", "Yann"], "venue": "arXiv preprint arXiv:1506.05163,", "year": 2015}, {"title": "Transforming auto-encoders", "authors": ["Hinton", "Geoffrey E", "Krizhevsky", "Alex", "Wang", "Sida D"], "venue": "In International Conference on Artificial Neural Networks,", "year": 2011}, {"title": "Spatial transformer networks", "authors": ["Jaderberg", "Max", "Simonyan", "Karen", "Zisserman", "Andrew"], "venue": "In Advances in Neural Information Processing Systems, pp. 2017\u20132025,", "year": 2015}, {"title": "Learning image representations equivariant to ego-motion", "authors": ["Jayaraman", "Dinesh", "Grauman", "Kristen"], "venue": "In Proc. ICCV,", "year": 2015}, {"title": "Counting belief propagation", "authors": ["Kersting", "Kristian", "Ahmadi", "Babak", "Natarajan", "Sriraam"], "venue": "In Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence,", "year": 2009}, {"title": "Semi-supervised classification with graph convolutional networks", "authors": ["Kipf", "Thomas N", "Welling", "Max"], "venue": "arXiv preprint arXiv:1609.02907,", "year": 2016}, {"title": "Group theoretical methods in machine learning", "authors": ["Kondor", "Risi"], "venue": "Columbia University,", "year": 2008}, {"title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing", "authors": ["Krizhevsky", "Alex", "Sutskever", "Ilya", "Hinton", "Geoffrey E"], "year": 2012}, {"title": "Understanding image representations by measuring their equivariance and equivalence", "authors": ["Lenc", "Karel", "Vedaldi", "Andrea"], "venue": "In Proceedings of the IEEE conference on computer vision and pattern recognition,", "year": 2015}, {"title": "Markov chains on orbits of permutation groups", "authors": ["Niepert", "Mathias"], "venue": "arXiv preprint arXiv:1206.5396,", "year": 2012}, {"title": "Groups and group convolutions", "authors": ["Olah", "Christopher"], "venue": "http://colah.github.io/posts/ 2014-12-Groups-Convolution/,", "year": 2014}, {"title": "Deep rototranslation scattering for object classification", "authors": ["Oyallon", "Edouard", "Mallat", "St\u00e9phane"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "year": 2015}, {"title": "Statistical relational artificial intelligence: Logic, probability, and computation", "authors": ["Raedt", "Luc De", "Kersting", "Kristian", "Natarajan", "Sriraam", "Poole", "David"], "venue": "Synthesis Lectures on Artificial Intelligence and Machine Learning,", "year": 2016}, {"title": "Deep learning with sets and point clouds", "authors": ["Ravanbakhsh", "Siamak", "Schneider", "Jeff", "Poczos", "Barnabas"], "venue": "arXiv preprint arXiv:1611.04500,", "year": 2016}, {"title": "Rotation, scaling and deformation invariant scattering for texture discrimination", "authors": ["Sifre", "Laurent", "Mallat", "St\u00e9phane"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "year": 2013}, {"title": "Permutation groups through invariant relations and invariant functions", "authors": ["H. Wielandt"], "venue": "Dept. of Mathematics, Ohio State University,", "year": 1969}], "id": "SP:459cdfa379bffc07dd963610132f22421b9a0659", "authors": [{"name": "Siamak Ravanbakhsh", "affiliations": []}, {"name": "Jeff Schneider", "affiliations": []}, {"name": "Barnab\u00e1s P\u00f3czos", "affiliations": []}], "abstractText": "We propose to study equivariance in deep neural networks through parameter symmetries. In particular, given a group G that acts discretely on the input and output of a standard neural network layer \u03c6W \u2236 R \u2192 R , we show that \u03c6W is equivariant with respect to G-action iff G explains the symmetries of the network parameters W. Inspired by this observation, we then propose two parameter-sharing schemes to induce the desirable symmetry on W. Our procedure for tying the parameters achieves G-equivariance and, under some conditions on the action of G, it guarantees sensitivity to all other permutation groups outside G. Given enough training data, a multi-layer perceptron would eventually learn the domain invariances in a classification task. Nevertheless, success of convolutional and recurrent networks suggests that encoding the domain symmetries through shared parameters can significantly boost the generalization of deep neural networks. The same observation can be made in deep learning for semi-supervised and unsupervised learning in structured domains. This raises an important question that is addressed in this paper: What kind of priors on input/output structure can be encoded through parameter-sharing? This work is an attempt at answering this question, when our priors are in the form discrete domain symmetries. To formalize this type of prior, a family of transformations of input and output to a neural layer are expressed as group \u201caction\u201d on the input and output. The resulting neural network is invariant to this action, if transformations of the input within that particular family, does not change the output (e.g., rotation-invariance). However, if the output is transformed, in a predictable way, as we transform the input, the neural layer is equivariant to the action of the group. School of Computer Science, Carnegie Mellon University, 5000 Forbes Ave., Pittsburgh, PA, USA 15217. Correspondence to: Siamak Ravanbakhsh <mravanba@cs.cmu.edu>. Proceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s). Our goal is to show that parameter-sharing can be used to achieve equivariance to any discrete group action. Application of group theory in machine learning has been the topic of various works in the past (e.g., Kondor, 2008; Bart\u00f3k et al., 2010). In particular, many probabilistic inference techniques have been extended to graphical models with known symmetry groups (Raedt et al., 2016; Kersting et al., 2009; Bui et al., 2012; Niepert, 2012). Deep and hierarchical models have used a variety of techniques to study or obtain representations that isolate transformations from the \u201ccontent\u201d (e.g., Hinton et al., 2011; Jayaraman & Grauman, 2015; Lenc & Vedaldi, 2015; Agrawal et al., 2015). The simplest method of achieving equivariance is through data-augmentation (Krizhevsky et al., 2012; Dieleman et al., 2015). Going beyond augmentation, several methods directly apply the group-action, in one way or another, by transforming the data or its encodings using group members (Jaderberg et al., 2015; Anselmi et al., 2013; Dieleman et al., 2016). An alternative path to invariance via harmonic analysis. In particular cascade of wavelet transforms is investigated in (Bruna & Mallat, 2013; Oyallon & Mallat, 2015; Sifre & Mallat, 2013). More recently (Cohen & Welling, 2016b) study steerable filters (e.g., Freeman et al., 1991; Hel-Or & Teo, 1998) as a general mean for achieving equivariance in deep networks. Invariance and equivariance through parameter-sharing is also discussed in several prior works (Cohen & Welling, 2016a; Gens & Domingos, 2014). The desirability of using parameter-sharing for this purpose is mainly due to its simplicity and computational efficiency. However, it also suggests possible directions for discovering domain symmetries through regularization schemes. Following the previous work on the study of symmetry in deep networks, we rely on group theory and group-actions to formulate invariances and equivariances of a function. Due to discrete nature of parameter-sharing, our treatment here is limited to permutation groups. Action of a permutation group G can model discrete transformations of a set of variables, such as translation and 90\u25cb rotation of pixels around any center in an image. If the output of a function transforms with a G-action as we transform its input with a different G-action, the function is equivariant with respect to action of G. For example, in a convolution layer, as we translate the input, the feature-maps are also translated. If ar X iv :1 70 2. 08 38 9v 2 [ st at .M L ] 1 3 Ju n 20 17 Equivariance Through Parameter-Sharing Figure 1. Summary: given a group action on input and output of a neural network layer, define a parameter-sharing for this layer that is equivariant to these actions. (left) G = D5 is a Dihedral group, acting on a 4 \u00d7 5 input image and an output vector of size 5. N and M denote the index set of input, and output variables respectively. Here G is represented using its Cayley diagram. (middle-left) G-action for g \u2208 G is shown for an example input. G-action on the input is a combination of circular shifts (blue arrows) and vertical flips (red arrows) of the 2D image. G acts on the output indices M only through circular shift. A permutation group GN,M encodes the simultaneous \u201caction\u201d of G on input and output indices. (middle-right) The structure \u03a9 designed using our procedure, such that its symmetries Aut(\u03a9) subsumes the permutation group GN,M. (right) the same structure \u03a9 unfolded to a bipartite form to better show the resulting parameter-sharing in the neural layer. The layer is equivariant to G-action: shifting the input will shift the output of the resulting neural network function, while flipping the input does not change the output. the output does not transform at all, the function is invariant to the action of G. Therefore, invariance is a special equivariance. In this example, different translations correspond to the action of different members of G. The novelty of this work is its focus on the \u201cmodel symmetry\u201d as a gateway to equivariance. This gives us new theoretical guarantees for a \u201cstrict\u201d notion of equivariance in neural networks. The core idea is simple: consider a colored bipartite graph \u03a9 representing a neural network layer. Edges of the same color represent tied parameters. This neural network layer as a function is equivariant to the actions of a given group G (and nothing more) iff the action of G is the symmetry group of \u03a9 \u2013 i.e., there is a simple bijection between parameter symmetries and equivariences of the corresponding neural network. The problem then boils down to designing colored bipartite graphs with given symmetries, which constitutes a major part of this paper. Fig. 1 demonstrates this idea.1 For the necessary background on group theory see the Appendix. In the following, Section 1 formalizes equivariance wrt discrete group action. Section 2 relates the model symmetries a neural layer to its equivariance. Section 3 then builds on this observation to introduce two procedures for parameter-sharing that achieves a desirable equivariance. Throughout this paper, since we deal with finite sets, we use circular shift and circular convolution instead of shift and convolution. The two can be made identical with zero-padding of the input. Here, we also see how group and graph convolution as well as deep-sets become special instances in our parametersharing procedure, which provides new insight and improved design in the case of group convolution. Where input and output of the layer have a one-to-one mapping, we see that the design problem reduces a well-known problem in combinatorics. 1. Group Action and Equivariance Let x = [x1, . . . , xN ] \u2208 X denote a set of variables and G = {g} be a finite group. The discrete action of G on x is in the form of permutation of indices in N = {1, . . . ,N}. This group is a subgroup of the symmetric group SN; the group of all N ! permutations of N objects. We use \u00d0\u2192 N = [1, . . . ,N] to denote the ordered counterpart to N and the G-action on this vector g \u00d0\u2192 N \u2250 [g1, . . . ,gN] is a simple permutation. Using x\u00d0\u2192 N to denote x, the discrete action of g \u2208 G on x \u2208 X is given by gx\u00d0\u2192 N \u2250 x g \u00d0\u2192 N . G-action on N is a permutation group that is not necessarily isomorphic to G itself. GN \u2264 G captures the structure of G when it acts on N. We use gN to denote the image of g \u2208 G in GN. G-action is faithful iff two groups are isomorphic G \u2245 GN \u2013 that is G-action preserves its structure. In this case, each g \u2208 G maps to a distinct permutation g \u00d0\u2192 N \u2260 g\u2032\u00d0\u2192 N\u2200g,g\u2032 \u2208 G. Given any G-action on N we can efficiently obtain GN; see Appendix. Equivariance Through Parameter-Sharing Example 1.1 (Cyclic Group) Consider the cyclic group G = Z6 and define its action on x \u2208 R by defining it on the index set N = {1,2,3} as gn \u2250 g + n mod 3\u2200g \u2208 Z6. This action is not faithful. For example, the action of g = 1 and g = 4 result in the same permutations of variables in x; i.e., single-step of circular shift to the right. With the above action, the resulting permutation group GN is isomorphic to Z3 < Z6. Now consider the same group G = Z6 with a different action on N: gn \u2250 g \u2212 n mod 3\u2200g \u2208 Z6, where we replaced (+) with (\u2212). Let G\u0303N be the resulting permutation group. Here again G\u0303N \u2245 Z3. Although isomorphic, G\u0303N \u2260 GN, as they are different permutation groups of N. Consider the function \u03c6 \u2236 X \u2192 Y and let GN and GM be the action of G on input/output index sets N and M. Definition 1.1 The joint permutation group GN,M is a subdirect product (or pairing) of GN and GM GN,M = GN \u2299GM \u2250 {(gN,gM) \u2223 g \u2208 G}. We are now ready to define equivariance and invariance. \u03c6(\u22c5) is GN,M-equivariant iff gN\u03c6(x) = \u03c6(gMx) \u2200x \u2208 X , (gN,gM) \u2208 GN,M (1) Moreover, if GM = {e} is trivial, we have gN\u03c6(x) = \u03c6(x) \u2200x \u2208 X ,gN \u2208 GN and \u03c6(\u22c5) is GN-invariant. gN and gM can also be represented using permutation matrices GN \u2208 {0,1}N\u00d7N , and GM \u2208 {0,1}M\u00d7M . Equivariance relation of (1) then becomes GM\u03c6(x) = \u03c6(GNx)\u2200x \u2208 X , (GN,GM) \u2208 GN,M (2) The following observation shows that the subgroup relationship affects equivariance and invariance. Observation 1.1 If the function \u03c6 \u2236 X \u2192 Y is GN,M equivariant, then it is also HN,M -equivariant for any permutation group HN,M < G. Example 1.2 (Reverse Convolution) Consider the cyclic group G = Z6 and for g \u2208 G, define the action on N = {1,2,3} to be gn \u2250 g + n mod 3. Also let its action on M = {1, . . . ,6} be gm \u2250 g \u2212 n mod 6. In other words, G-action on N performs circular shift to the right and its action on M shifts variables to the left. Examples of the permutation matrix representation for two members of GN and GM are 2N = ( 0 1 0 0 0 1 1 0 0 ) 2M = \u239b \u239c \u239d 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 \u239e \u239f \u23a0 corresponding to right and left shift on vectors of different lengths. Now consider the function \u03c6 \u2236 R \u2192 R \u03c6W(x) =Wx W = ( 0 a b 0 a b a b 0 a b 0 b 0 a b 0 a ) \u2200a, b \u2208 R Using permutation matrices one could check the equivariance condition (2) for this function. We can show that \u03c6 is equivariant to GN,M. Consider 2 \u2208 Z6 and its images 2N \u2208 GN and 2M \u2208 GM. L.h.s. of (2) is 2M\u03c6W(x) = \u239b \u239c \u239d 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 \u239e \u239f \u23a0 \u239b \u239c \u239d 0 a b a b 0 b 0 a 0 a b a b 0 b 0 a \u239e \u239f \u23a0 x = \u239b \u239c \u239d b 0 a 0 a b a b 0 b 0 a 0 a b a b 0 \u239e \u239f \u23a0 x which is equal to its r.h.s. \u03c6W(2Nx) = \u239b \u239c \u239d 0 a b a b 0 b 0 a 0 a b a b 0 b 0 a \u239e \u239f \u23a0 ( 0 1 0 0 0 1 1 0 0 )x = \u239b \u239c \u239d b 0 a 0 a b a b 0 b 0 a 0 a b a b 0 \u239e \u239f \u23a0 x for any x. One could verify this equality for all g \u2208 Z6. Now consider the group HN,M < GN,M, where HN = GN and members of HM = {0,2,4}, perform left circular shift of length 0,2 and 4. It is easy to see that HN,M \u2245 Z3. Moreover since HN,M < GN,M, \u03c6(\u22c5) above is HN,Mequivariant as well. However, one prefers to characterize the equivariance properties of \u03c6 using GN,M rather than HN,M. The observation above suggests that GN,M-equivariance is not restrictive enough. As an extreme case, a constant function \u03c6(x) = 1 is equivariant to any permutation group GN,M \u2264 SN \u00d7 SM. In this case equivariance of \u03c6 with respect to a particular GN,M is not very informative to us. To remedy this, we define a more strict notion of equivariance. Definition 1.2 we say a function \u03c6 \u2236 X \u2192 Y is uniquely G-equivariant iff it is G-equivariant and it is \u201cnot\u201d H-equivariant for any H > G. 2. Symmetry Groups of a Network Given a group G, and its discrete action through GN,M, we are interested in defining parameter-sharing schemes for a parametric class of functions that guarantees their unique GN,M-equivariance. We start by looking at a single neural layer and relate its unique GN,M-equivariance to the symmetries of a colored multi-edged bipartite graph that deEquivariance Through Parameter-Sharing fines parameter-sharing. We then show that the idea extends to multiple-layers. Definition 2.1 A colored multi-edged bipartite graph \u03a9 = (N,M, \u03b1) is a triple, where N and M are its two sets of nodes, and \u03b1 \u2236 N \u00d7 M \u2192 2{1,...,C} is the edge function that assigns multiple edge-colors from the set {1, . . . ,C} to each edge. Non-existing edges receive no color. We are interested in the symmetries of this structure. The set of permutations (\u03c0N, \u03c0M) \u2208 SN \u00d7 SM of nodes (within each part of the bipartite graph) that preserve all edgecolors define the Automorphism Group Aut(\u03a9) \u2264 SN \u00d7 SM \u2013 that is \u2200(n,m) \u2208 N \u00d7M (\u03c0N, \u03c0M) \u2208Aut(\u03a9) \u21d4 \u03b1(n,m) = \u03b1((\u03c0Nn,\u03c0Mm)) (3) Alternatively, to facilitate the notation, we define the same structure (colored multi-edged bipartite graph) as a set of binary relations between N and M \u2013 that is \u03a9 = (N,M,{\u2206c}1\u2264c\u2264C) where each relation is associated with one color \u2206c = {(n,m) \u2223 c \u2208 \u03b1(n,m)\u2200(n,m) \u2208 N \u00d7M}. This definition of structure, gives an alternative expression for Aut(\u03a9) (\u03c0N, \u03c0M) \u2208Aut(\u03a9) \u21d4 (4) ((n,m) \u2208 \u2206c \u21d4 (\u03c0Nn,\u03c0Mm) \u2208 \u2206c) \u2200c, n,m The significance of this structure is in that, it defines a parameter-sharing scheme in a neural layer, where the same edge-colors correspond to the same parameters. Consider the function \u03c6 \u2250 [\u03c61, . . . , \u03c6M ] \u2236 R \u2192 R", "title": "Equivariance Through Parameter-Sharing"}