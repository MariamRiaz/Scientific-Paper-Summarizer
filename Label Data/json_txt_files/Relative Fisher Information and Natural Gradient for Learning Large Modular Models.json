{"sections": [{"heading": "1. Fisher Information Metric", "text": "The Fisher Information Metric (FIM) I(\u0398) = (Iij) of a statistical parametric model p(x |\u0398) of order D is defined by a D\u00d7D positive semidefinite (psd) matrix (I(\u0398) 0) with coefficients Iij = Ep [ \u2202l \u2202\u0398i \u2202l \u2202\u0398j ] , where l(\u0398) denotes the log-density function log p(x |\u0398). Under light regularity conditions, FIM can be rewritten equivalently as\nIij = \u2212Ep [ \u22022l\n\u2202\u0398i\u2202\u0398j\n] = 4 \u222b \u2202 \u221a p(x |\u0398) \u2202\u0398i \u2202 \u221a p(x |\u0398) \u2202\u0398j dx.\nAs its empirical counterpart, the observed FIM (Efron & Hinkley, 1978) with respect to (wrt) a sample set Xn = {xk}nk=1 is I\u0302(\u0398 |Xn) = \u2212\u22072l(\u0398 |Xn), which is often evaluated at the maximum likelihood estimate \u0398 = \u0398\u0302(Xn). By the law of large numbers, I\u0302(\u0398) converges to the (expected) FIM I(\u0398) as n\u2192\u221e.\n1King Abdullah University of Science and Technology (KAUST), Saudi Arabia 2E\u0301cole Polytechnique, France 3Sony Computer Science Laboratories Inc., Japan. Correspondence to: Ke Sun <sunk@ieee.org>, Frank Nielsen <Frank.Nielsen@acm.org>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nThe FIM is not invariant and depends on the parameterization. We can optionally write I(\u0398) as I\u0398(\u0398) to emphasize the coordinate system. By definition, I\u0398(\u0398) = J\u1d40I\u039b(\u039b)J where J = (Jij), Jij = \u2202\u039bi\u2202\u0398j is the Jacobian matrix. For example, the FIM of regular natural exponential families (NEFs) l(\u0398) = \u0398\u1d40t(x) \u2212 F (\u0398) (loglinear models with sufficient statistics t(x)) is I(\u0398) = \u22072F (\u0398) 0, the Hessian of the log-normalizer function F (\u0398). Although exponential families can approximate arbitrarily any smooth density (Cobb et al., 1983), the lognormalizer function may not be available in closed-form nor computationally tractable (Montanari, 2015).\nThe FIM is an important concept for statistical machine learning. It gives a Riemannian metric (Hotelling, 1929; Rao, 1945) of the learning parameter space which is unique (C\u030cencov, 1982; Dowty, 2017). Hence any learning is in a space that is intrinsically curved based on the FIM, regardless of the choice of the coordinate system. It also gives a bound (Fre\u0301chet, 1943; Crame\u0301r, 1946; Nielsen, 2013) of learning efficiency saying that the variance of any unbiased learning of \u0398 is at least I\u22121(\u0398)/n, where n is the i.i.d. sample size. The FIM is applied to neural network optimization (Amari, 1997), metric learning (Lebanon, 2005), reinforcement learning (Thomas, 2014) and manifold learning (Sun & Marchand-Maillet, 2014).\nHowever computing the FIM is expensive. Besides the fact that learning machines have often singularities (Watanabe, 2009) (|I(\u0398)| = 0, not full rank) characterized by plateaux in gradient learning, computing/estimating the FIM of a large neuron system (e.g. one with millions of parameters, Szegedy, Christian et al. 2015) is very challenging due to the finiteness of data, and the huge number D(D+1)2 of matrix coefficients to evaluate. Furthermore, gradient descent techniques require inverting this large matrix and tuning the learning rate.\nTo tackle this problem, past works mainly focus on how to approximate the FIM with a block diagonal form (Kurita, 1994; Le Roux et al., 2008; Martens, 2010; Pascanu & Bengio, 2014; Martens & Grosse, 2015) or quasi-diagonal form (Ollivier, 2013; Marceau-Caron & Ollivier, 2016). This global approach faces increasing approximation error and increasing computational cost as the system scales up\nand as complex and dynamic structures (Looks et al., 2017) emerge.\nThis work aims at a different local approach. The idea is to accurately describe the information geometry (IG) in a subsystem of the large learning system, which is invariant to the scaling up and structural change of the global system, so that the local machinery, including optimization, can be discussed regardless of the other parts.\nFor this purpose, a novel concept, the Relative Fisher Information Metric (RFIM), is defined. Unlike the traditional geometric view of a high-dimensional parameter manifold, RFIMs defines multiple projected low-dimensional geometries of subsystems. This geometry is correlated to the parameters beyond the subsystem and is therefore considered dynamic. It can be used to characterize the efficiency of a local learning process. Taking this stance has potential in deep learning because a deep neural network can be decomposed into many local components such as neurons or layers. The RFIM is well suited to the compositional block structures of neural networks. The RFIM can be used for out-of-core learning.\nThe paper is organized as follows. Sec. 2 reviews natural gradient within the context of Multi-Layer Perceptrons (MLPs). Sec. 3 formally defines the RFIM, and gives a table of RFIMs of several commonly used subsystems. Sec. 4 discusses the advantages of using the RFIM as compared to the FIM. Sec. 5 gives an algorithmic framework and proof-of-concept experiments on neural network optimization. Sec. 6 presents related works on parameter diagonalization. Sec. 7 concludes this work and further hints at perspectives."}, {"heading": "2. Natural Gradient: Review and Insights", "text": "Consider a MLP x \u03b81\u2212\u2192 h1 \u00b7 \u00b7 \u00b7hL\u22121 \u03b8L\u2212\u2212\u2192 y, whose statistical model is the following conditional distribution\np(y |x,\u0398) = \u2211\nh1,\u00b7\u00b7\u00b7 ,hL\u22121\np(h1 |x,\u03b81) \u00b7 \u00b7 \u00b7 p(y |hL\u22121,\u03b8L).\nThe often intractable sum over h1, \u00b7 \u00b7 \u00b7 ,hL\u22121 can be get rid off by deteriorating p(h1 |x,\u03b81), \u00b7 \u00b7 \u00b7 , p(hL\u22121 |hL\u22122,\u03b8L\u22121) to Dirac\u2019s deltas \u03b4, and letting merely the last layer p(y |hL\u22121,\u03b8L) be stochastic. Other models such as restricted Boltzmann machines (Nair & Hinton, 2010; Montavon & Mu\u0308ller, 2012), deep belief networks (Hinton et al., 2006), dropout (Wager et al., 2013), and variational autoencoders (Kingma & Welling, 2014) do consider the hi\u2019s to be stochastic.\nThe tensor metric of the neuromanifold (Amari, 1995) M, consisting of all MLPs with the same architecture but different parameter values, is locally defined by the FIM. Because a MLP corresponds to a con-\nditional distribution, its FIM is a function of the input x. By taking an empirical average over the input samples {xk}nk=1, the FIM of a MLP can be expressed as I\u0398(\u0398) = 1n \u2211n k=1Ep(y |xk,\u0398) [ \u2202lk \u2202\u0398 \u2202lk \u2202\u0398\u1d40 ] , where lk(\u0398) = log p(y |xk, \u0398) denotes the conditional log-likelihood function wrt xk.\nTo understand the meaning of the Riemannian metric I\u0398(\u0398), it measures the intrinsic difference between two nearby neural networks around \u0398 \u2208 M. A learning step can be regarded as a tiny displacement \u03b4\u0398 onM. According to the FIM, the infinitesimal square distance\n\u3008\u03b4\u0398, \u03b4\u0398\u3009I\u0398(\u0398) = 1\nn n\u2211 k=1 Ep(y |xk,\u0398)\n[( \u03b4\u0398\u1d40\n\u2202lk \u2202\u0398 )2] (1)\nmeasures how much \u03b4\u0398 (with a radius constraint) is statistically along \u2202l\u2202\u0398 , or equivalently how much \u03b4\u0398 affects intrinsically the conditional distribution p(y |x, \u0398).\nConsider the negative log-likelihood function L(\u0398) = \u2212 \u2211n k=1 log p(yk |xk,\u0398) wrt the observed pairs {(xk,yk)}nk=1, we try to minimize the loss while maintaining a small learning step size \u3008\u03b4\u0398, \u03b4\u0398\u3009I\u0398(\u0398) on M. At \u0398t \u2208 M, the target is to minimize wrt \u03b4\u0398 the Lagrange function\nL(\u0398t + \u03b4\u0398) + 1\n2\u03b3 \u3008\u03b4\u0398, \u03b4\u0398\u3009I\u0398(\u0398t)\n\u2248 L(\u0398t) + \u03b4\u0398\u1d40 5\u0398 L(\u0398t) + 1\n2\u03b3 \u03b4\u0398\u1d40I\u0398(\u0398t)\u03b4\u0398,\nwhere \u03b3 > 0 is a learning rate. The optimal solution of the above quadratic optimization gives a learning step\n\u03b4\u0398t = \u2212\u03b3I\u22121\u0398 (\u0398t)5\u0398 L(\u0398t).\nIn this update procedure, \u2207\u0303\u0398L(\u0398) = I\u22121\u0398 (\u0398)5\u0398 L(\u0398) replaces the role of the usual gradient \u2207\u0398L(\u0398) and is called the natural gradient (Amari, 1997).\nAlthough the FIM depends on the chosen parameterization, the natural gradient is invariant to reparameterization. Let \u039b be another coordinate system and J be the Jacobian matrix of the mapping \u0398\u2192 \u039b. Then we have\nI\u22121\u0398 (\u0398)5\u0398 L(\u0398) = (J \u1d40I\u039b(\u039b)J)\u22121 J\u1d40 5\u039b L(\u039b)\n= J\u22121I\u22121\u039b (\u039b)5\u039b L(\u039b),\nshowing that \u2207\u0303\u0398L(\u0398) and \u2207\u0303\u039bL(\u039b) are the same dynamic up to coordinate transformation. As the learning rate \u03b3 is not infinitesimal in practice, natural gradient descent actually depends on the coordinate system (see e.g. Martens 2014). Other intriguing properties of natural gradient optimization lie in being free from getting trapped in plateaux of the error surface, and attaining Fisher efficiency in online learning (see Sec. 4 Amari 1998).\nM\u0398\n\u0398 yx\nM\u03b81\nx\nx+ \u2206x\n\u03b81x\nM\u03b82h1\nh1 + \u2206h1\n\u03b82h1\nM\u03b83\nh2\nh2 + \u2206h2\n\u03b83h2 y\nModel:\nManifold:\nComputational graph:\nMetric:\n\u0398\n\u0398 I(\u0398)\n\u03b83 h2\n\u03b83\nh2\ngy(\u03b83)\n\u03b82 h1\n\u03b82\nh1\ngh2(\u03b82)\n\u03b81\n\u03b81 gh1(\u03b81)\np(y |\u0398,x) = \u2211 h1 \u2211 h2 p(h1 |\u03b81,x) p(h2 |\u03b82,h1) p(y |\u03b83,h2)\nFigure 1. (left) The traditional global geometry of a MLP; (right) information geometry of subsystems. The gray and blue meshes show that the subsystem geometry is dynamic when the reference variable makes a tiny move. The square under the (sub-)system means the (R-)FIM is computed by (i) computing the FIM in the traditional way wrt all free parameters that affect the system output; (ii) choosing a sub-block that contains only the internal parameters of the (sub-)system and regarding the remaining variables as the reference.\nFor the sake of simplicity, we do not discuss singular FIMs with a subset of parameters having zero metric. This set of parameters forms an analytic variety (Watanabe, 2009), and technically the MLP as a statistical model is said to be non-regular (and the parameter \u0398 is not identifiable). The natural gradient has been extended (Thomas, 2014) to cope with singular FIMs having positive semi-definite matrices by taking the Moore-Penrose pseudo-inverse (that coincides with the inverse matrix for full rank matrices).\nIn the family of 2nd-order optimization methods, a fuzzy line can be drawn from the natural gradient and alternative methods such as the Hessian-free optimization (Martens, 2010). By definition, the FIM is a property of the parameter space which is independent or weakly dependent on the input samples. For example, the FIM of a MLP is independent of {yi}. In contrast, the Hessian (or related concepts such as the Gauss-Newton matrix, Martens 2014) is a property of the learning cost function wrt the input samples.\nBonnabel (Bonnabel, 2013) proposed to use the Riemannian exponential map to define a gradient descent step, thus ensuring to stay on the manifold for any chosen learning rate. Convergence is proven for Hadamard manifolds (of negative curvatures). However, it is not mathematically tractable to express the exponential map of hierarchical model manifolds like the neuromanifold."}, {"heading": "3. RFIM: Definition and Expressions", "text": "In general, for large parametric systems, it is impossible to diagonalize or decorrelate all the parameters, so that we split instead all random variables into three parts \u03b8f , \u03b8 and h. We examine their intuitive meanings before giving the formal definition. The reference, \u03b8f , consists of the majority of the random variables that are considered fixed (therefore allowing us to simplify the analysis). This is in analogy to the notion of a reference frame in physics. \u03b8 is the\nsubsystem parameters, resembling the long-term memory adapting slowly to the observations (e.g. neural network weights). The response h is a random variable that reacts to the variations of \u03b8. Usually, h is the output of the subsystem that is connected to neighbour subsystems (e.g. hidden layer outputs). Formally, a subsystem which factorizes the learning machine is characterized by the conditional distribution p(h |\u03b8,\u03b8f ), where \u03b8 can be estimated based on h and \u03b8f . We make the following definition. Definition 1 (RFIM). Given \u03b8f , the RFIM 1 of \u03b8 wrt h is\ngh (\u03b8 |\u03b8f ) def = Ep(h | \u03b8, \u03b8f ) [ \u2202\n\u2202\u03b8 log p(h |\u03b8, \u03b8f )\n\u2202\n\u2202\u03b8\u1d40 log p(h |\u03b8, \u03b8f )\n] ,\nor simply gh (\u03b8), corresponding to the estimation of \u03b8 based on observations of h given \u03b8f .\nFor example, consider a MLP. If we choose \u03b8f to be the input features x, choose h to be the final output y, and choose \u03b8 to be all the network weights \u0398, then the RFIM becomes the FIM: I(\u0398) = gy(\u0398 |x).\nMore generally, we can choose the response h to be other than the observables to compute the Fisher information of subsystems, especially dynamically during the learning of the global machine. To see the meaning of the RFIM, similar to eq. (1), the infinitesimal square distance \u3008\u03b4\u03b8, \u03b4\u03b8\u3009gh(\u03b8) = Ep(h | \u03b8, \u03b8f ) [( \u03b4\u03b8\u1d40 \u2202\u2202\u03b8 log p(h |\u03b8, \u03b8f )\n)2] measures how much \u03b4\u03b8 impacts intrinsically the stochastic mapping \u03b8 \u2192 h which features the subsystem. We have the following proposition following definition 1.\nProposition 2 (Relative Geometry Consistency). If \u03b81 consists of a subset of \u03b82 so that \u03b82 = (\u03b81, \u03b8\u03031), then \u2200\u03b8\u03031, M\u03b81 with the metric gh(\u03b81 | \u03b8\u03031) has exactly the same Rie-\n1We use the same term \u201crelative FIM\u201d (Zegers, 2015) with a different definition.\nmannian metric with the sub-manifold {\u03b82 \u2208 M\u03b82 : \u03b8\u03031 is fixed} induced by the ambient metric gh (\u03b82).\nWhen the response h is chosen, then different splits of (\u03b8,\u03b8f ) are consistent with the same ambient geometry.\nFigure 1 shows the traditional global geometry of a learning system, where the curvature is defined by the learner\u2019s parameter sensitivity to the external environment (x and y), as compared to the information geometry of subsystems, where the curvature is defined by the parameter sensitivity wrt hidden interface variables h. The two-colored meshes show that the geometry structure is dynamic and varies with the reference variable \u03b8f .\nOne should not confuse the RFIM with the diagonal blocks of the FIM (Kurita, 1994). Both their meanings and expressions are different. The RFIM is computed by integrating out the hidden response variables h. The FIM is always computed by integrating out the observables x and y. Hence the RFIM is a more general concept and includes the FIM as a special case. This highlights a main difference with the backpropagated metric (Ollivier, 2013), which essentially considers parameter sensitivity wrt the final output. Despite the fact that the FIMs of small parametric structures such as single neurons was studied (Amari, 1997), we are not looking at a small single-component system but a component embedded in a large system, targeting at improving the large system.\nIn the following we provide a short table of commonly used RFIMs for future reference (the RFIMs listed are mostly straightforward from definition 1, with detailed derivations given in the supplementary material). This is meaningful since the RFIM is a new concept. We also want to demonstrate these simple closed form expressions without any approximations."}, {"heading": "3.1. RFIMs of One Neuron", "text": "We start from the RFIM of single neuron models. Consider a stochastic neuron with input x and weights w. After a nonlinear activation function f , the output y is randomized surrounding the mean f(w\u1d40x\u0303) with a variance. Throughout this paper x\u0303 = (x\u1d40, 1)\u1d40 denotes the augmented vector of x (homogeneous coordinates) so that w\u1d40x\u0303 contains a bias term, and a general linear transformation can be written simply asAx\u0303.\nUsing x as the reference, the RFIM of w with respect to y has a common form gy(w |x) = \u03bdf (w,x)x\u0303x\u0303\u1d40, where \u03bdf (w,x) is a positive coefficient with large values in the linear region, or the effective learning zone of the neuron. This agrees with early studies on single neuron FIMs (Amari, 1997; Kurita, 1994).\nIf f(t) = tanh(t) is the hyperbolic tangent func-\ntion, then \u03bdf (w,x) = sech2(w\u1d40x\u0303), where sech(t) = 2 exp(t)+exp(\u2212t) is the hyperbolic secant function. Similarly, if f(t) = sigm(t) is the sigmoid function, then \u03bdf (w,x) = sigm (w \u1d40x\u0303) [ 1\u2212 sigm (w\u1d40x\u0303) ] .\nIf f is defined by Parametric Rectified Linear Unit (PReLU) (He et al., 2015), which includes Rectified Linear Unit (ReLU) (Nair & Hinton, 2010) as a special case, so that f(t) = t (t \u2265 0), f(t) = \u03b9t (t < 0), 0 \u2264 \u03b9 < 1, then under certain approximations (see supplementary material)\n\u03bdf (w,x) =\n[ \u03b9+ (1\u2212 \u03b9)sigm ( 1\u2212 \u03b9 \u03c9 w\u1d40x\u0303 )]2 ,\nwhere \u03c9 > 0 is a hyper-parameter (e.g. \u03c9 = 1).\nFor the exponential linear unit (ELU) (Clevert et al., 2015), f(t) = t (t \u2265 0), f(t) = \u03b1 (exp(t)\u2212 1) (t < 0), where \u03b1 > 0 is a hyper-parameter. We get\n\u03bdf (w,x) = { 1 if w\u1d40x\u0303 \u2265 0 \u03b12 exp (2w\u1d40x\u0303) if w\u1d40x\u0303 < 0."}, {"heading": "3.2. RFIM of One Layer", "text": "Let D denote the dimensionality of the corresponding variable. A linear layer with input x, connection weights W = [ w1, \u00b7 \u00b7 \u00b7 ,wDy ] , and stochastic output y can be represented by y \u223c G(W \u1d40x\u0303, \u03c32I), where I is the identity matrix, and \u03c3 is the scale of the observation noise, and G(\u00b5,\u03a3) is a multivariate Gaussian distribution with mean \u00b5 and covariance matrix \u03a3. We vectorize W by stacking its columns {wi}. Then gy(W |x) is a tensor of size (Dx + 1)Dy\u00d7 (Dx + 1)Dy , given by gy(W |x) = diag [x\u0303x\u0303\u1d40, \u00b7 \u00b7 \u00b7 , x\u0303x\u0303\u1d40], where diag(\u00b7) means the (block) diagonal matrix constructed by the given matrix entries.\nA nonlinear layer increments a linear layer by adding an element-wise activation function applied on W \u1d40x\u0303, and then randomized wrt the choice of the neuron. By definition 1, its RFIM is given by\ngy (W |x) = diag [ \u03bdf (w1,x)x\u0303x\u0303 \u1d40, \u00b7 \u00b7 \u00b7 , \u03bdf (wm,x)x\u0303x\u0303\u1d40 ] , (2)\nwhere \u03bdf (wi,x) is given in Subsec. 3.1.\nA softmax layer, which often appears as the last layer of a MLP, is given by y \u2208 {1, . . . ,m}, where p(y) = \u03b7y = exp(wyx\u0303)\u2211m i=1 exp(wix\u0303) . Its RFIM is a dense matrix given by\ngy(W ) =  (\u03b71 \u2212 \u03b721)x\u0303x\u0303\u1d40 \u00b7 \u00b7 \u00b7 \u2212\u03b71\u03b7mx\u0303x\u0303\u1d40 \u2212\u03b72\u03b71x\u0303x\u0303\u1d40 \u00b7 \u00b7 \u00b7 \u2212\u03b72\u03b7mx\u0303x\u0303\u1d40 ... . . .\n... \u2212\u03b7m\u03b71x\u0303x\u0303\u1d40 \u00b7 \u00b7 \u00b7 (\u03b7m \u2212 \u03b72m)x\u0303x\u0303\u1d40  . Notice that its i\u2019th diagonal block (\u03b7i \u2212 \u03b72i )x\u0303x\u0303\u1d40 resembles the RFIM of a single sigm neuron."}, {"heading": "3.3. RFIM of Two Layers", "text": "By eq. (2), the one-layer RFIM is a product metric (Jost, 2011) and does not consider the inter-neuron correlations, which must be obtained by looking at a larger subsystem. Consider a two-layer model with stochastic output y around the mean vector f(C\u1d40h\u0303), where h = f (W \u1d40x\u0303). For simplicity, we ignore inter-layer correlations between the first layer and the second layer and focus on the interneuron correlations within the first layer. To do this, both x and C are considered as references to compute the RFIM of W . By definition 1, gy(W |x,C) = [Gij ]Dh\u00d7Dh and each block has the form\nGij = Dy\u2211 l=1 cilcjl\u03bdf (cl,h)\u03bdf (wi,x)\u03bdf (wj ,x)x\u0303x\u0303 \u1d40.\nNow that we have the one-layer and two-layer RFIMs, we can either split a given feed-forward neural network into one-layer subsystems or into two-layer subsystems. A trade-off is that using a larger subsystem entails greater analytical and computational difficulty, although it could more accurately model the global system dynamics. In the extreme case, the FIM is obtained if the whole system is considered as one single subsystem."}, {"heading": "4. RFIM: Key Advantages", "text": "This section discusses the theoretical advantages of the RFIM over the FIM. Consider wlog a MLP with Bernoulli outputs y \u2208 {0, 1}m, whose mean \u00b5 is a deterministic function depending on the input x and the network parameters \u0398. By Sec. 2, the FIM of the MLP can be computed as (see supplementary for proof)\nI(\u0398) = 1 n n\u2211 i=1 m\u2211 j=1\n1 \u00b5j(xi)(1\u2212 \u00b5j(xi)) \u2202\u00b5j(xi) \u2202\u0398 \u2202\u00b5j(xi) \u2202\u0398\u1d40 .\n(3) Therefore rank(I(\u0398)) \u2264 nm. The rank of a diagonal block of I(\u0398) corresponding to one layer is even smaller. In a deep neural network (e.g. Szegedy, Christian et al. 2015), if the sample size n < dim(\u0398)/m, then I(\u0398) is doomed to be singular. All methods trying to approximate the FIM suffer from this problem and therefore rely on proper regularizations. If the network is decomposed into layers, the RFIM of each subsystem (layer) is given by eq. (2). Each sample can contribute maximally 1 to the rank of the neuron-RFIM and can contribute maximally Dy to the rank of the layer-RFIM. It only requires maxi{dim(wi)} (the maximum layer width) observations to have a full rank RFIM, where wi is the weight vector of the i\u2019th neuron. The RFIM is expected to have a much higher rank than the FIM. Higher rank means less singularity and more information is captured. Models that can\nbe distinguished by the RFIM may be identical in the sense of the FIM. Essentially, the RFIM integrates the internal randomness (Bengio, 2013) of the neural system by considering the output of each layer as a random variable. In theory, the FIM should also consider stochastic neurons. However it requires marginalizing the joint distribution of h1, h2, \u00b7 \u00b7 \u00b7 , y. This makes the already infeasible computation even more challenging.\nThe RFIM is not an approximation of the FIM but is an accurate metric, defining the geometry of \u03b8 wrt to its direct response h in the system, or adjacent nodes in a graphical model. By the example in fig. 1, gy(\u03b8L) of the last layer is exactly the corresponding block in I(\u0398): they both characterize how \u03b8L affects the mapping hL\u22121 \u2192 y. They start to diverge from the second to last layer. To compute the geometry of \u03b8L\u22121, the RFIM looks at how \u03b8L\u22121 affects the local mapping hL\u22122 \u2192 hL\u22121, which can be measured reliably regardless of the rest of the system (think of a \u201cdebugging\u201d process to separate and measure a single component). In contrast, the FIM examines how \u03b8L\u22121 affects the non-local mapping hL\u22122 \u2192 y. This is a difficult task because it must consider the correlation between different layers. As an approximation, the block diagonalized version of the FIM ignores such correlations and therefore faces the loss of accuracy.\nThe RFIM makes it possible to maintain global system stability so that the intrinsic variations of different subsystems are balanced during learning. Consider a set of interconnected subsystems with internal parameters {\u03b8l} and the corresponding response variables {hl}. The RFIM ghl(\u03b8l) measures how much the likelihood surface of hl is curved wrt a small learning step \u03b4\u03b8l. By constraining the squared Riemannian distance \u03b4\u03b8\u1d40l g\nhl(\u03b8l)\u03b4\u03b8l having similar scales, different subsystems will present similar variations during learning. Within one subsystem, the learning along sensitive parameter directions is penalized. Among different subsystems, the learning of sensitive subsystems is penalized. Globally, the inter-subsystem stochastic connections have similar variance, maintaining a stable reference system and achieving efficient learning. This is similar to the idea of batch normalization (BN) (Ioffe & Szegedy, 2015) but has a deeper theoretical foundation.\nFormally, we have the following theorem.\nTheorem 3. Consider a learning system represented by a joint distribution p(x,h) of x (observables) and h (hidden variables which connect subsystems). The joint FIM J (\u0398) = Ep ( log p(x,h |\u0398) \u2202\u0398 log p(x,h |\u0398) \u2202\u0398\u1d40 ) has a block diagonal form. Each block isEp(gh(\u03b8)), where \u03b8 is the parameters within a subsystem and h is its response variables to neighour subsystems.\nThe global correspondence of the local RFIM is the joint\nFIM. By theorem 3, the square distance d\u0398\u1d40J (\u0398)d\u0398 = Ep( \u2211 l d\u03b8 \u1d40 l g hl(\u03b8l)d\u03b8l) measures the system variance, including both the observables x and the hidden variables h. An intrinsic trade-off between the RFIM and the FIM is learning system stability versus efficiency. Normalizing the FIM is more efficient because it helps to achieve Fisher efficiency (Amari, 1998). Normalizing the RFIM is more stable since the hidden variations are bounded, which only guarantees subsystem Fisher efficiency characterized by the Crame\u0301r-Rao lower bound of local parameters."}, {"heading": "5. Relative Natural Gradient Descent", "text": "The traditional non-parametric way of applying natural gradient requires re-calculating the FIM and solving a large linear system in each learning step. Besides the huge computational cost, it has a large approximation error. For example during online learning, a mini-batch of samples cannot faithfully reflect the \u201ctrue\u201d geometry, which has to integrate the risk of sample variations. That is, the FIM of a mini-batch is likely to be singular or poorly conditioned.\nA recent series of efforts (Montavon & Mu\u0308ller, 2012; Raiko et al., 2012; Desjardins et al., 2015) are gearing towards a parametric approach to applying natural gradient, which memorizes and learns a geometry. For example, natural neural networks (Desjardins et al., 2015) augment each layer with a redundant linear layer, and let these linear layers parametrize the geometry of the neural manifold.\nBy dividing the learning system into subsystems, the RFIM potentially gives a systematical implementation of parametric natural gradient descent. The memory complexity of storing the Riemannian metric has been reduced from O(D2) to O( \u2211 iD 2 i ), where Di = dim(wi) is the size of the i\u2019th neuron. Consider there are M neurons in total, then the memory cost is reduced by a factor of M . The computational complexity has been reduced from O(D%) (% \u2248 2.373, Williams 2012) to O( \u2211 iD % i ). Optimization based on RFIM is called Relative Natural Gradient Descent (RNGD).\nThe good performance of batch normalization (Ioffe & Szegedy, 2015) provides an empirical support for the RFIM. Basically, BN uses an inter-sample normalization layer to transform the layer input x to z with zero mean and unit variance and thus reduces \u201cinternal covariate shift\u201d. In a typical case, above this normalization layer is a linear layer given by y = W \u1d40z\u0303. If each dimension of z is normalized, then the diagonal blocks of the linear layer RFIM gy(W ) = diag[z\u0303z\u0303\u1d40, \u00b7 \u00b7 \u00b7 , z\u0303z\u0303\u1d40] become a covariance matrix with identity diagonal entries (after taking an empirical average). This gives the coordinate system W a well conditioned RFIM for efficient learning.\n5.1. RNGD with a relu MLP\nThis subsection builds a proof-of-concept experiment on MLP optimization. We partition the MLP into layers (one layer consists of a linear layer plus an element-wise nonlinear activation function) as the subsystems. By eq. (2), the RFIM of layer l (l = 1, \u00b7 \u00b7 \u00b7 , L) with input hl\u22121 (h0 = x) and weights {wl1, \u00b7 \u00b7 \u00b7 ,wlml} is\ndiag [ \u03bdf (wl1,hl\u22121)h\u0303l\u22121h\u0303 \u1d40 l\u22121, \u00b7 \u00b7 \u00b7 , \u03bdf (wlml ,hl\u2212l)h\u0303l\u22121h\u0303 \u1d40 l\u22121 ] .\nThe subsystem stability during one learning step \u03b4w can be measured geometrically by\u2211L l=1 \u2211ml i=1 \u03bdf (wli,hl\u22121)(\u03b4w \u1d40 lih\u0303l\u22121)\n2. Using this term as the geometric cost (the Lagrange term) in the trust region approach in Sec. 2, we get the following RNGD method. In a stochastic gradient descent scenario, each neuron i in layer l is updated by\nwnewli \u2190 woldli \u2212G\u22121li \u2202E\n\u2202wli ,\nwhere E is the cost function and Gli is a learned metric. The consideration is that a mini-batch of samples do not contain enough information to compute the RFIM, which should be averaged over all training samples. Therefore, for the i\u2019th neuron in layer l, Gli is initialized to identity, and is updated based on\nGnewli \u2190 (1\u2212 \u03bb)Goldli + \u03bb\u03bdf (wli,hl\u22121)h\u0303l\u22121h\u0303 \u1d40 l\u22121 + I,\nwhere > 0 is a hyper-parameter to avoid singularity caused by small sample size, and the average is taken over all samples in a mini-batch, and \u03bb is a learning rate. In theory, \u03bb should be gradually reduced to zero to guarantee the convergence of this geometry learning. To avoid solving a linear system in each iteration, every T iterations we recompute and store G\u22121li based on the most updated Gli. In the next T iterations, this G\u22121li will be used as an approximation of the inverse RFIM. For the input layer which scales with the number of input features, and the final softmax layer, we apply instead the RFIM of the corresponding linear layer to improve the computational efficiency.\nWe compare different optimizers on classifying MNIST digits. The network has shape 784-80-80-80-10, with relu activation units, a final soft-max layer, and uses the persample average cross-entropy with L2-regularization as the learning cost function. We experiment on two different architectures: one is a plain MLP (PLAIN); the other has a batch normalization layer after each hidden layer (BNA), where a rescaling parameter is applied to ensure enough flexibility of the parametric structure (Ioffe & Szegedy, 2015). For simplicity, the architecture, mini-batch size (50), and L2 regularization strength (10\u22123) are fixed to be the same for all compared methods. The observations are consistent when these configurations vary.\nFigure 2 shows the learning curves of different methods. SGD is stochastic gradient descent. ADAM is the Adam optimizer (Kingma & Ba, 2014) with \u03b21 = 0.9, \u03b22 = 0.999 and = 10\u22128. Our RNGD is implemented by modifying TensorFlow\u2019s (Abadi, Mart\u0131\u0301n et al., 2015) SGD optimizer. We set empirically T = 100, \u03bb = 0.005 and \u03c9 = 1.\nRNGD presents a sharper learning curve and better generalization, especially when it is combined with BN. In this case, the final tranining error of RNGD is slightly larger than ADAM because by validation it favors a larger learning rate, which is applied on the neural network weights (based on RNGD) and BN parameters (based on SGD). For the ReLU activation, \u03bdf (wi,x) is approximately binary, emphasizing such informative samples with w\u1d40i x\u0303 > 0, which are the ones contributing to the learning of wi with non-zero gradient values. Each output neuron has a different subset of informative samples. RNGD normalizes x differently wrt different output neurons, so that the in-\nformative samples for each output neuron are centered and decorrelated.\nIn the above experiment, RNGD\u2019s computational time per each epoch is roughly 4 \u223c 10 times more than SGD and ADAM on a modern graphic card. Therefore in terms of wall clock time RNGD does not show advantages. This can be improved by more efficient implementations with low rank approximation techniques and early stopping. Our RNGD prototype hints at a promising direction to develop scalable 2nd-order deep learning optimizers based on the RFIM."}, {"heading": "6. Related Works on FIM Diagonalization", "text": "One may ponder whether we can always find a suitable parameterization that yields a diagonal FIM that is straightforward to invert. This fundamental problem of parameter orthogonalization was first investigated by Jeffreys (1998) for decorrelating the parameters of interest from the nuisance parameters. Fisher diagonalization yields parameter orthogonalization (Cox & Reid, 1987), and is proved useful when estimating \u0398\u0302 using a maximum likelihood estimator (MLE) that is asymptotically normally distributed, \u0398\u0302n \u223c G(\u0398, I\u22121(\u0398)/n), and efficient since the variance of the estimator matches the Crame\u0301r-Rao lower bound. Using the chain rule, this amounts to find a suitable parameterization \u2126 = \u2126(\u0398) satisfying\u2211\ni,j\nE\n[ \u22022l\n\u2202\u0398i\u2202\u0398j ] \u2202\u0398i \u2202\u2126k \u2202\u0398j \u2202\u2126l = 0, \u2200k 6= l.\nThus in general, we end up with ( D 2 ) = D(D\u22121)2 (nonlinear) partial differential equations to satisfy (Huzurbazar, 1950). Therefore, in general there is no solution when( D 2 ) > D, that is when D > 3. When D = 2, the single differential equation is usually solvable and tractable, and the solution may not be unique: For example, Huzurbazar (1950) reports two orthogonalization schemes for the location-scale families { 1\u03c3p0( x\u2212\u00b5 \u03c3 )} that include the Gaussian family and the Cauchy family. Sometimes, the structure of the differential equation system yields a solution: For example, Jeffreys (1998) reported a parameter orthogonalization for Pearson\u2019s distributions of type I which is of orderD = 4. Cox and Reid (1987) further investigated this topic with application to conditional inference, and provide examples (including the Weibull distribution).\nFrom the viewpoint of geometry, the FIM induces a Riemannian manifold with metric tensor g(\u0398) = I(\u0398). When the FIM may be degenerate, this yields a pseudoRiemannian manifold (Thomas, 2014). In differential geometry, orthogonalization amounts to transforming the square length infinitesimal element gijd\u0398i\u0398j of a Riemannian geometry into an orthogonal system \u03c9 with match-\ning square length infinitesimal element \u2126iid\u21262i . However, such a global orthogonal metric does not exist (Huzurbazar, 1950) when D > 3 for an arbitrary metric tensor, although interesting Riemannian parameterization structures may be derived in Riemannian 4D geometry (Grant & Vickers, 2009).\nFor NEFs, the FIM can be made block-diagonal easily by using the mixed coordinate system (Amari, 2016) (\u03981:k,Hk+1:D), where H = Ep[t(x)] = \u2207F (\u0398) is the moment parameter, for any k \u2208 {1, ..., D \u2212 1}, where vb:e denotes the subvector (vb, ..., ve)\u1d40 of v. The geometry of NEFs is a dually flat structure (Amari, 2016) induced by the convex mgf, the potential function. It defines a dual affine coordinate systems ei = \u2202i = \u2202\u2202Hi and ej = \u2202\nj = \u2202\u2202\u0398j that are orthogonal: \u3008ei, ej\u3009 = \u03b4ij , where \u03b4ij = 1 iff i = j and \u03b4ij = 0 otherwise. Hence the FIM has two diagonal blocks. Those dual affine coordinate systems are defined up to an affine invertible transformation: \u0398\u0303 = A\u0398 + b, H\u0303 = A\u22121H + c. In particular, for any order-2 NEF (D = 2), we can always obtain two mixed parameterizations (\u03981, H2) or (H1,\u03982).\nThe RFIM contributes another line of thought in parameter diagonalization. We investigate the Fisher information of hidden variables, or internal interfaces in the learning machine. This is novel since the majority of previous works concentrate on the FIM of the observables, or the external interface of the machine. From a causality perspective, we factor out the main cause (parameters within the subsystem) of the response variable with a direct action-reaction relationship, and regard the remaining parameters as a reference that can be easily estimated by the empirical distribution. This simplification may lead to broader applications of Fisher information in machine learning.\nThe particular case of a mixed coordinate system (that is not an affine coordinate system) induces in information geometry (Amari, 2016) a dual pair of orthogonal e- and morthogonal foliations. Our splits in RFIMs consider general non-orthogonal foliations that provide the factorization decompositions of the whole manifold into submanifolds, that are the leaves of the foliation (see section 3.7 of Amari & Nagaoka 2000)."}, {"heading": "7. Conclusion and Discussions", "text": "We investigate local structures of large learning systems using the new concept of Relative Fisher Information Metric. The key advantage of this approach is that the local learning dynamics can be analyzed in an accurate way without approximation. We present a core list of such local structures in neural networks, and give their corresponding RFIMs. This list of recipes can be used to provide guiding principles to design new optimizers for deep learning.\nOur work applies to mirror descent as well since natural gradient is related to mirror descent (Raskutti & Mukherjee, 2015) as follows: In mirror descent to minimize a cost function E(\u0398), given a strictly convex distance function D(\u00b7, \u00b7) in the first argument (playing the role of the proximity function), we express the gradient descent step as:\n\u0398t+1 = arg min \u0398\n{ \u0398>\u2207E(\u0398t) + 1\n\u03b3 D(\u0398,\u0398t)\n} .\nWhen D(\u0398,\u0398\u2032) is chosen as a Bregman divergence BF (\u0398,\u0398\n\u2032) = F (\u0398)\u2212 F (\u0398\u2032)\u2212 (\u0398\u2212\u0398\u2032)>\u2207F (\u0398\u2032) wrt to a convex function F , it has been proved that the mirror descent on the \u0398-parameterization is equivalent (Raskutti & Mukherjee, 2015) to the natural gradient optimization on the induced Riemannian manifold with metric tensor (\u22072F (\u0398)) parameterized by the dual coordinate system H = \u2207F (\u0398).\nIn general, to perform a Riemannian gradient descent for minimizing a real-valued function f(\u0398) on the manifold, one needs to choose a proper metric tensor given in matrix form G(\u0398). Thomas (2014) constructed a toy example showing that the natural gradient may diverge while the ordinary gradient (for G = I) converges. Recently, Thomas et al. (2016) proposed a new kind of descent method based on what they called the Energetic Natural Gradient that generalizes the natural gradient. The energy distance DE(p(\u03981), p(\u03982))2 = E[2dp(\u03981)(X,Y ) \u2212 dp(\u03981)(X,X\n\u2032) \u2212 dp(\u03981)(Y, Y \u2032)] where X,X \u2032 \u223c p(\u03981) and Y, Y \u2032 \u223c p(\u03982), where dp(\u03981)(\u00b7, \u00b7) is a distance metric over the support. Using a Taylor\u2019s expansion on their energy distance, they get the Energy Information Matrix (in a way similar to recovering the FIM from a Taylor\u2019s expansion of any f -divergence like the Kullback-Leibler divergence). Their idea is to incorporate prior knowledge on the structure of the support (observation space) to define energy distance. Twisting the geometry of the support (say, Wasserstein\u2019s optimal transport) with the geometry of the parametric distributions (Fisher-Rao geodesic distances) is indeed important (Chizat et al., 2015). In information geometry, invariance on the support is provided by a Markov morphism that is a probabilistic mapping of the support to itself (C\u030cencov, 1982). There is no neighbourhood structure on the support in IG. Markov morphism includes deterministic transformation of a random variable by a statistic. It is well-known that IT (\u0398) IX(\u0398) with equality iff. T = T (X) is a sufficient statistic of X . Thus to get the same invariance for the energy distance (Thomas et al., 2016), one shall further require dp(\u0398)(T (X), T (Y )) = dp(\u0398)(X,Y ).\nWe believe that RFIMs will provide a sound methodology to build further efficient systems for deep learning. The full source codes to reproduce the experimental results are available at https://www.lix.polytechnique. fr/\u02dcnielsen/RFIM."}, {"heading": "Acknowledgements", "text": "The authors would like to thank the anonymous reviewers and Yann Ollivier for the helpful comments. This work was mainly conducted when the first author was a postdoctoral researcher at E\u0301cole Polytechnique."}], "year": 2017, "references": [{"title": "TensorFlow: Large-scale machine learning", "authors": ["Abadi", "Mart\u0131\u0301n"], "venue": "on heterogeneous systems,", "year": 2015}, {"title": "Information geometry of the EM and em algorithms for neural networks", "authors": ["Amari", "Shun\u2019ichi"], "venue": "Neural Networks,", "year": 1995}, {"title": "Neural learning in structured parameter spaces \u2013 natural Riemannian gradient", "authors": ["Amari", "Shun\u2019ichi"], "venue": "In NIPS", "year": 1997}, {"title": "Natural gradient works efficiently in learning", "authors": ["Amari", "Shun\u2019ichi"], "venue": "Neural Comput.,", "year": 1998}, {"title": "Information Geometry and its Applications, volume 194 of Applied Mathematical Sciences", "authors": ["Amari", "Shun\u2019ichi"], "year": 2016}, {"title": "Methods of Information Geometry, volume 191 of Translations of Mathematical Monographs", "authors": ["Amari", "Shun\u2019ichi", "Nagaoka", "Hiroshi"], "venue": "AMS and OUP,", "year": 2000}, {"title": "Estimating or propagating gradients through stochastic neurons", "authors": ["Bengio", "Yoshua"], "venue": "CoRR, abs/1305.2982,", "year": 2013}, {"title": "Stochastic gradient descent on Riemannian manifolds", "authors": ["Bonnabel", "Silv\u00e8re"], "venue": "IEEE Trans. Automat. Contr.,", "year": 2013}, {"title": "Statistical decision rules and optimal inference, volume 53 of Translations of Mathematical Monographs", "authors": ["\u010cencov", "Nikola\u0131\u030c Nikolaevich"], "venue": "American Mathematical Society,", "year": 1982}, {"title": "An Interpolating Distance between Optimal Transport and Fisher-Rao", "authors": ["Chizat", "Lenaic", "Schmitzer", "Bernhard", "Peyr\u00e9", "Gabriel", "Vialard", "Fran\u00e7ois-Xavier"], "venue": "arXiv e-prints,", "year": 2015}, {"title": "Fast and accurate deep network learning by exponential linear units (ELUs)", "authors": ["Clevert", "Djork-Arn\u00e9", "Unterthiner", "Thomas", "Hochreiter", "Sepp"], "venue": "CoRR, abs/1511.07289,", "year": 2015}, {"title": "Estimation and moment recursion relations for multimodal distributions of the exponential family", "authors": ["Cobb", "Loren", "Koppstein", "Peter", "Chen", "Neng Hsin"], "year": 1983}, {"title": "Parameter orthogonality and approximate conditional inference", "authors": ["D.R. Cox", "N. Reid"], "venue": "Journal of the Royal Statistical Society. Series B (Methodological),", "year": 1987}, {"title": "Mathematical Methods of Statistics, volume 9 of Princeton Mathematical Series", "authors": ["Cram\u00e9r", "Harald"], "year": 1946}, {"title": "Natural neural networks", "authors": ["Desjardins", "Guillaume", "Simonyan", "Karen", "Pascanu", "Razvan", "Kavukcuoglu", "Koray"], "venue": "In NIPS", "year": 2015}, {"title": "Chentsov\u2019s theorem for exponential families", "authors": ["Dowty", "James G"], "venue": "arXiv preprints,", "year": 2017}, {"title": "Assessing the accuracy of the maximum likelihood estimator: Observed versus expected Fisher information", "authors": ["Efron", "Bradley", "Hinkley", "David V"], "year": 1978}, {"title": "Sur l\u2019extension de certaines evaluations statistiques au cas de petits echantillons", "authors": ["Fr\u00e9chet", "Maurice"], "venue": "Revue de l\u2019Institut International de Statistique / Review of the International Statistical Institute,", "year": 1943}, {"title": "Block diagonalization of four-dimensional metrics", "authors": ["Grant", "James DE", "Vickers", "JA"], "venue": "Classical and Quantum Gravity,", "year": 2009}, {"title": "Delving deep into rectifiers: Surpassing humanlevel performance on ImageNet classification", "authors": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"], "venue": "In ICCV,", "year": 2015}, {"title": "A fast learning algorithm for deep belief nets", "authors": ["Hinton", "Geoffrey E", "Osindero", "Simon", "Teh", "YeeWhye"], "venue": "Neural Comput.,", "year": 2006}, {"title": "Spaces of statistical parameters", "authors": ["Hotelling", "Harold"], "venue": "American Mathematical Society Meeting,", "year": 1929}, {"title": "Probability distributions and orthogonal parameters", "authors": ["Huzurbazar", "Vasant Shankar"], "venue": "Mathematical Proceedings of the Cambridge Philosophical Society,", "year": 1950}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "authors": ["Ioffe", "Sergey", "Szegedy", "Christian"], "venue": "In ICML; JMLR: W&CP", "year": 2015}, {"title": "Theory of Probability. Oxford Classic Texts in the Physical Sciences", "authors": ["Jeffreys", "Harold"], "venue": "OUP, 3rd edition,", "year": 1998}, {"title": "Riemannian Geometry and Geometric Analysis", "authors": ["Jost", "J\u00fcrgen"], "venue": "Springer, 6th edition,", "year": 2011}, {"title": "Adam: A method for stochastic optimization", "authors": ["Kingma", "Diederik P", "Ba", "Jimmy"], "venue": "CoRR, abs/1412.6980,", "year": 2014}, {"title": "Auto-encoding variational Bayes", "authors": ["Kingma", "Diederik P", "Welling", "Max"], "venue": "In ICLR,", "year": 2014}, {"title": "Iterative weighted least squares algorithms for neural networks classifiers", "authors": ["Kurita", "Takio"], "venue": "New Generation Computing,", "year": 1994}, {"title": "Topmoumoute online natural gradient algorithm", "authors": ["Le Roux", "Nicolas", "Manzagol", "Pierre-Antoine", "Bengio", "Yoshua"], "venue": "In NIPS", "year": 2008}, {"title": "Riemannian geometry and statistical machine learning", "authors": ["Lebanon", "Guy"], "venue": "PhD thesis,", "year": 2005}, {"title": "Deep learning with dynamic computation graphs", "authors": ["Looks", "Moshe", "Herreshoff", "Marcello", "Hutchins", "DeLesley", "Norvig", "Peter"], "venue": "In ICLR,", "year": 2017}, {"title": "Deep learning via Hessian-free optimization", "authors": ["Martens", "James"], "venue": "In ICML, pp", "year": 2010}, {"title": "New perspectives on the natural gradient method", "authors": ["Martens", "James"], "venue": "CoRR, abs/1412.1193,", "year": 2014}, {"title": "Optimizing neural networks with Kronecker-factored approximate curvature", "authors": ["Martens", "James", "Grosse", "Roger"], "venue": "In ICML; JMLR: W&CP", "year": 2015}, {"title": "Computational implications of reducing data to sufficient statistics", "authors": ["Montanari", "Andrea"], "venue": "Electron. J. Statist.,", "year": 2015}, {"title": "Deep Boltzmann machines and the centering trick", "authors": ["Montavon", "Gr\u00e9goire", "M\u00fcller", "Klaus-Robert"], "year": 2012}, {"title": "Rectified linear units improve restricted Boltzmann machines", "authors": ["Nair", "Vinod", "Hinton", "Geoffrey E"], "venue": "In ICML, pp", "year": 2010}, {"title": "Cram\u00e9r-Rao lower bound and information", "authors": ["Nielsen", "Frank"], "venue": "geometry. CoRR,", "year": 2013}, {"title": "Riemannian metrics for neural networks", "authors": ["Ollivier", "Yann"], "venue": "CoRR, abs/1303.0818,", "year": 2013}, {"title": "Revisiting natural gradient for deep networks", "authors": ["Pascanu", "Razvan", "Bengio", "Yoshua"], "venue": "In ICLR,", "year": 2014}, {"title": "Deep learning made easier by linear transformations in perceptrons", "authors": ["Raiko", "Tapani", "Valpola", "Harri", "LeCun", "Yann"], "venue": "In AISTATS; JMLR W&CP", "year": 2012}, {"title": "Information and accuracy attainable in the estimation of statistical parameters", "authors": ["Rao", "Calyampudi Radhakrishna"], "venue": "Bull. Cal. Math. Soc.,", "year": 1945}, {"title": "The information geometry of mirror descent", "authors": ["Raskutti", "Garvesh", "Mukherjee", "Sayan"], "venue": "In Geometric Science of Information (GSI),", "year": 2015}, {"title": "An information geometry of statistical manifold learning", "authors": ["Sun", "Ke", "Marchand-Maillet", "St\u00e9phane"], "venue": "In ICML; JMLR W&CP", "year": 2014}, {"title": "Going deeper with convolutions", "authors": ["Szegedy", "Christian"], "venue": "In CVPR,", "year": 2015}, {"title": "GeNGA: A generalization of natural gradient ascent with positive and negative convergence results", "authors": ["Thomas", "Philip"], "venue": "In ICML; JMLR W&CP", "year": 2014}, {"title": "Energetic natural gradient descent", "authors": ["Thomas", "Philip", "B.C. da Silva", "C. Dann", "E. Brunskill"], "venue": "In ICML,", "year": 2016}, {"title": "Dropout training as adaptive regularization", "authors": ["Wager", "Stefan", "Wang", "Sida", "Liang", "Percy S"], "venue": "In NIPS", "year": 2013}, {"title": "Algebraic Geometry and Statistical Learning Theory, volume", "authors": ["Watanabe", "Sumio"], "venue": "Cambridge Monographs on Applied and Computational Mathematics. CUP,", "year": 2009}, {"title": "Multiplying matrices faster than Coppersmith-Winograd", "authors": ["Williams", "Virginia Vassilevska"], "venue": "In Annual ACM Symposium on Theory of Computing,", "year": 2012}], "id": "SP:a4f7bfdfc3207e061f5d67d3db1f6136e3787e9d", "authors": [{"name": "Ke Sun", "affiliations": []}, {"name": "Frank Nielsen", "affiliations": []}], "abstractText": "Fisher information and natural gradient provided deep insights and powerful tools to artificial neural networks. However related analysis becomes more and more difficult as the learner\u2019s structure turns large and complex. This paper makes a preliminary step towards a new direction. We extract a local component from a large neural system, and define its relative Fisher information metric that describes accurately this small component, and is invariant to the other parts of the system. This concept is important because the geometry structure is much simplified and it can be easily applied to guide the learning of neural networks. We provide an analysis on a list of commonly used components, and demonstrate how to use this concept to further improve optimization. 1. Fisher Information Metric The Fisher Information Metric (FIM) I(\u0398) = (Iij) of a statistical parametric model p(x |\u0398) of order D is defined by a D\u00d7D positive semidefinite (psd) matrix (I(\u0398) 0) with coefficients Iij = Ep [ \u2202l \u2202\u0398i \u2202l \u2202\u0398j ] , where l(\u0398) denotes the log-density function log p(x |\u0398). Under light regularity conditions, FIM can be rewritten equivalently as Iij = \u2212Ep [ \u2202l \u2202\u0398i\u2202\u0398j ]", "title": "Relative Fisher Information and Natural Gradient for Learning Large Modular Models"}