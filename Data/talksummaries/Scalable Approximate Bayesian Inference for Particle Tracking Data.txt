0	20	In many biological and physical experiments it is necessary to track the movement of many isolated particles in a video datastream.
1	14	This is an essential task in biomedical research, for example, to reveal the biophysical properties of both the imaged particles (e.g., single molecules) and the biological substrate (e.g., cell membrane) that the particles are traversing.
2	9	Effective particle tracking algorithms have wide applications in both fundamental and applied biology, and more generally in chemistry and physical applications.
4	21	However, in many applications particles have indistinguishable shapes under light microscopic resolution.
5	26	This leads to a fundamental non-identifiability: if two particles pass close by each other (“meet”) then it is impossible to deterministically link the pre-meeting paths with the correct post-meeting paths (see Figure 1 below for an illustration).
6	1	This motivates a Bayesian approach for assigning posterior probabilities over all the possible sets of particle paths consistent with the observed data.
7	10	Formally, at each timestep we observe a noisy, blurry image recording the particles’ current positions.
9	1	The classic HMM inference approach is the forward-backward algorithm (Rabiner, 1990), but the complexity of forward-backward scales superlinearly with the number of particles here.
10	15	In this work, we propose an amortized inference approach utilizing a specialized recurrent neural network architecture to approximate the posterior particle transition densities inferred by forward-backward.
11	8	After network training, posterior inference can be performed very quickly: given a new video dataset, the network outputs the conditional particle initialization and transition densities, and then we can simply sample forward from the resulting Markov chain to draw samples from the posterior particle paths.
13	20	We show that the method robustly performs approximate Bayesian inference on the observed data, and provides more accurate results than competing methods that output just a single “best” path.
14	20	Our approach is much more scalable than previously proposed Bayesian approaches, scaling linearly in the number of frames and in the number of observed pixels.
15	1	To set the stage we describe the simplest concrete model for particle tracking data; we will generalize this model below.
17	6	The particles move according to independent Gauss-Markov processes, with no interactions between particles.
18	44	On each frame t we observe a blurred noisy sum of the particles that are visible at time t. The observation likelihood depends on the details of the experimental setup; the most common model is the Gaussian blur + Poisson noise model: Y (t, x) ∼ Poisson[λ(t, x) + λ0] λ(t, x) = ∑ j G[x− sj(t)], where Y (t, x) denotes the image data observed at pixel x at time t, λ0 is a background “dark noise” Poisson intensity, G[.]
19	99	is a Gaussian point spread function (psf), sj(t) represents the location of particle j at time t, and the sum is over all particles that are alive at time t. The model described above is a factorial HMM (Ghahramani & Jordan, 1996).
20	24	However, this simple model can be generalized significantly.
21	11	There may be multiple distinguishable classes of particles that have different shapes or colors.
22	20	In many datasets particles can interact: they might merge, collide, split, etc.
24	9	There may be strong dependencies between the motion of different particles, due e.g. to substrate motion.
26	2	Thus it is critical to develop flexible inference approaches that do not depend on strong factorial HMM assumptions.
27	1	The literature on particle tracking methods is vast, and dates back to early physics studies of Brownian motion in fluids; see e.g. (Manzo & Garcia-Parajo, 2015) for a review, and (Chenouard et al., 2014) for a quantitative comparison of many algorithms.
28	9	We will not attempt to review all of these methods here, but note that many algorithms split the tracking problem into a “detect” followed by a “link” step.
30	3	Various nonlinear filtering, thresholding, deconvolution, and neural network approaches have been employed for this task (Chenouard et al., 2014).
33	3	This linkage step is solved by some matching algorithm; see e.g. (Jaqaman et al., 2008) for an influential example of this approach, and (Chenouard et al., 2014; Turner et al., 2014; Wilson et al., 2016) for discussion of some other linking methods.
36	3	Moreover, it is clear that the linkage and detection should not be separated: if we know the tracks of particles at times (1 : t− 1) and (t+ 1 : T ), then we have very strong prior information about the locations of particles at time t, and ignoring this useful prior information will lead to suboptimal results.
38	9	Similar points have been made in the Bayesian signal processing literature; for example, sequential Monte Carlo (particle filtering) methods have been applied to perform probabilistic inference in this setting (Smal et al., 2008).
