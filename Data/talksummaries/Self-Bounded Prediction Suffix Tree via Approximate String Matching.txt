10	25	For example, a longer suffix would be more important than a suffix of length one to predict the next symbol of a music sheet since the temporal pattern in music is often continued over multiple notes.
11	24	In this paper, we provide a novel construction of the prediction suffix tree and its online learning algorithm via approximate string matching.
12	12	In that sense, the proposed algorithm can be robust to small variations in a sequence.
14	5	Finally, we derive a selfbounded version of the proposed model that decides the maximum length of suffix based on a trade-off between a confidence of prediction and complexity of algorithm automatically.
16	35	In Section 3, we derive a PST with approximate string matching and its online learning algorithm.
17	22	We also proof the mistake bound of the proposed algorithm w.r.t.
18	19	In Section 4, we enhance our model by letting the model adaptively choose the depth of suffix tree.
19	8	In Section 5 and 6, we verify our approach on synthetic datasets and demonstrate the improved predictive performance of our model on three real-world datasets.
21	3	Assume that an input stream is a sequence of vectors x1,x2, ...(xt ∈ Rn), and an output stream is a sequence of binary symbols y1, y2, ...(yt ∈ {−1,+1}).
22	7	We will relax the binary assumption in Subsection 5.2.
23	28	We denote a sub-sequence of output yi, yi+1, ..., yj by y j i .
24	106	Our goal is to predict the next symbol yt given the binary sequence yt−11 and the next input vector xt Dekel et al. propose a provably-correct PST algorithm to predict a sequence of symbols.
25	49	With suffix-closed tree T 1 endowed with a score at each node, the prediction function for symbol yt given yt−11 and xt is h(xt,y t−1 1 ) = w · xt + t−1∑ i=1 2−i/2g(yt−1t−i ), (1) where w ∈ Rn is a weight vector, and g(s) is a score of node s in a suffix tree T .
26	68	The score of a suffix is zero if the tree does not have the suffix.
27	22	We then use the sign of this prediction function as a predicted symbol yt.
28	10	The prediction function looks up scores of all possible suffixes of the input stream up to time t − 1 from suffix tree T and takes a weighted sum of the scores of suffixes with exponential decaying weight 2−i/2 w.r.t.
30	4	The magnitude of h represents the confidence in this prediction.
31	6	Figure 2 shows an example of prediction suffix tree with six suffixes therein.
32	33	The value of node shows the score of a corresponding suffix, e.g., g(−+ +) = 4.
33	87	Assume that we want to predict the next symbol of sequence y41 = −−++, then, with the prediction function given Eq.
34	6	1, the predicted symbol of y5 is sign(2−1/2×(−1)+2−2/2×(4)+2−3/2× (−2)).
35	40	There are multiple ways to construct the suffix tree and learn the model parameters.
36	2	In this paper, we focus on the margin-based online learning algorithm and its analysis as per Dekel et al.; Karampatziakis & Kozen.
37	4	In online learning, the model parameters are updated after each round.
39	3	The predicted symbol ŷt = sign(ht(xt,yt−11 )) is then compared to the revealed correct symbol yt.
40	13	Finally, the prediction function is updated based on the prediction and true symbol.
41	1	More formally, the model computes the hinge loss after each round `t = max{0, 1− ytht(xt,yt−11 )}.
