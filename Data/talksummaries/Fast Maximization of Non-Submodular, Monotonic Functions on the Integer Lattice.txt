0	33	As a natural extension of finite sets S (equivalently, {0, 1}S), optimization of discrete functions on the integer lattice NS has received attention recently (Alon et al., 2012; Demaine et al., 2014; Soma & Yoshida, 2015).
1	17	As an example, consider the placement of sensors in a water network (Krause et al., 2008a); in the set version, each sensor takes a value in {0, 1}, which corresponds to whether the sensor was placed.
2	2	In the lattice version (Soma & Yoshida, 2015), each sensor has a power level in {0, .
4	14	As a second example, consider the influence maximization problem (Kempe et al., 2003); instead of the binary seeding of a user, the lattice version enables partial incentives or discounts to be used (Demaine et al., 2014).
5	2	Although many results from the optimization of submodular set functions have been generalized to the integer lattice (Soma & Yoshida, 2015; 2016; Ene & Nguyen, 2016), many objective functions arising from applications are not submodular (Bian et al., 2017b; Lin et al., 2017; Das & Kempe, 2011; Horel & Singer, 2016).
6	17	In this work, we consider maximization subject to a cardinality constraint (MCC), where the function f to be maximized may be nonsubmodular.
7	7	Let k ∈ N (the budget), b ∈ (N∪{∞})S (the box), and let f : {x ∈ NS : x ≤ b} → R+ (the objective) be a non-negative and monotonic1 function with f(0) = 0.
8	7	Then determine max ‖w‖1≤k f(w), (MCC) where w = (ws)s∈S ∈ NS , ‖w‖1 = ∑ s∈S |ws|.
9	11	Since the integer lattice may be represented as a multiset of size k|S|, one may use results for Problem MCC with non-submodular set functions.
10	26	In particular, the tight ratio 1α (1− e−αγs) of the standard greedy algorithm by Bian et al. (2017b), where α, γs are discussed below, applies with the lattice adaptation of the standard greedy algorithm (StandardGreedy) given in Alg.
13	8	Unfortunately, these approaches rely upon the submodularity of f , and there has been no analogous effort for non-submodular functions.
14	90	To quantify the non-submodularity of a lattice function f , we generalize the following quantities defined for set functions to the lattice: (1) the diminishing-return (DR) ratio γd of f (Lehmann et al., 2006), (2) the weak DR ratio γs of f (Das & Kempe, 2011), and (3) the generalized curvature α of f (Bian et al., 2017b).
16	39	1), we adapt the threshold greedy framework of Badanidiyuru & Vondrák (2014) to non-submodular functions; this yields an algorithm (ThresholdGreedy, Alg.
17	4	2) with approximation ratio (1 − e−γdγs − η), for 1for all v ≤ w (coordinate-wise), f(v) ≤ f(w) 2The input is considered to be the vector b of length n = |S| and the number k represented in log k bits (w.l.o.g.
18	24	each component of b is at most k); the function is regarded as an oracle and hence does not contribute to input size.
20	30	The query complexity of the StandardGreedy algorithm is improved from Ω(nk) to O ( n log k logκ ( ε2/k )) , where κ, ε ∈ (0, 1) are parameters of ThresholdGreedy.
21	22	• We introduce the novel approximation algorithm FastGreedy, which combines elements of StandardGreedy and ThresholdGreedy to improve the performance ratio to (1− e−β∗γs − η), where β∗ is at least γd and in many cases3 is determined by the algorithm.
22	16	Furthermore, FastGreedy exploits the non-submodularity of the function to decrease its runtime in practice without sacrificing its performance guarantee, while maintaining the same worst-case query complexity as ThresholdGreedy up to a constant factor.
23	18	• To demonstrate our algorithms, we introduce a general budget allocation problem for viral marketing, which unifies submodular influence maximization (IM) under the independent cascade model (Kempe et al., 2003) with the non-submodular boosting problem (Lin et al., 2017) and in addition allows partial incentives.
24	14	We prove a lower bound on the DR and weak DR ratios for this unified framework, and we experimentally validate our proposed algorithms in this setting.
54	4	It is often useful to think of a vector v ∈ NS as a multi-set containing vs copies of s ∈ S, where vs is the value of v’s coordinate corresponding to s. We use the notation {v} to represent the multiset corresponding to the vector v. Finally, we define v ∨w and v ∧w for v,w ∈ NS to be the vector with the coordinate-wise maximum and minimum respectively.
55	2	Rather than an algorithm taking an explicit description of the function f as input, we consider the function f as an oracle and measure the complexity of an algorithm in terms of the number of oracle calls or queries.
62	6	Next, we generalize the weak DR ratio of Das & Kempe (2011) to the integer lattice.
65	1	The function f is DR submodular iff γd(f) = γs(f) = 1.
68	22	It suffices to consider restricted versions, where the maximization is taken over only those vectors which appear in the ratio proofs.
69	8	We define these greedy versions in Appendix B and include more discussion in Remark 1 of Section 4.1.
72	7	Appendix D contains the proofs of all lemmas, claims, and omitted details from this section.
73	33	ThresholdGreedy operates by considering decreasing thresholds for the marginal gain in its outer for loop; for each threshold τ , the algorithm adds on line 2 elements whose marginal gain exceeds τ as described be- low.
75	10	Intuitively, the goal of the threshold approach (Badanidiyuru & Vondrák, 2014) for submodular set functions is as follows.
76	84	At each threshold (i.e., iteration of the outer for loop), add all elements whose marginal gain exceeds τ to the solution g. On the lattice, adding all copies of s ∈ S whose average gain exceeds τ on line 2 would require the addition of the maximum multiple ls such that the average marginal gain exceeds τ : δls(g) ≥ lτ, (P1) as in the threshold algorithm of Soma & Yoshida (2016) for DR-submodular functions, in which the maximum l is identified by binary search.
