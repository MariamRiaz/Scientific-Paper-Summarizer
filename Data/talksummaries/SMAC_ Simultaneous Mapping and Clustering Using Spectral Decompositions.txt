0	42	Establishing maps (e.g. pointwise correspondences) across object collections is a fundamental problem spanning many scientific domains.
1	59	High-quality maps facilitating information propagation and transformation are key to applications ranging from 3D reconstruction with partial scans (Huber & Hebert, 2001), data-driven geometry completion and reconstruction (Pauly et al., 2005), texture transfer (Schreiner et al., 2004; Kraevoy & Sheffer, 2004), to comparative biology (Boyer et al., 2011; Gao et al., 2017), joint dataanalysis (Huang et al., 2011; Kim et al., 2012; Wang et al., 2013; 2014; Huang et al., 2014), and data exploration and organization (Kim et al., 2012; Huang et al., 2014).
2	13	High quality object maps are generally difficult to compute.
3	64	Prior work on map computation focused on optimizing maps between pairs of objects; see (van Kaick et al., 2010) for a standard survey and (Kim et al., 2011; Mandad et al., 2017) for some recent advances.
4	15	Despite the significant progress, state-of-the-art techniques tends to hit a barrier on the quality of maps that are computed in a pairwise manner.
5	3	Building upon the availability of big-data, a recent line of research (Kim et al., 2012; Nguyen et al., 2011; Ovsjanikov et al., 2012; Huang et al., 2012; Huang & Guibas, 2013; Huang et al., 2014; Chen et al., 2014; Zhou et al., 2015a;b; Shen et al., 2016; Leonardos et al., 2017; Huang et al., 2017) considered computing many pairwise maps jointly among a collection of objects.
6	12	The promise of these approaches hinges upon the observation that one way to obtain a high quality pairwise map between dissimilar objects is to choose a path connecting these objects but consisting of consecutive similar shapes: maps between similar objects are typically of higher quality, and so is the resulted composed map.
7	40	From a regularization perspective, joint map computation leverages the generic consistency of a network of maps among multiple objects, in which composition of maps along cycles are expected to be close to the identity map.
10	11	In this setting, even though existing methods are able to suppress the noise in intra-cluster maps within a single cluster, jointly computed maps for the entire object collection leads are often significantly worse.
11	26	One explanation is that high fraction of incorrect inter-cluster maps tends to “contaminate” the regularization effect of intra-cluster maps.
12	11	A natural resolution is to employ a two-stage cascadic strategy that identifies the underlying clusters before computing the intra- and inter-cluster maps.
13	5	Unfortunately, such clustering requires accurate quantification of the object similarities, which is a difficult problem in its own right.
14	9	Meanwhile, the error produced in the clustering stage is unlikely remedied by the consistency-based regularization.
15	25	In this paper, we propose to solve the mapping and clustering problems simultaneously.
16	48	Instead of explicitly relying on certain pairwise similarity and/or map distortion scores, we identify the underlying clusters based on the consistency of intra- and inter-cluster maps, inspired by the observation that maps tend to be more consistent along cycles within a cluster than across clusters.
17	1	This discrepancy has been observed in many different contexts, and appears to be a consequence of the energy landscape of almost all optimization-based pairwise matching algorithms.
18	6	The matching energy functional between objects in the same underlying cluster tends to have simple energy landscapes with easily identifiable global optimums, resulting in fairly cycle-consistent intra-cluster maps; in contrast, the highly non-convex energy landscape for dissimilar objects from different clusters leads to more “random” maps due to random initialization and/or multiple strong local minimums, for which cycle-consistency is much less often observed.
20	22	We validate the map consistency argument through a motivating example (see Figure 1) on a real dataset from SHREC07 Watertight benchmark (Giorgi et al., 2007).
21	1	This dataset consists of 38 shapes: the first 18 are Human models and the remaining 20 are Fourleg models (e.g., Horses and Dogs).
23	29	We compute pairwise blended intrinsic maps (Kim et al., 2011) for all objects in this collection and use these maps to compute two similarity scores for each object pair: a map distortion score that measures the squared sum of geodesic distortions across all pointpairs (c.f.
25	2	Figure 1 illustrates the distributions of the map distortion scores (Left) and the cycle-consistency scores (Right) on the 38 models.
27	35	The superior cluster separation is verified by comparing the results of spectral clustering (Ng et al., 2002; Lei & Rinaldo, 2015) using the two similarity scores: spectral clustering based on the cycle-consistency scores recovers the two underlying clusters perfectly, whereas the same procedure using the map distortion scores incorrectly puts two Fourleg models in the cluster of Human models.
29	3	Motivated by the example above, we propose an algorithm for simultaneous mapping and clustering (SMAC).
31	7	Our SMAC algorithm builds upon the equivalence between map consistency and the low-rank property of a data matrix with consistent maps in its blocks (c.f.
33	4	Based on this observation, the first step of our approach simultaneously recovers the underlying clusters and intra-cluster maps by spectral decomposition.
34	27	We show that properly “rounding off” the leading eigenvectors recovers the ground-truth clusters and intracluster maps in a single pass.
35	5	We then construct inter-cluster maps from the recovered intra-cluster maps.
36	14	Our theoretical analysis establishes sharp exact recovery conditions for both steps under a fairly general noise model, using some novel tight L∞-stability bounds for eigen-decompositions.
49	27	We use lower bold letters a, b, c,u,v,w, · · · to denote vectors, and upper letters A,B,C, · · · for matrices.
50	11	For a block matrix X ∈ Rn1m1×n2m2 , we use Xij ∈ Rm1×m2 to denote its ij-th block; the ij-th element of a matrix A is denoted as aij .
