{"sections": [{"heading": "1. Introduction", "text": "Inspired by human beings\u2019 capabilities to transfer knowledge across tasks, transfer learning aims to leverage knowledge from a source domain to improve the learning performance or minimize the number of labeled examples required in a target domain. It is of particular significance when tackling tasks with limited labeled examples. Transfer learning has proved its wide applicability in, for example,\n1Hong Kong University of Science and Technology, Hong Kong 2Tencent AI Lab, Shenzhen, China. Correspondence to: Ying Wei <judyweiying@gmail.com>, Qiang Yang <qyang@cse.ust.hk>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\nimage classification (Long et al., 2015), sentiment classification (Blitzer et al., 2006), dialog systems (Mo et al., 2016), and urban computing (Wei et al., 2016).\nThree key research issues in transfer learning, pointed by Pan & Yang, are when to transfer, how to transfer, and what to transfer. Once transfer learning from a source domain is considered to benefit a target domain (when to transfer), an algorithm (how to transfer) discovers the transferable knowledge across domains (what to transfer). Different algorithms are likely to discover different transferable knowledge, and thereby lead to uneven transfer learning effectiveness which is evaluated by the performance improvement over non-transfer baselines in a target domain. To achieve the optimal performance improvement for a target domain given a source domain, researchers may try tens to hundreds of transfer learning algorithms covering instance (Dai et al., 2007), parameter (Tommasi et al., 2014), and feature (Pan et al., 2011) based algorithms. Such bruteforce exploration is computationally expensive and practically impossible. As a tradeoff, a sub-optimal improvement is usually obtained from a heuristically selected algorithm, which unfortunately requires considerable expertise in an ad-hoc and unsystematic manner.\nExploring different algorithms is not the only way to optimize what to transfer. Previous transfer learning experiences do also help, which has been widely accepted in educational psychology (Luria, 1976; Belmont et al., 1982). Human beings sharpen transfer learning skills of deciding what to transfer by conducting meta-cognitive reflection on diverse transfer learning experiences. For example, children who are good at playing chess may transfer mathematical skills, visuospatial skills, and decision making skills learned from chess to solve arithmetic problems, to solve pattern matching puzzles, and to play basketball, respectively. At a later age, it will be easier for them to decide to transfer mathematical and decision making skills learned from chess, rather than visuospatial skills, to market investment. Unfortunately, all existing transfer learning algorithms transfer from scratch and ignore previous transfer learning experiences.\nMotivated by this, we propose a novel transfer learning framework called Learning to Transfer (L2T). The key idea of the L2T is to enhance the transfer learning effectiveness from a source to a target domain by leveraging previous\ntransfer learning experiences to optimize what and how to transfer between them. To achieve the goal, we establish the L2T in two stages. During the first stage, we encode each transfer learning experience into three components: a pair of source and target domains, the transferred knowledge between them parameterized as latent feature factors, and performance improvement. We learn from all experiences a reflection function which maps a pair of domains and the transferred knowledge between them to the performance improvement. The reflection function, therefore, is believed to encrypt transfer learning skills of deciding what and how to transfer. In the second stage, what to transfer between a newly arrived pair of domains is optimized so that the value of the learned reflection function, matching to the performance improvement, is maximized.\nThe contribution of this paper lies in that we propose a novel transfer learning framework which opens a new door to improve transfer learning effectiveness by taking advantage of previous transfer learning experiences. The L2T can discover more transferable knowledge in a systematic and automatic fashion without requiring considerable expertise. We have also provided theoretic analyses to its algorithmic stability and generalization bound, and conducted comprehensive empirical studies showing the L2T\u2019s superiority over state-of-the-art transfer learning algorithms."}, {"heading": "2. Related Work", "text": "Transfer Learning Pan & Yang identified three key research issues in transfer learning as what, how, and when to transfer. Parameters (Yang et al., 2007a; Tommasi et al., 2014), instances (Dai et al., 2007), or latent feature factors (Pan et al., 2011) can be transferred between domains. A few works (Yang et al., 2007a; Tommasi et al., 2014) transfer parameters from source domains to regularize parameters of SVM-based models in a target domain. In (Dai et al., 2007), a basic learner in a target domain is boosted by borrowing the most useful source instances. Various techniques capable of learning transferable latent feature factors between domains have been investigated extensively. These techniques include manually selected pivot features (Blitzer et al., 2006), dimension reduction (Pan et al., 2011; Baktashmotlagh et al., 2013; 2014), collective matrix factorization (Long et al., 2014), dictionary learning and sparse coding (Raina et al., 2007; Zhang et al., 2016), manifold learning (Gopalan et al., 2011; Gong et al., 2012), and deep learning (Yosinski et al., 2014; Long et al., 2015; Tzeng et al., 2015). Unlike L2T, all existing transfer learning studies transfer from scratch, i.e., only considering the pair of domains of interest but ignoring previous transfer learning experiences. Better yet, L2T can even collect all algorithms\u2019 wisdom together, considering that any algorithm mentioned above can be applied in a transfer learning experience.\nMulti-task Learning Multi-task learning (Caruana, 1997; Argyriou et al., 2007) trains multiple related tasks simultaneously and learns shared knowledge among tasks, so that all tasks reinforce each other in generalization abilities. However, multi-task learning assumes that training and testing examples follow the same distribution, as Figure 1 shows, which is different from transfer learning we focus on.\nLifelong Learning Assuming a new learning task to lie in the same environment as training tasks, learning to learn (Thrun & Pratt, 1998) or meta-learning (Maurer, 2005; Finn et al., 2017; Al-Shedivat et al., 2018) transfers the knowledge shared among training tasks to the new task. (Ruvolo & Eaton, 2013; Pentina & Lampert, 2015) consider lifelong learning as online meta-learning. Though L2T and lifelong (meta) learning both aim to improve a learning system by leveraging histories, L2T differs from them in that each historical experience we consider is a transfer learning task rather than a traditional learning task as Figure 1 illustrates. Thus we learn transfer learning skills instead of task-sharing knowledge."}, {"heading": "3. Learning to Transfer", "text": "We begin by first briefing the proposed L2T framework. Then we detail the two stages in L2T, i.e., learning transfer learning skills from previous transfer learning experiences and applying those skills to infer what and how to transfer for a future pair of source and target domains."}, {"heading": "3.1. The L2T Framework", "text": "A L2T agent previously conducted transfer learning several times, and kept a record of Ne transfer learning experiences. We define each transfer learning experience as Ee = (\u3008Se, Te\u3009, ae, le) in which Se = {Xse,yse} and Te = {Xte,yte} denote a source domain and a target domain, respectively. X\u2217e \u2208 Rn \u2217 e\u00d7m represents the feature matrix if either domain has n\u2217e examples in a m-dimensional feature space X \u2217e , where the superscript \u2217 can be either s or t to denote a source or a target domain. y\u2217e \u2208 Y\u2217e denotes the vector of labels with the length being n\u2217le. The number of target labeled examples is much smaller than that of source labeled examples, i.e., ntle nsle. We focus on the\nlearned reflection function f ( 1 ), we optimize the transferred knowledge between them, i.e., W\u2217Ne+1, by maximizing the value of f ( 2 ).\nsetting X se = X te and Yse = Yte for each pair of domains. ae \u2208 A = {a1, \u00b7 \u00b7 \u00b7 , aNa} denotes a transfer learning algorithm having been applied between Se and Te. Suppose that the transferred knowledge by the algorithm ae can be parameterized as We. Finally, each transfer learning experience is labeled by the performance improvement ratio le = pste /p t e, where pte is the learning performance (e.g., classification accuracy) on a test dataset in Te without transfer and pste is that on the same test dataset after transferring We from Se. With Ne transfer learning experiences {E1, \u00b7 \u00b7 \u00b7 , ENe} as the input, the L2T agent learns a function f such that f(Se, Te,We) approximates le as shown in the training stage of Figure 2. We call f a reflection function which encrypts meta-cognitive transfer learning skills - what and how to transfer can maximize the improvement ratio given a pair of domains. Whenever a new pair of domains \u3008SNe+1, TNe+1\u3009 arrives, the L2T agent can optimize the knowledge to be transferred, i.e., W\u2217Ne+1, by maximizing the value of f (see step 2 of the testing stage in Figure 2)."}, {"heading": "3.2. Parameterizing What to Transfer", "text": "Transfer learning algorithms applied can vary from experience to experience. Uniformly parameterizing \u201cwhat to transfer\u201d for any algorithm out of the base algorithm set A is a prerequisite for learning the reflection function. In this work, we consider A to contain algorithms transferring single-level latent feature factors, because existing parameter-based and instance-based algorithms cannot address the transfer learning setting we focus on (i.e., X es = X et and Yes = Yet ). Though limited parameter-based algorithms (Yang et al., 2007a; Tommasi et al., 2014) can transfer across domains in heterogeneous label spaces, they can only handle binary classification problems. Deep neural network based algorithms (Yosinski et al., 2014; Long et al., 2015; Tzeng et al., 2015) transferring latent feature factors in multiple levels are left for our future research. As a result, we parameterize what to transfer with a latent feature factor matrix W which is elaborated in the following.\nLatent feature factor based algorithms aim to learn domaininvariant feature factors across domains. Consider classifying dog pictures as a source domain and cat pictures as a target domain. The domain-invariant feature factors may include eyes, mouth, tails, etc. What to transfer, in this case, is the shared feature factors across domains. The way of defining domain-invariant feature factors dictates two groups of latent feature factor based algorithms, i.e., common latent space based and manifold ensemble based algorithms.\nCommon Latent Space Based This line of algorithms, including but not limited to TCA (Pan et al., 2011), LSDT (Zhang et al., 2016), and DIP (Baktashmotlagh et al., 2013), assumes that domain-invariant feature factors lie in a single shared latent space. We denote by \u03d5 the function mapping original feature representation into the latent space. If \u03d5 is linear, it can be represented as an embedding matrix W \u2208 Rm\u00d7u where u is the dimensionality of the latent space. Therefore, we can parameterize what to transfer we focus on with W which describes u latent feature factors. Otherwise, if \u03d5 is nonlinear, what to transfer can still be parameterized with W. Though a nonlinear \u03d5 is not explicitly specified in most cases such as LSDT using sparse coding, target examples represented in the latent space Zte=\u03d5(X t e)\u2208Rn t e\u00d7u are always available. Consequently, we obtain the similarity metric matrix (Cao et al., 2013) in the latent space, i.e., G=(Xte) \u2020Zte(Z t e) T [(Xte) T ]\u2020\u2208Rm\u00d7m according to XteG(X t e) T =Zte(Z t e) T , where (Xte) \u2020 is the pseudo-inverse of Xte. LDL decomposition on G = LDL T brings the latent feature factor matrix W = LD1/2.\nManifold Ensemble Based Initiated by Gopalan et al., manifold ensemble based algorithms consider that a source and a target domain share multiple subspaces (of the same dimension) as points on the Grassmann manifold between them. The representation of target examples on u domain-invariant latent factors turns to Zt(nu)e =[\u03d51(Xte), \u00b7 \u00b7 \u00b7, \u03d5nu(Xte)] \u2208 Rn t e\u00d7nuu, if nu subspaces on the manifold are sampled. When all continuous subspaces on the manifold are sampled, i.e., nu \u2192\u221e, Gong et al. proved\nthat Zt(\u221e)e (Z t(\u221e) e )T =XteG(X t e)\nT where G is the similarity metric matrix. For computational details of G, please refer to (Gong et al., 2012). W=LD1/2 with L and D obtained from performing LDL decomposition on G=LDLT , therefore, is also qualified to represent latent feature factors distributed in a series of subspaces on a manifold."}, {"heading": "3.3. Learning from Experiences", "text": "The goal here is to learn a reflection function f such that f(Se, Te,We) can approximate le for all experiences {E1, \u00b7 \u00b7 \u00b7 , ENe}. The improvement ratio le is closely related to two aspects: 1) the difference between a source and a target domain in the shared latent space, and 2) the discriminative ability of a target domain in the latent space. The smaller difference guarantees more overlap between domains in the latent space, which signifies more transferable latent feature factors and higher improvement ratios as a result. The discriminative ability of a target domain in the latent space is also vital to improve performances. Therefore, we build f to take both aspects into consideration.\nThe Difference between a Source and a Target Domain We follow (Pan et al., 2011) and adopt the maximum mean discrepancy (MMD) (Gretton et al., 2012b) to measure the difference between domains. By mapping two domains into the reproducing kernel Hilbert space (RKHS), MMD empirically evaluates the distance between the mean of source examples and that of target examples:\nd\u03022e(X s eWe,X t eWe)\n= \u2225\u2225\u2225\u2225 1nse nse\u2211 i=1 \u03c6(xseiWe)\u2212 1 nte nte\u2211 j=1 \u03c6(xtejWe) \u2225\u2225\u2225\u2225 2 H\n= 1\n(nse)2 nse\u2211 i,i\u2032=1 K(xseiWe,xsei\u2032We)\n+ 1\n(nte)2 nte\u2211 j,j\u2032=1 K(xtejWe,xtej\u2032We)\n\u2212 2 nsente\nnse,n t e\u2211\ni,j=1\nK(xseiWe,xtejWe), (1)\nwhere xtej is the j-th example in X t e, and \u03c6 maps from the u-dimensional latent space to the RKHS H. K(\u00b7, \u00b7) = \u3008\u03c6(\u00b7), \u03c6(\u00b7)\u3009 is the kernel function. Different kernels K lead to different MMD distances and thereby different values of f . Thus learning the reflection function f is equivalent to optimizing K so that the MMD distance can well characterize the improvement ratio le for all pairs of domains. Inspired by multi-kernel MMD (Gretton et al., 2012b), we parameterize K as a linear combination of Nk PSD kernels, i.e., K=\u2211Nkk=1 \u03b2kKk (\u03b2k\u22650, \u2200k), and learn the coefficients \u03b2=[\u03b21,\u00b7 \u00b7 \u00b7, \u03b2Nk ] instead. Using \u03b2, the MMD can be rewritten as d\u03022e(XseWe,XteWe)= \u2211Nk k=1 \u03b2kd\u0302 2 e(k)(X s eWe,X t eWe)=\n\u03b2T d\u0302e, where d\u0302e=[d\u03022e(1),\u00b7 \u00b7 \u00b7, d\u03022e(Nk)] with d\u0302 2 e(k) computed by the k-th kernel Kk. In this paper, we consider RBF kernels Kk(a,b)=exp(\u2212\u2016a\u2212b\u20162/\u03b4k) by varying the bandwidth \u03b4k.\nUnfortunately, the MMD alone is insufficient to measure the difference between domains. The distance variance among all pairs of instances across domains is also required to fully characterize the difference. A pair of domains with small MMD but extremely high variance still have little overlap. Equation (1) is actually the empirical estimation of d2e(XseWe,XteWe) = Exsexs\u2032e xtext\u2032e h(x s e,x s\u2032 e ,x t e,x t\u2032 e ) (Gretton et al., 2012b) where h(xse,x s\u2032 e ,x t e,x t\u2032 e ) = K(xseWe,xs\u2032e We)+K(xteWe,xt\u2032e We)\u2212 K(xseWe, xt\u2032e We) \u2212 K(xs\u2032e We,xteWe). Consequently, the distance variance, \u03c32e , equals \u03c32e(X s eWe,X t eWe) =Exsexs\u2032e xtext\u2032e [(h(x s e,x s\u2032 e ,x t e,x t\u2032 e )\n\u2212Exsexs\u2032e xtext\u2032e h(x s e,x s\u2032 e ,x t e,x t\u2032 e )) 2].\nTo be consistent with the MMD characterized with Nk PSD kernels, we rewrite \u03c32e = \u03b2TQe\u03b2 where Qe = cov(h) =[\n\u03c3e(1,1) \u00b7\u00b7\u00b7 \u03c3e(1,Nk)\u00b7\u00b7\u00b7 \u00b7\u00b7\u00b7 \u00b7\u00b7\u00b7 \u03c3e(Nk,1) \u00b7\u00b7\u00b7\u03c3e(Nk,Nk)\n] . Each element \u03c3e(k1,k2) = cov(hk1 ,\nhk2) = E [(hk1\u2212Ehk1)(hk2\u2212Ehk2)]. Note that Ehk1 is shorthand for Exsexs\u2032e xtext\u2032e hk1(x s e,x s\u2032 e ,x t e,x t\u2032 e ) where hk1 is calculated using the k1-th kernel. We detail the empirical estimate Q\u0302e of Qe in the supplementary due to page limit.\nThe Discriminative Ability of a Target Domain In view of limited labeled examples in a target domain, we resort to unlabeled examples to evaluate the discriminative ability. The principles of the unlabeled discriminant criterion are two-fold: 1) similar examples should still be neighbours after being embedded into the latent space; and 2) dissimilar examples should be far away. We adopt the unlabeled discriminant criterion proposed in (Yang et al., 2007b),\n\u03c4e = tr(WTe S N e We)/tr(W T e S L e We),\nwhere SLe = \u2211nte\nj,j\u2032=1 Hjj\u2032 (nte) 2 (x t ej \u2212 xtej\u2032)(xtej \u2212 xtej\u2032)T\nis the local scatter covariance matrix with the neighbour information Hjj\u2032 defined as Hjj\u2032 ={ K(xtej ,xtej\u2032), if xtej \u2208 Nr(xtej\u2032) and xtej\u2032 \u2208 Nr(xtej) 0, otherwise .\nIf xtej and x t ej\u2032 are mutual r-nearest neighbours to each other, Hjj\u2032 equals the kernel value K(xtej ,xtej\u2032). By maximizing the unlabeled discriminant criterion \u03c4e, the local scatter covariance matrix guarantees the first principle, while\nSNe = \u2211nte j,j\u2032=1 K(xtej ,xtej\u2032 )\u2212Hjj\u2032\n(nte) 2 (x\nt ej \u2212 xtej\u2032)(xtej \u2212 xtej\u2032)T ,\nthe non-local scatter covariance matrix, enforces the second principle. \u03c4e also depends on kernels which in this case indicate different neighbour information and different degrees of similarity between neighboured examples. With \u03c4e(k) obtained from the k-th kernel Kk, the unlabeled discriminant criterion \u03c4e can be written as \u03c4e = \u2211Nk k=1 \u03b2k\u03c4e(k) = \u03b2\nT \u03c4 e where \u03c4 e = [\u03c4e(1), \u00b7 \u00b7 \u00b7 , \u03c4e(Nk)].\nThe Optimization Problem Combining the two aspects abovementioned to model the reflection function f , we finally formulate the optimization problem as follows,\n\u03b2\u2217, \u03bb\u2217, \u03bc\u2217, b\u2217 =\narg min \u03b2,\u03bb,\u03bc,b Ne\u2211 e=1 Lh ( \u03b2T d\u0302e + \u03bb\u03b2 T Q\u0302e\u03b2 + \u03bc \u03b2T \u03c4 e + b, 1 le )\n+ \u03b31R(\u03b2, \u03bb, \u03bc, b),\ns.t. \u03b2k \u2265 0, \u2200k \u2208 {1, \u00b7 \u00b7 \u00b7 , Nk}, \u03bb \u2265 0, \u03bc \u2265 0, (2) where 1/f = \u03b2T d\u0302e + \u03bb\u03b2T Q\u0302e\u03b2 + \u03bc\u03b2T \u03c4e + b and Lh(\u00b7) is the Huber regression loss (Huber et al., 1964) constraining the value of 1/f to be as close to 1/le as possible. \u03b31 controls the complexity of the parameters by l2-regularization. Minimizing the difference between domains, including the MMD distance \u03b2T d\u0302e and the distance variance \u03b2T Q\u0302e\u03b2, and meanwhile maximizing the discriminant criterion \u03b2T \u03c4 e in the target domain will contribute a large performance improvement ratio le (i.e., a small 1/le). \u03bb and \u03bc balance the importance of the three terms in f , and b is the bias term."}, {"heading": "3.4. Inferring What to Transfer", "text": "Once the L2T agent has learned the reflection function f(S, T ,W;\u03b2\u2217, \u03bb\u2217, \u03bc\u2217, b\u2217), it takes advantage of the function to optimize what to transfer, i.e., the latent feature factor matrix W, for a newly arrived source domain SNe+1 and a target domain TNe+1. The optimal latent feature factor matrix W\u2217Ne+1 should maximize the value of f . To this end, we optimize the following objective with regard to W, W\n\u2217 Ne+1 =argmax W f(SNe+1, TNe+1,W;\u03b2 \u2217 , \u03bb \u2217 , \u03bc \u2217 , b \u2217 ) \u2212 \u03b32\u2016W\u20162F\n=argmin W\n(\u03b2 \u2217 ) T d\u0302W + \u03bb \u2217 (\u03b2 \u2217 ) T Q\u0302W\u03b2 \u2217 + \u03bc \u2217 1 (\u03b2\u2217)T \u03c4W + \u03b32\u2016W\u20162F , (3)\nwhere \u2016 \u00b7 \u2016F denotes the matrix Frobenius norm and \u03b32 controls the complexity of W. The first and second terms in problem (3) can be calculated as\n(\u03b2 \u2217 ) T d\u0302W = Nk\u2211 k=1 \u03b2 \u2217 k\n[ 1\na2 a\u2211 i,i\u2032=1 Kk(viW,vi\u2032W)+\n1 b2 b\u2211 j,j\u2032=1 Kk(wjW,wj\u2032W) \u2212 2 ab a,b\u2211 i,j=1 Kk(viW,wjW) ] ,\n(\u03b2 \u2217 ) T Q\u0302W\u03b2 \u2217 =\n1\nn2 \u2212 1 n\u2211 i,i\u2032=1 Nk\u2211 k=1 { \u03b2 \u2217 k [ Kk(viW,vi\u2032W)+\nKk(wiW,wi\u2032W) \u2212 2Kk(viW,wi\u2032W) \u2212 1\nn2 n\u2211 i,i\u2032=1 ( Kk(viW,vi\u2032W)\n+ Kk(wiW,wi\u2032W) \u2212 2Kk(viW,wi\u2032W) )]}2 ,\nwhere the shorthand vi = xs(Ne+1)i, vi\u2032 = x s (Ne+1)i\u2032 , wj = xt(Ne+1)j , wj\u2032 =x t (Ne+1)j\u2032 , a=n s Ne+1, and b=n t Ne+1 are used due to space limit. Note that n=min(nsNe+1, n t Ne+1\n). The third term in problem (3) can be computed as (\u03b2\u2217)T \u03c4W =\u2211Nk\nk=1 \u03b2 \u2217 k tr(WTSNk W) tr(WTSLkW) . We optimize the non-convex prob-\nlem (3) w.r.t W by employing a conjugate gradient method in which the gradient is listed in the supplementary material."}, {"heading": "4. Stability and Generalization Bounds", "text": "In this section, we would theoretically investigate how previous transfer learning experiences influence a transfer learning task of interest. We also provide and prove the algorithmic stability and generalization bound for latent feature factor based transfer learning algorithms without experiences considered in the supplementary.\nConsider S = {\u3008S1, T1\u3009,\u00b7 \u00b7 \u00b7, \u3008SNe , TNe\u3009} to be Ne transfer learning experiences or the so-called meta-samples (Maurer, 2005). Let L(S) be our algorithm that learns meta-cognitive knowledge from Ne transfer learning experiences in S and applies the knowledge to the (Ne+1)-th transfer learning task \u3008SNe+1, TNe+1\u3009. To analyse the stability and give the generalization bound, we make an assumption on the distribution from which all Ne transfer learning experiences as meta-samples are sampled. For every environment E we have, all Ne pairs of source and target domains in S are drawn according to an algebraic \u03b2-mixing stationary distribution (DE)Ne , which is not i.i.d.. Intuitively, the algebraical \u03b2-mixing stationary distribution (see Definition 2 in (Mohri & Rostamizadeh, 2010)) with the \u03b2-mixing coefficient \u03b2(m)\u2264\u03b20/mr models the dependence between future samples and past samples by a distance of at least m. The independent block technique (Bernstein, 1927) has been widely adopted to deal with non-i.i.d. learning problems. Under this assumption, L(S) is uniformly stable.\nTheorem 1. Suppose that for any xte and for any yte we have \u2016xte\u20162\u2264rx and |yte|\u2264B. Meanwhile, for any e-th transfer learning experience, we assume that the latent feature factor matrix \u2016We\u2016\u2264 rW . To meet the assumption above, we reasonably simplify L(S) so that the latent feature factor matrix for the (Ne+1)-th transfer learning task is a linear combination of all Ne historical latent factor feature matrices plus a noisy latent feature matrix W satisfying \u2016W \u2016\u2264r , i.e., WNe+1= \u2211Ne e=1 ceWe+W with each coefficient 0\u2264ce\u22641. Our algorithm L(S) is uniformly stable. For any \u3008S, T \u3009 as the coming transfer learning task, the following inequality holds:\u2223\u2223lemp(L(S), (S, T ))\u2212 lemp(L(Se0), (S, T ))\u2223\u2223\n\u2264 4(4Ne \u2212 3 + r /rW )B 2rx\n\u03bbN2e \u223c O ( B2rx \u03bbNe ) , (4)\nwhere S = {\u3008S1, T1\u3009, \u00b7 \u00b7 \u00b7 , \u3008Se0\u22121, Te0\u22121\u3009, \u3008Se0 , Te0\u3009, \u3008Se0+1, Te0+1\u3009, \u00b7 \u00b7 \u00b7 , \u3008SNe , TNe\u3009} denotes the full set of meta-samples, and Se0 = {\u3008S1, T1\u3009, \u00b7 \u00b7 \u00b7 , \u3008Se0\u22121, Te0\u22121\u3009, \u3008Se\u20320 , Te\u20320\u3009, \u3008Se0+1, Te0+1\u3009, \u00b7 \u00b7 \u00b7 , \u3008SNe , TNe\u3009} represents the meta-samples with the e0-th meta-example replaced as \u3008Se\u20320 , Te\u20320\u3009. By generalizing S to be meta-samples S and hS to be L2T L(S), we apply Corollary 21 in (Mohri & Rostamizadeh,\n2010) to give the generalization bound of our algorithm L(S) in Theorem 2.\nTheorem 2. Let \u03b4\u2032 = \u03b4\u2212(Ne) 1 2(r+1) \u2212 14 (r > 1 is required). Then for any sample S of size Ne drawn according to an algebraic \u03b2-mixing stationary distribution, and \u03b4 \u2265 0 such that \u03b4\u2032 \u2265 0, the following generalization bound holds with probability at least 1\u2212 \u03b4: \u2223\u2223R(L(S))\u2212RNe(L(S))\u2223\u2223 < O ( (Ne) 1 2(r+1) \u2212 1 4 \u221a log( 1\n\u03b4\u2032 )\n) ,\nwhere R(L(S)) and RNe(L(S)) denote the expected risk and the empirical risk of L2T over meta-samples, respectively. A larger mixing parameter r, indicating more independence, would lead to a tighter bound.\nTheorem 2 tells that as the number of transfer learning experiences, i.e., Ne, increases, L2T tends to produce a tighter generalization bound. This fact lays the foundation for further conducting L2T in an online manner which can gradually assimilate transfer learning experiences and continuously improve. The detailed proofs for Theorem 1 and 2 can be found in the supplementary."}, {"heading": "5. Experiments", "text": "Datasets We evaluate the L2T framework on two image datasets, Caltech-256 (Griffin et al., 2007) and Sketches (Eitz et al., 2012). Caltech-256, collected from Google Images, contains a total of 30,607 images in 256 categories. The Sketches dataset, however, consists of 20,000 unique sketches by human beings that are evenly distributed over 250 different categories. We construct each pair of source and target domains by randomly sampling three categories from Caltech-256 as the source domain and randomly sampling three categories from Sketches as the target domain, which we give an example in the supplementary material. Consequently, there are 20, 000/250\u00d7 3 = 720 examples in a target domain of each pair. In total, we generate 1,000 training pairs for preparing transfer learning experiences, 500 validation pairs to determine hyperparameters of the reflection function, and 500 testing pairs to evaluate the reflection function. We characterize each image from both datasets with 4,096-dimensional features extracted by a convolutional neural network pre-trained by ImageNet.\nIn this paper we generate transfer learning experiences by ourselves, because we are the first to consider transfer learning experiences and there exists no off-the-shelf datasets. In real-world applications, either the number of labeled examples in a target domain or the transfer learning algorithm could vary from experience to experience. In order to mimic the real environment, we prepare each transfer learning experience by randomly selecting a transfer learning algorithm from a base set A and randomly setting the number of labeled target examples in the range of [3, 120]. The randomly\ngenerated training experiences, lying in the same environment (generated by one dataset), are non i.i.d., which fit the algebraical \u03b2-mixing assumption theoretically in Section 4.\nBaselines and Evaluation Metrics We compare L2T with the following nine baseline algorithms in three classes:\n\u2022 Non-transfer: Original builds a model using labeled data in a target domain only. \u2022 Common latent space based transfer learning algorithms: TCA (Pan et al., 2011), ITL (Shi & Sha, 2012), CMF (Long et al., 2014), LSDT (Zhang et al., 2016), STL (Raina et al., 2007), DIP (Baktashmotlagh et al., 2013) and SIE (Baktashmotlagh et al., 2014). \u2022 Manifold ensemble based algorithms: GFK (Gong et al., 2012).\nThe eight feature-based transfer learning algorithms also constitute the base set A. Based on feature representations obtained by different algorithms, we use the nearestneighbor classifier to perform three-class classification for the target domain.\nOne evaluation metric is classification accuracy on testing examples of a target domain. However, accuracies are incomparable for different target domains at different levels of difficulty. The other evaluation metric we adopt is the performance improvement ratio defined in Section 3.1, so as to compare the L2T over different pairs of domains.\nPerformance Comparison In this experiment, we learn a reflection function from 1,000 transfer learning experiences, and evaluate the reflection function on 500 testing pairs of source and target domains by comparing the average performance improvement ratio to the baselines. In building the reflection function, we use 33 RBF kernels with the bandwidth \u03b4k in the range of [2\u22128\u03b7 : 20.5\u03b7 : 28\u03b7] where \u03b7 = 1\nnsen t eNe\n\u2211Ne e=1 \u2211nse,nte i,j=1 \u2016xseiW \u2212 xtejW\u201622 follows\nthe median trick (Gretton et al., 2012a). As Figure 4 shows, on average the proposed L2T framework outperforms the baselines up to 10% when varying the number of labeled samples in the target domain. As the number of labeled target examples increases from 3 to 120, the performance improvement ratio becomes smaller because the accuracy of Original without transfer tends to increase. The baseline\nalgorithms behave differently. The transferable knowledge learned by LSDT helps a target domain a lot when training examples are scarce, while GFK performs poorly until training examples become more. STL is almost the worst baseline because it learns a dictionary from the source domain only but ignores the target domain. It runs at a high risk of failure especially when two domains are distant. DIP and SIE, which minimize the MMD and Hellinger distance between domains subject to manifold constraints, are competent. Note that we have run the paired t-test between L2T and each baseline with all the p-values in the order of 10\u221212, concluding that the L2T is significantly superior.\nWe also randomly select six of the 500 testing pairs and compare classification accuracies by different algorithms for each pair in Figure 3. The performance of all baselines varies from pair to pair. Among all the baseline methods, TCA performs the best when transferring between domains in Figure 3a and LSDT is the most superior in Figure 3c. However, L2T consistently outperforms the baselines on all the settings. For some pairs, e.g., Figures 3a, 3c and 3f, the three classes in a target domain are comparably easy to tell apart, hence Original without transfer can achieve even better results than some transfer learning algorithms. In this case, L2T still improves by discovering the best transferable knowledge from the source domain, especially when the number of labeled examples is small (see Figure 3c and 3f). If two domains are very related, e.g., the source with \u201cgalaxy\u201d and \u201csaturn\u201d and the target with \u201csun\u201d in Figure 3a, L2T even finds out more transferable knowledge and contributes more significant improvement.\nVarying the Experiences We further investigate how transfer learning experiences used to learn the reflection function influence the performance of L2T. In this experiment, we evaluate on 50 randomly sampled pairs out of the 500 testing pairs in order to efficiently investigate a wide range of cases in the following. The sampled set is unbiased and sufficient to characterize such influence, evidenced by the asymptotic consistency between the average performance improvement ratio on the 500 pairs in Figure 4 and that on the 50 pairs in the last line of Table 1. First, we fix the number of transfer learning experiences to be 1,000 and vary the set of base transfer learning algorithms. The results are shown in Table 1. Even with experiences generated by single base algorithm, e.g., ITL or DIP, the L2T can still learn a reflection function that significantly better (p-value < 0.05) decides what to transfer than using ITL or DIP directly. With more base algorithms involved, the transfer learning experiences are more diverse to cover more situations of source-target pairs and the knowledge transferred between them. As a result, the L2T learns a better reflection function and thereby achieves higher performance improvement ratios, which coincides with Theorem 2 where a larger r indicating more independence between experiences gives a tighter bound. Second, we fix the set of base algorithms to include all the eight baselines and vary the number of transfer learning experiences used for training. As shown in Figure 5, the average performance improvement ratio achieved by L2T tends to increase as the number of labeled examples in the target domain decreases, given that Original without transfer performs extremely poor with scarce labeled examples.\nFigure 6. Varying the components constituted in the f .\nFigure 7. Varying the number of kernels considered in the f .\nMore importantly, it increases as the number of experiences increases, which coincides with Theorem 2.\nVarying the Reflection Function We also study the influence of different configurations of the reflection function on the performance of L2T. First, we vary the components to be considered in building the reflection function f as shown in Figure 6. Considering single type, either MMD, variance, or the discriminant criterion, brings inferior performance and even negative transfer. L2T taking all the three factors into consideration outperforms the others, demonstrating that the three components are all necessary and mutually reinforcing. With all the three components included, we plot values of the learned \u03b2\u2217 in the supplementary material. Second, we change the kernels used. In Figure 7, we present results by either narrowing down or extending the range [2\u22128\u03b7 : 20.5\u03b7 : 28\u03b7]. Obviously, more kernels (e.g., [2\u221212\u03b7 : 20.5\u03b7 : 212\u03b7]), capable of encrypting better trans-\nfer learning skills in the reflection function, achieve larger performance improvement ratios."}, {"heading": "6. Conclusion", "text": "In this paper, we propose a novel L2T framework for transfer learning which automatically optimizes what and how to transfer between a source and a target domain by leveraging previous transfer learning experiences. In particular, L2T learns a reflection function mapping a pair of domains and the knowledge transferred between them to the performance improvement ratio. When a new pair of domains arrives, L2T optimizes what and how to transfer by maximizing the value of the learned reflection function. We believe that L2T opens a new door to improve transfer learning by leveraging transfer learning experiences. Many research issues, e.g., incorporating hierarchical latent feature factors as what to transfer and designing online L2T, can be further examined."}, {"heading": "Acknowledgements", "text": "We thank the reviewers for their valuable comments to improve this paper. The research has been supported by National Grant Fundamental Research (973 Program) of China under Project 2014CB340304, Hong Kong CERG projects 16211214/16209715/16244616, Hong Kong ITF ITS/391/15FX and NSFC 61673202."}], "year": 2018, "references": [{"title": "Continuous adaptation via metalearning in nonstationary and competitive environments", "authors": ["M. Al-Shedivat", "T. Bansal", "Y. Burda", "I. Sutskever", "I. Mordatch", "P. Abbeel"], "venue": "In ICLR,", "year": 2018}, {"title": "Multi-task feature learning", "authors": ["A. Argyriou", "T. Evgeniou", "M. Pontil"], "venue": "In NIPS, pp", "year": 2007}, {"title": "Unsupervised domain adaptation by domain invariant projection", "authors": ["M. Baktashmotlagh", "M.T. Harandi", "B.C. Lovell", "M. Salzmann"], "venue": "In ICCV, pp", "year": 2013}, {"title": "Domain adaptation on the statistical manifold", "authors": ["M. Baktashmotlagh", "M.T. Harandi", "B.C. Lovell", "M. Salzmann"], "venue": "In CVPR,", "year": 2014}, {"title": "To secure transfer of training instruct self-management skills", "authors": ["J.M. Belmont", "E.C. Butterfield", "Ferretti", "R. P"], "venue": "How and How Much Can Intelligence be Increased,", "year": 1982}, {"title": "Sur l\u2019extension du th\u00e9or\u00e8me limite du calcul des probabilit\u00e9s aux sommes de quantit\u00e9s d\u00e9pendantes", "authors": ["S. Bernstein"], "venue": "Mathematische Annalen,", "year": 1927}, {"title": "Domain adaptation with structural correspondence learning", "authors": ["J. Blitzer", "R. McDonald", "F. Pereira"], "venue": "In EMNLP, pp", "year": 2006}, {"title": "Similarity metric learning for face recognition", "authors": ["Q. Cao", "Y. Ying", "P. Li"], "venue": "In ICCV, pp", "year": 2013}, {"title": "Multitask learning", "authors": ["R. Caruana"], "venue": "Machine Learning,", "year": 1997}, {"title": "Boosting for transfer learning", "authors": ["W. Dai", "Q. Yang", "Xue", "G.-R", "Y. Yu"], "venue": "In ICML, pp", "year": 2007}, {"title": "How do humans sketch objects", "authors": ["M. Eitz", "J. Hays", "M. Alexa"], "venue": "ACM Trans. Graph. (Proc. SIGGRAPH),", "year": 2012}, {"title": "Model-agnostic metalearning for fast adaptation of deep networks", "authors": ["C. Finn", "P. Abbeel", "S. Levine"], "venue": "In ICML,", "year": 2017}, {"title": "Geodesic flow kernel for unsupervised domain adaptation", "authors": ["B. Gong", "Y. Shi", "F. Sha", "K. Grauman"], "venue": "In CVPR, pp. 2066\u20132073,", "year": 2012}, {"title": "Domain adaptation for object recognition: An unsupervised approach", "authors": ["R. Gopalan", "R. Li", "R. Chellappa"], "venue": "In ICCV, pp", "year": 2011}, {"title": "Optimal kernel choice for large-scale two-sample tests", "authors": ["A. Gretton", "D. Sejdinovic", "H. Strathmann", "S. Balakrishnan", "M. Pontil", "K. Fukumizu", "B.K. Sriperumbudur"], "venue": "In NIPS,", "year": 2012}, {"title": "Robust estimation of a location parameter", "authors": ["Huber", "P. J"], "venue": "The Annals of Mathematical Statistics,", "year": 1964}, {"title": "Transfer learning with graph co-regularization", "authors": ["M. Long", "J. Wang", "G. Ding", "D. Shen", "Q. Yang"], "year": 2014}, {"title": "Learning transferable features with deep adaptation networks", "authors": ["M. Long", "Y. Cao", "J. Wang", "M. Jordan"], "venue": "In ICML, pp", "year": 2015}, {"title": "Cognitive Development: Its Cultural and Social Foundations", "authors": ["A.R. Luria"], "year": 1976}, {"title": "Algorithmic stability and meta-learning", "authors": ["A. Maurer"], "venue": "JMLR, 6(Jun):967\u2013994,", "year": 2005}, {"title": "Personalizing a dialogue system with transfer learning", "authors": ["K. Mo", "S. Li", "Y. Zhang", "J. Li", "Q. Yang"], "venue": "arXiv preprint arXiv:1610.02891,", "year": 2016}, {"title": "Stability bounds for stationary \u03c6-mixing and \u03b2-mixing", "authors": ["M. Mohri", "A. Rostamizadeh"], "venue": "processes. JMLR,", "year": 2010}, {"title": "Domain adaptation via transfer component analysis. TNN", "authors": ["S.J. Pan", "I.W. Tsang", "J.T. Kwok", "Q. Yang"], "year": 2011}, {"title": "Lifelong learning with non-iid tasks", "authors": ["A. Pentina", "C.H. Lampert"], "venue": "In NIPS, pp", "year": 2015}, {"title": "Self-taught learning: transfer learning from unlabeled data", "authors": ["R. Raina", "A. Battle", "H. Lee", "B. Packer", "A.Y. Ng"], "venue": "In ICML, pp", "year": 2007}, {"title": "ELLA: An efficient lifelong learning algorithm", "authors": ["P. Ruvolo", "E. Eaton"], "venue": "In ICML, pp", "year": 2013}, {"title": "Information-theoretical learning of discriminative clusters for unsupervised domain adaptation", "authors": ["Y. Shi", "F. Sha"], "venue": "In ICML, pp", "year": 2012}, {"title": "Learning to learn", "authors": ["S. Thrun", "L. Pratt"], "venue": "Springer Science & Business Media,", "year": 1998}, {"title": "Learning categories from few examples with multi model knowledge transfer", "authors": ["T. Tommasi", "F. Orabona", "B. Caputo"], "venue": "TPAMI, 36(5):928\u2013941,", "year": 2014}, {"title": "Simultaneous deep transfer across domains and tasks", "authors": ["E. Tzeng", "J. Hoffman", "T. Darrell", "K. Saenko"], "venue": "In ICCV, pp", "year": 2015}, {"title": "Transfer knowledge between cities", "authors": ["Y. Wei", "Y. Zheng", "Q. Yang"], "venue": "In KDD,", "year": 2016}, {"title": "Adapting SVM classifiers to data with shifted distributions", "authors": ["J. Yang", "R. Yan", "A.G. Hauptmann"], "venue": "In ICDM, pp", "year": 2007}, {"title": "Globally maximizing, locally minimizing: unsupervised discriminant projection with applications to face and palm", "authors": ["J. Yang", "D. Zhang", "Yang", "J.-y", "B. Niu"], "venue": "biometrics. TPAMI,", "year": 2007}, {"title": "How transferable are features in deep neural networks", "authors": ["J. Yosinski", "J. Clune", "Y. Bengio", "H. Lipson"], "venue": "In NIPS,", "year": 2014}, {"title": "LSDT: Latent sparse domain transfer learning for visual", "authors": ["L. Zhang", "W. Zuo", "D. Zhang"], "venue": "adaptation. TIP,", "year": 2016}], "id": "SP:15dd061a323e4de0e3d2866328bc4b6637e8ad0a", "authors": [{"name": "Ying Wei", "affiliations": []}, {"name": "Yu Zhang", "affiliations": []}, {"name": "Junzhou Huang", "affiliations": []}, {"name": "Qiang Yang", "affiliations": []}], "abstractText": "In transfer learning, what and how to transfer are two primary issues to be addressed, as different transfer learning algorithms applied between a source and a target domain result in different knowledge transferred and thereby the performance improvement in the target domain. Determining the optimal one that maximizes the performance improvement requires either exhaustive exploration or considerable expertise. Meanwhile, it is widely accepted in educational psychology that human beings improve transfer learning skills of deciding what to transfer through meta-cognitive reflection on inductive transfer learning practices. Motivated by this, we propose a novel transfer learning framework known as Learning to Transfer (L2T) to automatically determine what and how to transfer are the best by leveraging previous transfer learning experiences. We establish the L2T framework in two stages: 1) we learn a reflection function encrypting transfer learning skills from experiences; and 2) we infer what and how to transfer are the best for a future pair of domains by optimizing the reflection function. We also theoretically analyse the algorithmic stability and generalization bound of L2T, and empirically demonstrate its superiority over several state-ofthe-art transfer learning algorithms.", "title": "Transfer Learning via Learning to Transfer"}