0	25	Real-time simulation of fluid flow is a long standing problem in many application domains: from computational fluid dynamics for industrial applications, to smoke and fluid effects for computer graphics and animation.
3	20	This work is focused on computer graphics animation as the driving application for our architecture, however the techniques presented here can be extended to more complicated forms of Navier-Stokes (with appropriate modifications that are outside the scope of this work).
56	159	When a fluid has zero viscosity and is incompressible it is called inviscid, and can be modeled by the Euler equations (Batchelor, 1967): ∂u ∂t = −u · ∇u− 1 ρ ∇p+ f (1) ∇ · u = 0 (2) Where u is the velocity (a 2D or 3D vector field), t is time, p is the pressure (a scalar field), f is the summation of external forces applied to the fluid body (buoyancy, gravity, etc) and ρ is fluid density.
57	25	Equation 1 is known as the momentum equation, it arrises from applying Newton’s second law to fluid motion and describes how the fluid accelerates given the forces acting on it.
60	38	We numerically compute all spatial partial derivatives using finite difference (FD) methods on a MAC grid (Harlow & Welch, 1965).
65	37	7: Pressure Projection to calculate ut: 8: Solve Poisson eqn,∇2pt = 1∆t∇ · u?t , to find pt 9: Apply velocity update ut = ut−1 − 1ρ∇pt At a high level, Algorithm 1 step 1 ignores the pressure term (−∇p of Equation 1) to create an advected velocity field, u?t , which includes unwanted divergence, and then step 7 solves for pressure, p, to satisfy the incompressibility constraint (Equation 2).
74	21	It involves solving the following Poisson equation: ∇2pt = 1 ∆t ∇ · u?t (3) Rewriting the above equation results in a large sparse linear system Apt = b, where A is referred to in the literature as the 5 or 7 point Laplacian matrix (for 2D and 3D grids respectively).
83	27	However, in real-time applications, PCG or Jacobi iterations are truncated before reaching convergence.
85	28	As such, truncation forgoes treating the incompressibility condition as a hard constraint even if this is not the intention, and few guarantees can be given for quality of the divergence residual at termination.
86	30	This is especially true in degenerate cases when the matrix in the sparse linear system A has a large number of free-parameters (for example with highly irregular geometry boundaries).
93	75	The fundamental observation is that, while there is no closed form solution and a numerical solution might be difficult to compute, the function mapping input data to the optimum of an optimization problem is deterministic.
94	24	Therefore one can attempt to approximate it using a powerful regressor such as deep neural network.
95	36	Building upon this observation, another key contribution of this work is that the learning task can be phrased as a completely unsupervised learning problem, if an appropriate ConvNet architecture is used.
96	26	Instead of using supervised training to directly infer and score the next frame velocity (or pressure) - where the loss would be some distance measure to ground-truth data - we measure the squared L-2 norm of the divergence of the predicted velocity and minimize it directly: fobj = ∑ i wi {∇ · ût}2i = ∑ i wi { ∇ · ( u?t − 1 ρ ∇p̂t )}2 i (4) Where ût and p̂t are the predicted divergence free velocity and pressure fields respectively and wi is a per-vertex weighting term which emphasizes the divergence of voxels on geometry boundaries: wi = max (1, k − di) where di is a distance field with value 0 for solid cells, and for fluid cells is the minimum Euclidean distance of each fluid-cell to the nearest solid cell (i.e. a signed distance field encoding of the occupancy grid).
100	37	Firstly, since obtaining ground-truth velocity from expensive iterative methods is no longer necessary, we can perform non-trivial data-augmentation to the input velocity fields.
101	30	Secondly, we can incorporate loss information from a composition of multiple time-steps without the need of running exact solvers for each frame.
120	24	However a single resolution network would have limited context which limits the network’s ability to model long-range external forces (for example the presence of gravity in a closed simulation domain results in a low frequency pressure gradient).
158	31	Note that this equivalent reimplementation as a ConvNet is significantly faster, as we can make use of the highly optimized convolution implementations from NVIDIA’s cudnn library.
174	81	Note that for fair quantitative comparison of output residual, we choose the number of Jacobi iterations (34) to approximately match the FPROP time of our network (i.e. to compare divergence with fixed compute).
176	20	PCG is orders of magnitude slower at all resolutions and has been omitted for clarity.
178	45	The runtime for the PCG, Jacobi, this work, and the small-model at 1283 grid resolution are 2521ms, 47.6ms, 39.9ms and 16.9ms respectively.
184	55	Since vorticity confinement tends to obfuscate simulation errors (by adding high frequency detail), Figures 6 and 7 were simulated without it.
191	100	We also repeat the above simulation with solid cells from two models held out of our training set: the “arc de triomphe” model (Pu & Ramani, 2006) and the Stanford bunny (Turk & Levoy, 1994); the single frame results for the arch simulation are shown in Figure 7.
196	22	For Jacobi to match the divergence performance of our network, it requires 116 iterations and so is 4.1× slower than our network.
202	45	As a test of long-term stability, we record the mean L2 norm of velocity divergence (E (‖∇ · ûi‖)) across all samples in our test-set.
206	31	Adding multi-frame components not only improves the divergence residual over multiple time steps as expected (since this is what we are directly minimizing), but additionally the single frame divergence performance is also improved.
207	65	We attribute this to the fact that these future frames effectively increase dataset diversity, and can be seen as a form of dataset augmentation to improve generalization performance.
211	29	We also present a novel and tailored ConvNet architecture, which facilitates drop-in replacement with existing Eulerian-based solvers.
212	61	While the proposed approach cannot guarantee finding an exact solution to the pressure projection step, it can empirically produce very stable divergence free velocity fields whose runtime and accuracy is better than the Jacobi method (a common technique used for real-time simulation) and whose visual results are comparable to PCG, while being orders of magnitude faster.
213	62	Code, data and videos are made available at http://cims.nyu.edu/˜schlacht/ CNNFluids.htm.
