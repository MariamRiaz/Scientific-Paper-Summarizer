0	6	Maximum selection and sorting using pairwise comparisons are computer-science staples taught in most introductory classes and used in many applications.
1	39	In fact, sorting, also known as ranking, was once claimed to utilize 25% of all computer cycles, e.g., (Mukherjee, 2011).
3	12	In sports, tournaments rank teams based on pairwise matches whose outcomes are probabilistic in nature.
5	35	And in online advertising, out of a myriad of possible ads, each web page may display only a few, and a user will typically select at most one.
6	14	Based on these random comparisons, ad companies such as Google, Microsoft, or Yahoo, rank the ads’ appeal (Radlinski & Joachims, 2007; Radlinski et al., 2008).
8	4	gence of interest in maximum selection and ranking using noisy comparisons.
11	54	We consider a significantly broader class of models and yet propose algorithms that are optimal up to a constant factor for maximum selection and up to (log log n)3 for ranking.
12	63	Noiseless comparison assumes an unknown underlying ranking r(1), .
13	66	,n} such that if two elements are compared, the higher-ranked one is selected.
14	13	Similarly for noisy comparisons, we assume an unknown ranking of the elements, but now if two elements i and j are compared, i is chosen with some unknown probability p(i, j) and j is chosen with probability p(j, i) = 1 p(i, j), where if i is higher-ranked, then p(i, j) 1 2 .
15	7	Repeated comparisons are independent of each other.
16	16	Let p̃(i, j) = p(i, j) 1 2 reflect the additional probability by which i is preferable to j.
17	3	|p̃(i, j)| can also be seen as a measure of dissimilarity between i and j.
18	42	Following (Yue & Joachims, 2011), we assume that two natural properties, satisfied for example by the PL model, hold whenever r(i) > r(j) > r(k): Strong Stochastic Transitivity (SST), p̃(i, k) max(p̃(i, j), p̃(j, k)), and Stochastic Triangle Inequality (STI), p̃(i, k)  p̃(i, j) + p̃(j, k).
19	40	Two types of algorithms have been proposed for maximum selection and ranking under noisy comparisons: nonadaptive or offline (Rajkumar & Agarwal, 2014; Negahban et al., 2012; 2016; Jang et al., 2016) where the comparison pairs are chosen in advance, and adaptive or online where the comparison pairs are selected sequentially based on previous comparison results.
20	67	We specify the desired output via the (✏, )-PAC paradigm (Yue & Joachims, 2011; Szörényi et al., 2015) that requires the output to likely closely approximate the intended outcome.
21	28	Specifically, given ✏, > 0, with prob- ability 1 , maximum selection must output an ✏- maximum element i such that for all j, p(i, j) 1 2 ✏.
22	117	Similarly, with probability 1 , the ranking algorithm must output an ✏-ranking r0(1), .
23	4	In Section 2 we review past work and summarize our contributions.
41	33	• Ranking algorithm with O n ✏ 2 (log n)3 log n sample complexity.
43	61	• Using the above framework, a ranking algorithm with sample complexity O n ✏ 2 log n(log log n)3 for = 1 n .
44	39	• An ⌦ n ✏ 2 log n lower bound on the sample complex- ity of any PAC ranking algorithm, matching our algorithm’s sample complexity up to a (log log n)3 factor.
50	104	Hence we get log n-factor improvement in the number of comparisons and also we use linear memory compared to quadratic memory.
52	128	(Yue & Joachims, 2011; Szörényi et al., 2015) eliminate elements one by one until only ✏-maximums are remaining.
54	22	1 /n, requiring O(log(n/ )) comparisons for each eliminated element and hence a superlinear sample complexity O(n log(n/ )).
55	19	In contrast, KNOCKOUT eliminates elements in log n rounds.
56	91	Since in Knockout tournaments, number of elements decrease exponentially with each round, we afford to endure more error in the initial rounds and less error in the latter rounds by repeating comparison between each pair more times in latter rounds.
57	44	Specifically, let b i be the highest-ranked element (according to the unobserved underlying ranking) at the beginning of round i. KNOCKOUT makes sure that w.p.
59	13	Choosing ✏ i = c✏ 2 i/3 with c = 21/3 1, we make sure that comparison complexity is O n ✏ 2 1 + log 1 and by union bound and STI, w.p.
63	19	(Yue & Joachims, 2011) considered a different definition of ✏-maximum as an element i that is at most ✏ dissimilar to true maximum i.e., for j with r(j) = n, p̃(j, i)  ✏.
