{"sections": [{"heading": "1. Introduction", "text": "Stochastic gradient algorithms (Robbins & Monro, 1951; Bottou & Cun, 2004; Srebro & Tewari, 2010; Moulines & Bach, 2011; Duchi et al., 2011) and online learning algorithms (e.g. (Bottou & Cun, 2004; Srebro & Tewari, 2010; Shalev-Shwartz et al., 2011; Hazan & Kale, 2012; Rakhlin et al., 2012a; Orabona, 2014)) can update the model sequentially with computationally cheap per-iteration costs, making them amenable for large-scale streaming data analysis. Most of the existing studies focus on classification error or prediction accuracy where the empirical objective function is a summation of losses over individual samples.\nHowever, accuracy is not suitable for important learning tasks such as imbalanced classification (Elkan, 2001). Area under the ROC curve (AUC) (Hanley & McNeil, 1982; Bradley, 1997; Fawcett, 2006) is a widely used metric\n1Department of Mathematics and Statistics, SUNY at Albany, Albany, NY, USA 2Department of Computer Science, SUNY at Albany, Albany, NY, USA. Correspondence to: Yiming Ying <yying@albany.edu>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\nfor measuring the performance in these tasks. In particular, minimization of the rank loss in bipartite ranking is equivalent to maximizing the AUC criterion (Kotlowski et al., 2011). There are considerable efforts (Herschtal & Raskutti, 2004; Rakotomamonjy, 2004; Joachims, 2005; Zhang et al., 2012) that have been devoted to developing batch AUC maximization algorithms. These appealing algorithms have a convergence rate ofO ( min ( 1 \u03b5 , 1\u221a \u03bb\u03b5 )) , but have a high per-iteration cost of O(nd). Here, \u03bb, n, and d are the regularization parameter, the number of samples, and the dimension of the data, respectively. Such algorithms train the model on the whole training data which are not suitable for analyzing massive streaming data that arrives sequentially.\nRecently, there is considerable progress on online learning algorithms (Zhao et al., 2011; Wang et al., 2012; Kar et al., 2013) for AUC maximization. Due to the fact that the empirical risk for AUC maximization is a summation of pairwise losses over pairs of samples, such algorithms, at time t, need to pair the currently-received data (xt, yt) with all previous data {(xi, yi) : i = 1, . . . , t \u2212 1}. As such, one needs to access all previous examples which leads to expensive space and per-iteration complexity of O(td) for ddimensional data at iteration t. The studies (Zhao et al., 2011; Kar et al., 2013) introduced the technique of buffering to alleviate the above hurdle which reduces the periteration space and time complexity toO(Bd).However, to achieve good generalization performance, the size B needs to be sufficiently large which is typically of O( \u221a T ) if the size T of the finite training data is known. The work (Gao et al., 2013) requires to update the covariance matrix of the training data with the space and per-iteration complexity O(d2) which is inefficient for high-dimensional data.\nThe most recent work (Ying et al., 2016) reformulated the problem of AUC maximization with the least square loss as a stochastic saddle point problem (SPP). They proposed an online learning algorithm which conducts stochastic gradient descent/ascent on both the primal and dual variables. The convergence of such first-order primal-dual algorithms for solving stochastic SPPs is at most O( 1\u221a\nt ) as argued\nin (e.g. Chen et al. (2014)). This is, however, inferior to the optimal rate of O( 1t ), up to a logarithmic term, of SGDs for the accuracy as a performance measure (Rakhlin et al., 2012a; Shamir & Zhang, 2013). In addition, the work\n(Ying et al., 2016) only considered smooth penalty terms (i.e., the Frobenius norm).\nIn this paper, we propose a novel stochastic proximal algorithm for AUC maximization which we refer to as SPAM. The algorithm SPAM applies to general non-smooth regularization terms. In particular, we show under the assumption of strong convexity that SPAM can achieve a convergence rate of O( log tt ). The time and space complexities of our new algorithm are of one datum. To the best of our knowledge, this is the first stochastic (online) algorithm for AUC maximization with convergence rate of O( log tt ) while per-iteration and space complexities are of one datum O(d).\nThe paper is organized as follows. The next section introduces the problem of AUC maximization and our proposed algorithm. Section 3 establishes the convergence of our algorithm. We validate the performance of our algorithm in Section 4. The paper is concluded in Section 5."}, {"heading": "2. Formulation and Algorithm", "text": "For a linear scoring function g(x) = w>x, its AUC score, denoted by AUC(w), is the probability of a random positive sample ranking higher than a random negative sample (Hanley & McNeil, 1982; Cle\u0301menc\u0327on et al., 2008). To be specific, suppose z = (x, y) and z\u2032 = (x\u2032, y\u2032) are independently drawn from an unknown distribution \u03c1 on Z = X \u00d7 Y , where X \u2286 Rd is a bounded domain and Y = {\u00b11}. Then, the AUC score is given by\nAUC(w) = Pr(w>x \u2265 w>x\u2032|y = 1, y\u2032 = \u22121) = E [ I[w>(x\u2212x\u2032)\u22650] \u2223\u2223y = 1, y\u2032 = \u22121]. (1) In practice, one often replaces the indicator function I[\u00b7] by a convex surrogate loss \u03c6 : R \u2192 R+ which satisfies I[w>(x\u2212x\u2032)<0] \u2264 \u03c6(w>(x \u2212 x\u2032)). Common choices are the least square loss, \u03c6(s) = (1 \u2212 s)2, or the hinge loss, \u03c6(s) = (1 \u2212 s)+. Throughout the paper, we focus on the least square loss as the hinge loss is not statistically consistent (Gao & Zhou, 2015). To summarize, we consider the following regularization framework for AUC maximization:\nmin w\u2208Rd\n{ p(1\u2212 p)E [ (1\u2212w>(x\u2212 x\u2032))2 \u2223\u2223y = 1, y\u2032 = \u22121] + \u2126(w) } . (2)\nHere, p = Pr(y = 1) and \u2126(\u00b7) is a convex penalty term. The constant p(1 \u2212 p) is introduced for simplicity of formulation to cancel the denominator appeared in the conditional expectation E [ (1 \u2212 w>(x \u2212\nx\u2032))2 \u2223\u2223y = 1, y\u2032 = \u22121] = 1p(1\u2212p) \u222b\u222b (1 \u2212 w>(x \u2212 x\u2032))2I[y=1]I[y\u2032=\u22121]d\u03c1(x, y)d\u03c1(x\u2032, y\u2032). The paper (Ying\net al., 2016) considered the case when w is restricted to a bounded ball with radius R, i.e., \u2126(w) = 0 if \u2016w\u2016 \u2264 R and \u2126(w) = \u221e otherwise. Throughout this paper, we assume that \u2126 is strongly convex with parameter \u03b2 > 0, i.e., for any w,w\u2032 \u2208 Rd, \u2126(w) \u2265 \u2126(w\u2032)+\u3008\u2202\u2126(w\u2032),w\u2212w\u2032\u3009+ \u03b2 2 \u2016w \u2212w\n\u2032\u20162. Examples of such penalty terms include the Frobenius norm, \u2126(w) = \u03b2\u2016w\u20162, or elastic net (Zou & Hastie, 2005), \u2126(w) = \u03b2\u2016w\u20162 + \u03bd\u2016w\u20161, where \u03b2 and \u03bd are positive regularization parameters."}, {"heading": "2.1. Equivalent Formulation", "text": "We can establish a similar theorem for formulation. Here, the proof is generalized from (Ying et al., 2016) for the general regularization framework (2). The present proof is much simpler and more intuitive.\nTheorem 1. The AUC optimization (2) in the linear case is equivalent to\nmin w,a,b max \u03b1\u2208R\n{ E[F (w, a, b, \u03b1; z)] + \u2126(w) } , (3)\nwhere the expectation is with respect to z = (x, y), and F (w, a, b, \u03b1; z) = (1 \u2212 p)(w>x \u2212 a)2I[y=1] + p(w>x \u2212 b)2I[y=\u22121] + 2(1 + \u03b1)w>x(pI[y=\u22121] \u2212 (1 \u2212 p)I[y=1]) \u2212 p(1\u2212 p)\u03b12.\nProof. Specifically, the double integral mainly comes from the multiplication of two single integrals:\nE[(1\u2212w>(x\u2212 x\u2032))2|y = 1, y\u2032 = \u22121] = 1\u2212 2E[w>x|y = 1] + 2E[w>x\u2032|y\u2032 = \u22121] + (E[w>x|y = 1]\u2212 E[w>x\u2032|y\u2032 = \u22121])2\n+ Var[w>x|y = 1]) + Var[w>x\u2032|y\u2032 = \u22121]). (4)\nObserve the fact that\n(E[w>x|y = 1]\u2212 E[w>x\u2032|y\u2032 = \u22121])2 = max \u03b1 {\u2212\u03b12\n+ 2\u03b1(E[w>x\u2032|y\u2032 = \u22121]\u2212 E[w>x|y = 1])}. (5)\nIn addition,\nVar[w>x|y = 1] = min a E[(w>x\u2212 a)2|y = 1], (6)\nand\nVar[w>x\u2032|y\u2032 = \u22121] = min b E[(w>x\u2032\u2212b)2|y\u2032 = \u22121]. (7)\nIt is easy to see that the optima for (6), (7), and (5) are respectively achieved at\na(w) = w>E[x|y = 1], b(w) = w>E[x|y = \u22121], (8)\n\u03b1(w) = w>(E[x|y\u2032 = \u22121]\u2212 E[x|y = 1]). (9)\nAlgorithm 1 Stochastic Proximal AUC Maximization (SPAM)\nInput: Step sizes {\u03b7t > 0 : t \u2208 N} Initialize w1 \u2208 Rd. for t = 1 to T do\nReceive sample zt = (xt, yt) Compute a(wt), b(wt), and \u03b1(wt) according to (8) and (9). w\u0302t+1 = wt \u2212 \u03b7t\u22021F (wt, a(wt), b(wt), \u03b1(wt); zt) wt+1 = prox\u03b7t\u2126(w\u0302t+1)\nend for\nPutting the above observations together, one can see now that, for any w, there holds\np(1\u2212 p)E[(1\u2212w>(x\u2212 x\u2032))2|y = 1, y\u2032 = \u22121] = p(1\u2212 p) + min\na,b max \u03b1\nE[F (w, a, b, \u03b1; z)].\nThis completes the proof.\nThe problem (3) is a standard stochastic saddle point problem (see e.g. (Nemirovski et al., 2009)). It is easy to show that its objective function is convex with respect to w, a, and b and concave with respect to \u03b1. We later refer to w, a, and b as primal variables and \u03b1 as a dual variable."}, {"heading": "2.2. Proposed Algorithm and Interpretation", "text": "The algorithm proposed in (Ying et al., 2016) essentially performs stochastic gradient descent on the primal variables w, a, and b and stochastic gradient ascent on the dual variable \u03b1. The critical observation in this paper is that, for fixed w, the optima for a, b, and \u03b1 in saddle formulation (3) has the exact formulations as given by (8) and (9).\nThis motivates us to conduct stochastic gradient descent only on w, while a, b, and \u03b1 are then updated using equations (8) and (9), rather than doing stochastic gradient updates. More specifically, upon receiving data zt, we update w by\nwt+1 = wt \u2212 \u03b7t\u22021F (wt, a(wt), b(wt), \u03b1(wt); zt), (10)\nwhere \u22021F denotes the gradient with respect to the first argument and the \u03b7t\u2019s are the step sizes. To accommodate the possibly non-smooth penalty term \u2126(\u00b7), the next step is to perform a proximal mapping. Specifically, the proximal mapping associated with a convex function \u2126 : Rd \u2192 R is defined as\nprox\u03b7t\u2126(u) = arg min{ 1\n2 \u2016u\u2212w\u20162 + \u03b7t\u2126(w)}. (11)\nThe pseudo-code of the proposed algorithm is outlined in Algorithm 1. This new online algorithm has per-iteration\nand storage cost of one datum. In the algorithm, it is assumed that the probability of class 1, i.e., p = Pr(y = 1), and E(x|y = 1) and E(x|y = \u22121) are known. In practice, using a portion of the training data, one can efficiently estimate p by the proportion of samples of class 1, and the population means E(x|y = 1) and E(x|y = \u22121) by sample means.\nBefore we present the rigorous convergence rate of SPAM, let us briefly illustrate the intuition as to why it can be expected to achieve a faster rate ofO( 1t ) in contrast toO( 1\u221a t ) of SOLAM in (Ying et al., 2016). To see this, let us present a simple but critical lemma as follows. For this purpose, let f(w) = p(1 \u2212 p)E [ (1 \u2212w>(x \u2212 x\u2032))2\n\u2223\u2223y = 1, y\u2032 = \u22121] which is identical to mina,b max\u03b1 E[F (w, a, b, \u03b1; z)]. Lemma 1. Let wt be given by SPAM described in Algorithm 1. Then, we have that\n\u2202f(wt) = Ezt [\u22021F (wt, a(wt), b(wt), \u03b1(wt); zt)],\nwhere Ezt [\u00b7] denotes the expectation with respect to zt = (xt, yt).\nProof. Denote by \u2202iF the partial derivative of F with respect to the ith argument. Applying the chain rule gives\n\u2202wf(wt) = \u2202wEzt [F (wt, a(wt), b(wt), \u03b1(wt); zt)] = Ezt [ \u2202wF (wt, a(wt), b(wt), \u03b1(wt); zt) ] = Ezt [ \u22021F (wt, a(wt), b(wt), \u03b1(wt); zt)\n] + Ezt [ \u22022F (wt, a(wt), b(wt), \u03b1(w); zt) \u2202wa(wt)\n] + Ezt [ \u22023F (wt, a(wt), b(wt), \u03b1(wt); zt) \u2202wb(wt)\n] + Ezt [ \u22024F (wt, a(wt), b(wt), \u03b1(wt); zt)\u2202w\u03b1(wt) ] . (12)\nThe second inequality of interchanging differentiation and integration follows from the Leibniz\u2019s Integral rule since F (wt, a(wt), b(wt), \u03b1(w); zt) is quadratic and the input space X is a bounded domain. In the last equality, the fact that wt only depends on {z1, z2, . . . , zt\u22121} implies that Ezt [ \u22022F (wt, a(wt), b(wt), \u03b1(w); zt) \u2202wa(wt) ] =\n\u22022Ezt [ F (wt, a(wt), b(wt), \u03b1(w); zt) ] [E(x|y = 1)].\nSince a(wt) is the minimizer of mina,b max\u03b1 Ezt [F (wt, a, b, \u03b1; zt)], the first order optimality condition gives, for any b and \u03b1, that \u22022Ezt [ F (wt, a(wt), b, \u03b1; zt) ] = 0. Therefore we have\nthat \u22022Ezt [ F (wt, a(wt), b(wt), \u03b1(wt); zt) ] = 0. Hence,\nEzt [ \u22022F (wt, a(wt), b(wt), \u03b1(w); zt) \u2202wa(wt) ] = 0. Likewise, the third and fourth terms on the righthand side of (12) equal to zero. This completes the proof of the lemma.\nThe above lemma implies, conditioned on {z1, . . . , zt\u22121}, that \u22021F (wt, a(wt), b(wt), \u03b1(wt); zt) is an unbiased estimator of the true gradient \u2202wf(wt). This strongly indicates that SPAM will have a fast convergence rate similar to SGD algorithms (Rakhlin et al., 2012a; Shalev-Shwartz, 2012) for a strongly convex objective function. We will leverage this intuition to prove the fast convergence rate in the next section.\nMore related work: We should point out that our proposed algorithm has similar spirit to the online forward-backward splitting (Duchi & Singer, 2009) and stochastic proximal gradient methods (Rosasco et al., 2014). However, there are two main differences between our proposed algorithm and their algorithms. Firstly, these algorithms focused on the accuracy performance where the objective function is a single summation/integral over individual samples. Secondly, the convergence proofs in (Duchi & Singer, 2009; Rosasco et al., 2014) critically depend on the boundedness assumptions: the iterates and the stochastic gradients are uniformly bounded or the conditional variance of the stochastic gradient is bounded by the square norm of the true gradient plus a constant, which may not be true and is difficult to verify in practice. Our proof techniques for the convergence of SPAM do not need these boundedness assumptions as shown in the next section. Lastly, the very recent work (Palaniappan & Bach, 2016) developed an appealing stochastic primal-dual algorithm for saddle point problems with convergence rate of O( 1T ) which, as a by-product, can be applied to AUC maximization with least square loss. However, their saddle point formulation is different from (3) and the algorithm there needs to assume strong convexity on both the primal and dual variables. In addition, the algorithm has per-iteration complexityO(n+d) where n is the total number of training samples and d is the dimension of the data."}, {"heading": "3. Convergence Analysis", "text": "Before we present the convergence rate of SPAM, let us introduce some notations. Recall that f(w) = p(1 \u2212 p)E [ (1 \u2212 w>(x \u2212 x\u2032))2\n\u2223\u2223y = 1, y\u2032 = \u22121]. Let w\u2217 denote the optimal solution of formulation (2), i.e.,\nw\u2217 = arg min w\u2208Rd {f(w) + \u2126(w)}.\nDefine E[\u2016G(w\u2217; z)\u2212 \u2202f(w\u2217)\u20162] = \u03c32\u2217, (13)\nwhere, for notional simplicity, we denote G(w; z) = \u22021F (w, a(w), b(w), \u03b1(w); z). The convergence results are established based on the following two assumptions:\n\u2022 (A1) Assume that \u2126(\u00b7) is \u03b2-strongly convex.\n\u2022 (A2) There exists an M > 0 such that \u2016x\u2016 \u2264 M for any x \u2208 X .\nFurthermore, let C\u03b2,M := \u03b2128M4 , C\u0303\u03b2,M = \u03b2\n(1+ \u03b2 2\n128M4 )2\n,\nand C\u0304\u03b2,M = C\u0303\u03b2,MC\u03b2,M = 128M 4\u03b22\n(128M4+\u03b22)2 . We use the conventional notation that for any T \u2208 N, NT = {1, . . . , T}.\nThe proofs for Theorems 2 and 3 critically depend on the following lemma which clearly describes how \u2016wt \u2212w\u2217\u2016 evolves along time t.\nLemma 2. Under the assumptions of (A1) and (A2), let {wt : t \u2208 NT+1} be generated by SPAM. Then, the following statements hold true.\n(i) For any t \u2208 N there holds\nE[\u2016wt+1 \u2212w\u2217\u20162]\n\u2264 1 + 128M 4\u03b72t\n(1 + \u03b7t\u03b2)2 E[\u2016wt \u2212w\u2217\u20162] + 2\u03c32\u2217\u03b72t . (14)\n(ii) If, furthermore, 0 < \u03b7t \u2264 C\u03b2,M := \u03b2\n128M4 for any\nt \u2208 NT , then we have , for any t \u2208 NT ,\nE[\u2016wt+1 \u2212w\u2217\u20162] \u2264 ( 1\u2212 C\u0303\u03b2,M \u03b7t ) E[\u2016wt \u2212w\u2217\u20162] + 2\u03c32\u2217\u03b72t . (15)\nProof. Recall that w\u2217 is the optimal solution of (2). One can directly derive from the first-order optimality condition using subgradients that, for any \u03b7t > 0,\nw\u2217 = prox\u03b7t\u2126(w \u2217 \u2212 \u03b7t\u2202f(w\u2217)).\nThe above observation together with the definition of wt+1 in algorithm SPAM yields that\n\u2016wt+1 \u2212w\u2217\u20162\n= \u2016prox\u03b7t\u2126(w\u0302t+1)\u2212 prox\u03b7t\u2126(w \u2217 \u2212 \u03b7t\u2202f(w\u2217)\u20162. (16)\nNow since \u03b7t\u2126(w) is \u03b7t\u03b2-strongly convex due to (A1), then by Proposition 23.11 in (Bauschke & Combettes, 2011), prox\u03b7t\u2126(\u00b7) is (1 + \u03b7t\u03b2)-cocoercive, i.e., for any u and w, there holds \u3008u \u2212w, prox\u03b7t\u2126(u) \u2212 prox\u03b7t\u2126(w)\u3009 \u2265 (1 + \u03b7t\u03b2)\u2016prox\u03b7t\u2126(u)\u2212 prox\u03b7t\u2126(w)\u2016\n2. This, by CauchySchwartz inequality, implies that\n\u2016prox\u03b7t\u2126(u)\u2212 prox\u03b7t\u2126(w)\u2016 \u2264 1\n1 + \u03b7t\u03b2 \u2016u\u2212w\u2016.\nPutting this back into (16), we get\n\u2016wt+1 \u2212w\u2217\u20162\n= \u2016prox\u03b7t\u2126(w\u0302t+1)\u2212 prox\u03b7t\u2126(w \u2217 \u2212 \u03b7t\u2202f(w\u2217)\u20162 \u2264 1 (1 + \u03b7t\u03b2)2 \u2016w\u0302t+1 \u2212 (w\u2217 \u2212 \u03b7t\u2202f(w\u2217))\u20162 = 1\n(1 + \u03b7t\u03b2)2 \u2016(wt \u2212w\u2217)\u2212 \u03b7t(G(wt, zt)\u2212 \u2202f(w\u2217))\u20162,\nwhere in the last equality we recall the notation that G(wt; zt) = \u22021F (wt, a(wt), b(wt), \u03b1(wt); zt). Now taking the expectation of both sides of the above inequality, and expanding out the right hand side, we have\nE[\u2016wt+1 \u2212w\u2217\u20162] \u2264 1\n(1 + \u03b7t\u03b2)2\n( E[\u2016wt \u2212w\u2217\u20162]\n\u2212 2\u03b7tE[\u3008wt \u2212w\u2217, G(wt; zt)\u2212 \u2202f(w\u2217)\u3009] + \u03b72tE[\u2016G(wt; zt)\u2212 \u2202f(w\u2217)\u20162 ) . (17)\nWe first bound the middle term of the righthand side of (17). By Lemma 1, we know that\nE[\u3008wt \u2212w\u2217, G(wt; zt)\u2212 \u2202f(w\u2217)\u3009] = E[\u3008wt \u2212w\u2217,Ezt [G(wt; zt)]\u2212 \u2202f(w\u2217)\u3009] = E[\u3008wt \u2212w\u2217, \u2202f(wt)\u2212 \u2202f(w\u2217)\u3009] \u2265 0, (18)\nwhere the last inequality follows from the convexity of f .\nFor the last term on the righthand side of (17), we proceed as follows: E[\u2016G(wt; zt)\u2212\u2202f(w\u2217)\u20162] \u2264 2E[\u2016G(wt; zt)\u2212 G(w\u2217; zt)\u20162] + 2E[\u2016G(w\u2217; zt) \u2212 \u2202f(w\u2217)\u20162]. Note that G(wt; zt) is a linear function of wt. So by the assumption that \u2016xt\u2016 \u2264M , it is easy to see that\n\u2016G(wt; zt)\u2212G(w\u2217; zt)\u2016 \u2264 4M2(1\u2212 p)\u2016wt \u2212w\u2217\u2016I[yt=1] + 4M2p\u2016wt \u2212w\u2217\u2016I[yt=\u22121] + 4M2|p\u2212 I[yt=1]|\u2016wt \u2212w\n\u2217\u2016 \u2264 8M2\u2016wt \u2212w\u2217\u2016. (19)\nFurthermore, from (13), we have E[\u2016G(w\u2217; zt) \u2212 \u2202f(w\u2217)\u20162] = Ezt [\u2016G(w\u2217; zt)\u2212 \u2202f(w\u2217)\u20162] = \u03c32\u2217. Hence,\nE[\u2016G(wt; zt)\u2212\u2202f(w\u2217)\u20162] \u2264 2(8M2)2E[\u2016wt \u2212w\u2217\u20162] + 2\u03c32\u2217. (20)\nPutting together (17), (18) and (20), we get\nE[\u2016wt+1 \u2212w\u2217\u20162]\n\u2264 1 (1 + \u03b7t\u03b2)2\n( E[\u2016wt \u2212w\u2217\u20162]\n+ 2(8M2)2\u03b72tE[\u2016wt \u2212w\u2217\u20162] + 2\u03c32\u2217\u03b72t )\n\u2264 1 + 128M 4\u03b72t\n(1 + \u03b7t\u03b2)2 E[\u2016wt \u2212w\u2217\u20162] + 2\u03c32\u2217\u03b72t . (21)\nThis finishes part (i) of the lemma.\nFor the second part of the lemma, notice that \u03b7t \u2264 C\u03b2,M := \u03b2 128M4 . The coefficient in (21) can be rewritten as follows:\n1 + 128M4\u03b72t (1 + \u03b7t\u03b2)2\n= 1\u2212 ( 1\u2212 1 + 128M 4\u03b72t\n(1 + \u03b7t\u03b2)2 ) = 1\u2212 [2\u03b2 + \u03b2\n2\u03b7t \u2212 128M4\u03b7t]\u03b7t (1 + \u03b7t\u03b2)2 . (22)\nApplying the assumption that \u03b7t \u2264 \u03b2\n128M4 gives that\n[2\u03b2 + \u03b22\u03b7t \u2212 128M4\u03b7t] (1 + \u03b7t\u03b2)2 \u03b7t \u2265 \u03b2( 1 + \u03b2 2\n128M4 )2 \u03b7t. (23) In addition, notice that \u03b2128M4 \u2264 ( 1+ \u03b2 2 128M4 )2 \u03b2 . This implies the assumption \u03b7t \u2264 \u03b2128M4 guarantees that 1 \u2212 \u03b2(\n1+ \u03b2 2\n128M4 )2 \u03b7t \u2265 0. Combining together (22) with (23) yields the desired result in part (ii). This completes the proof of the lemma.\nThe following lemma is from (Smale & Yao, 2006) and will be used to prove Theorems 2 and 3. Lemma 3. For any 0 < \u03bd \u2264 1, 0 < \u03b1 < 1, t < T , and 0 < \u03b8 \u2264 1, the following estimations hold true.\n(i) \u2211T j=t+1 j \u2212\u03b1 \u2265 11\u2212\u03b1 [(T + 1) 1\u2212\u03b1 \u2212 (t+ 1)1\u2212\u03b1],\n(ii) \u2211T\u22121 t=1 1 t2\u03b1 exp { \u2212 \u03bd \u2211T j=t+1 j \u2212\u03b1 } \u2264 18\u03bdT\u03b1 +\n9T 1\u2212\u03b1 (1\u2212\u03b1)21\u2212\u03b1 exp{\u2212 \u03bd(1\u22122\u03b1\u22121) 1\u2212\u03b1 (T + 1) 1\u2212\u03b1},\n(iii) e\u2212cx \u2264 ( b ce )b x\u2212b for x > 0, c > 0 and b > 0.\nWe now present the convergence analysis. Theorem 2. Under the assumptions (A1), (A2), and choosing step sizes with some \u03b8 \u2208 (0, 1) in the form of { \u03b7t = C\u03b2,M t\u03b8 : t \u2208 N }\n, the algorithm SPAM achieves the following:\nE[\u2016wT+1 \u2212w\u2217\u20162] \u2264 [ exp ( C\u0304\u03b2,M\n1\u2212 \u03b8 )( \u03b8 C\u0304\u03b2,Me ) \u03b8 1\u2212\u03b8E[\u2016w1 \u2212w\u2217\u20162]\n+ 2\u03c32\u2217C 2 \u03b2,M ( 9 (1\u2212 \u03b8)21\u2212\u03b8 ( 1 C\u0304\u03b2,M (1\u2212 2\u03b8\u22121)e ) 1 1\u2212\u03b8\n+ 18 C\u0304\u03b2,M + 1 )] T\u2212\u03b8.\nProof. Denote rt = E[\u2016wt \u2212 w\u2217\u20162]. The choice of the step sizes \u03b7t = C\u03b2,M t\u03b8\nsatisfies the condition in Lemma 2, i.e. \u03b7t \u2264 C\u03b2,M . Recall that C\u03b2,M = \u03b2128M4 , C\u0303\u03b2,M =\n\u03b2\n(1+ \u03b2 2\n128M4 )2\n, and C\u0304\u03b2,M = C\u0303\u03b2,MC\u03b2,M which guarantees\nthat 1 \u2212 C\u0303\u03b2,M\u03b7t \u2265 1 \u2212 C\u0303\u03b2,MC\u03b2,M = 1 \u2212 C\u0304\u03b2,M \u2265 0 for any t \u2208 NT . Then, it is easy to see from (15) that, after T iterations, there holds\nrT+1 \u2264 r1 T\u220f k=1 ( 1\u2212 C\u0303\u03b2,M\u03b7k ) + 2\u03c32\u2217\nT\u22121\u2211 k=1 T\u220f i=k+1 ( 1\u2212 C\u0303\u03b2,M \u03b7i ) \u03b72k + 2\u03c3 2 \u2217\u03b7 2 T . (24)\nThe first term on the right hand side can be bounded using the fact that 1\u2212 x \u2264 exp(\u2212x) for all x \u2208 R, giving that\nr1 T\u220f k=1 ( 1\u2212 C\u0303\u03b2,M\u03b7k ) = r1 T\u220f k=1 ( 1\u2212 C\u0303\u03b2,MC\u03b2,M/k\u03b8 ) \u2264 r1 exp ( \u2212 C\u0304\u03b2,M\nT\u2211 k=1 1 k\u03b8 ) , (25)\nwhere C\u0304\u03b2,M = C\u0303\u03b2,MC\u03b2,M = 128M 4\u03b22\n(128M4+\u03b22)2 .Applying part (i) in Lemma 3 gives that\nr1 exp ( \u2212 C\u0304\u03b2,M T\u2211 k=1 1 k\u03b8 ) \u2264 r1 exp ( C\u0304\u03b2,M 1\u2212 \u03b8 [ 1\u2212 (T + 1)1\u2212\u03b8\n]) = r1 exp ( C\u0304\u03b2,M 1\u2212 \u03b8 ) exp ( \u2212 C\u0304\u03b2,M 1\u2212 \u03b8 (T + 1)1\u2212\u03b8 ) .\nApplying part (iii) in Lemma 3 with b = \u03b81\u2212\u03b8 , x = (T + 1)1\u2212\u03b8and c = C\u0304\u03b2,M1\u2212\u03b8 yields that\nexp ( \u2212 C\u0304\u03b2,M\n1\u2212 \u03b8 (T + 1)1\u2212\u03b8\n) \u2264 ( \u03b8\nC\u0304\u03b2,Me\n) \u03b8 1\u2212\u03b8\n(T + 1)\u2212\u03b8.\nPutting the above two inequalities back into (25), we have\nr1 T\u220f k=1 ( 1\u2212 C\u0303\u03b2,M\u03b7k ) \u2264 r1 exp ( C\u0304\u03b2,M 1\u2212 \u03b8 )( \u03b8 C\u0304\u03b2,Me ) \u03b8 1\u2212\u03b8 T\u2212\u03b8. (26)\nTo bound the second term on the righthand side of (24), we proceed again as in the first term:\nT\u22121\u2211 k=1 T\u220f i=k+1 ( 1\u2212 C\u0303\u03b2,M\u03b7i ) \u03b72k\n= C2\u03b2,M T\u22121\u2211 k=1 1 k2\u03b8 T\u220f i=k+1 ( 1\u2212 C\u0304\u03b2,M i\u03b8 )\n\u2264 C2\u03b2,M T\u22121\u2211 k=1 1 k2\u03b8 exp ( \u2212 C\u0304\u03b2,M T\u2211 i=k+1 1 i\u03b8 ) . (27)\nApplying Lemma 3 (ii) with \u03bd = C\u0304\u03b2,M and \u03b1 = \u03b8 gives that the above is bounded by T\u22121\u2211 k=1 1 k2\u03b8 exp ( \u2212 C\u0304\u03b2,M T\u2211 i=k+1 1 i\u03b8\n) \u2264 9T 1\u2212\u03b8\n(1\u2212 \u03b8)(21\u2212\u03b8) exp\n( \u2212 C\u0304\u03b2,M (1\u2212 2 \u03b8\u22121)\n1\u2212 \u03b8 (T + 1)1\u2212\u03b8 ) + 18\nC\u0304\u03b2,MT \u03b8 . (28)\nAnd again, applying Lemma 3 (iii) with b = 11\u2212\u03b8 , x = (T + 1)1\u2212\u03b8 and c = C\u0304\u03b2,M (1\u22122 \u03b8\u22121)\n1\u2212\u03b8 to (28) gives that\nexp ( \u2212 C\u0304\u03b2,M (1\u2212 2 \u03b8\u22121)\n1\u2212 \u03b8 (T + 1)1\u2212\u03b8 ) \u2264 ( 1 C\u0304\u03b2,M (1\u2212 2\u03b8\u22121)e ) 1 1\u2212\u03b8 (T + 1)\u22121. (29)\nPutting (28) and (29) back into (27), we have\n2\u03c32\u2217 T\u22121\u2211 k=1 T\u220f i=k+1 ( 1\u2212 C\u0303\u03b2,M \u03b7i ) \u03b72k\n\u2264 2\u03c32\u2217C2\u03b2,M [ 9 (1\u2212 \u03b8)21\u2212\u03b8 ( 1 C\u0304\u03b2,M (1\u2212 2\u03b8\u22121)e ) 1 1\u2212\u03b8\n+ 18\nC\u0304\u03b2,M\n] T\u2212\u03b8. (30)\nThe last term on the righthand side of (24) is straightforward: 2\u03c32\u2217\u03b7 2 T \u2264 2\u03c32\u2217C2\u03b2,MT\u2212\u03b8. This, in combination of (26) and (30), yields the desired result.\nThis theorem indicates the last output of SPAM achieves the convergence rate ofO(T\u2212\u03b8) with polynomial decaying step sizes in the form of \u03b7t = O(t\u2212\u03b8) for \u03b8 \u2208 (0, 1). For \u03b8 = 1, we can obtain the following result.\nTheorem 3. Under the assumptions of (A1), (A2), and choosing step sizes {\u03b7t = [C\u0303\u03b2,M (t + 1)]\u22121 : t \u2208 N}, the algorithm SPAM achieves the following:\nE[\u2016wT+1 \u2212w\u2217\u20162]\n\u2264 ( t0E[\u2016wt0 \u2212w\u2217\u20162] ) 1 T + 4\u03c32\u2217\nC\u03032\u03b2,M\nlog T\nT .\nwhere t0 = max ( 2, \u2308 1 + (128M 4+\u03b22)2\n128M4\u03b22\n\u2309) .\nProof. The condition that t \u2265 t0 guarantees the assumption in part (ii) of Lemma 2 that \u03b7t = [ C\u0303\u03b2,M (t+ 1) ]\u22121 \u2264 C\u03b2,M is satisfied. Now by letting rt = E[\u2016wt \u2212w\u2217\u20162] we have\nrt+1 \u2264 ( 1\u2212 C\u0303\u03b2,M \u03b7t ) rt + 2\u03c3 2 \u2217\u03b7 2 t . (31)\nThen, we have\nrT+1 \u2264 rt0 T\u220f\nk=t0\n( 1\u2212 C\u0303\u03b2,M\u03b7k ) + 2\u03c32\u2217\u03b7 2 T\n+ 2\u03c32\u2217 T\u22121\u2211 k=t0 T\u220f i=k+1 ( 1\u2212 C\u0303\u03b2,M\u03b7i ) \u03b72k. (32)\nThe first term on the right hand side of the above inequality can be estimated as follows: rt0 \u220fT k=t0 (1 \u2212 C\u0303\u03b2,M\u03b7k) =\nrt0 \u220fT k=t0 k k+1 = t0rt0 T+1 \u2264 t0rt0 T . For the second term on the righthand side of (32), there holds 2\u03c32\u2217\u03b7T =\n2\u03c32\u2217 C\u03032\u03b2,M (T+1) 2 \u2264 2\u03c3 2 \u2217 C\u03032\u03b2,MT . To bound the\nthird term on the righthand side of (32), we can do the following \u2211T\u22121 k=t0 \u220fT i=k+1(1 \u2212 C\u0303\u03b2,M\u03b7i)\u03b72k =\nC\u0303\u22122\u03b2,M \u2211T\u22121 k=t0 \u220fT\u22121 i=k+1 ( 1 \u2212 1i+1 ) 1 (k+1)2 = C\u0303\u22122\u03b2,M 1 T \u2211T\u22121 k=t0 1 k+1 \u2264 C\u0303 \u22122 \u03b2,M log(T\u22121)\u2212log t0 T \u2264 C\u0303\u22122\u03b2,M log T T . Putting all the above estimations together yields the desired result.\nThe convergence of SPAM proved in the above theorem shows that it can achieve O( log TT ). The convergence rate ofO( 1T ) could be obtained using averaging schemes developed by (Lacoste-Julien et al., 2012; Rakhlin et al., 2012b; Shamir & Zhang, 2013).\nThe term E[\u2016wt0 \u2212 w\u2217\u20162] can indeed be estimated as follows if \u03b7t = [C\u0303\u03b2,M (t + 1)]\u22121 for t \u2208 N. From part (i) of Lemma 2, we have, for any t \u2208 N, E[\u2016wt+1 \u2212 w\u2217\u20162] \u2264 1+128M 4\u03b72t (1+\u03b7t\u03b2)2\nE[\u2016wt \u2212 w\u2217\u20162] + 2\u03c32\u2217\u03b72t \u2264 (1 + 128M4\u03b72t )E[\u2016wt \u2212 w\u2217\u20162] + 2\u03c32\u2217\u03b7 2 t . Therefore, E[\u2016wt0 \u2212 w\u2217\u20162] \u2264 \u220ft0\u22121 k=1 (1 +\n128M4\u03b72k) + 2\u03c3 2 \u2217 \u2211t0\u22121 k=1 \u220ft0\u22121 j=k (1 + 128M\n4\u03b72j )\u03b7 2 k \u2264(\u220ft0\u22121\nk=1 (1+128M 4\u03b72k) )( 1+2\u03c32\u2217 \u2211t0\u22121 k=1 \u03b7 2 k ) .Notice that\u220ft0\u22121\nk=1 (1+128M 4\u03b72k) \u2264 exp\n( 128M4\nC\u03032\u03b2,M\n\u2211t0\u22121 k=1 (k+1) \u22122 ) \u2264\nexp ( 128M4\nC\u03032\u03b2,M ). and 2\u03c32\u2217\n\u2211t0\u22121 k=1 \u03b7 2 k =\n2\u03c32\u2217 C\u03032\u03b2,M\n\u2211t0\u22121 k=1 (k +\n1)\u22122 \u2264 2\u03c3 2 \u2217\nC\u03032\u03b2,M . Hence, one can have the following bound\ndepending on \u03b2 and M :\nE[\u2016wt0 \u2212w\u2217\u20162] \u2264 2\u03c32\u2217\nC\u03032\u03b2,M + exp (128M4 C\u03032\u03b2,M )."}, {"heading": "4. Experiments", "text": "In this section, we report the experimental evaluation of SPAM by comparing it against existing algorithms for AUC optimization.\nIn particular, we use SPAM-L2 to denote SPAM with the Frobenius norm, i.e., \u2126(w) = \u03b22 \u2016w\u2016\n2. The solution to the proximal step using the Frobenius norm is very straight forward. The other version, SPAM-NET, uses the elastic net norm (Zou & Hastie, 2005), i.e., \u2126(w) = \u03b22 \u2016w\u2016\n2 + \u03b21\u2016w\u20161. The proximal step can be written as\narg min w {1 2 \u2225\u2225\u2225\u2225w \u2212 w\u0302t+1\u03b7t\u03b2 + 1 \u2225\u2225\u2225\u22252 + \u03b7t\u03b21\u03b7t\u03b2 + 1\u2016w\u20161},\nfor which the optimal solution is the soft-thresholding operator (e.g. Parikh et al. (2014)).\nWe compare our algorithms with both batch and online AUC optimization algorithms. To ensure a fair comparison with (Ying et al., 2016), the algorithm SOLAM was modified to include the Frobenius-norm regularization term instead of the original bounded restriction on the norm of \u2016w\u2016. We also compare our algorithm against the one-pass AUC optimization algorithm (Gao et al., 2013) with the least square loss and the OAMseq and OAMgra algorithms (Zhao et al., 2011) with hinge loss. Lastly, we include the B-LS-SVM algorithm (Joachims, 2006), a batch learning algorithm for AUC maximization with least square loss.\nTable 1 summarizes the details of each of the data sets we used for comparison. All of these datasets are available to download from the LIBSVM (Chang & Lin, 2011) and UCI machine learning repository (Frank & Asuncion, 2010). It is worthy of noting that some of the datasets are multi-class. We converted them to binary data by randomly partitioning the data into two groups, where each group includes the same number of classes.\nWe used 80% of the data for training and the remaining 20% for testing. The results are based on 20 runs for each dataset for which we used to calculate the average AUC score and standard deviation. To determine the proper parameters for each dataset, we conduct 5-fold cross validation on the training sets to determine the parameter \u03b2 \u2208 10[\u22125:5] for SPAM-L2 and \u03b21 \u2208 10[\u22125:5] for SPAMNET. All experiments were conducted with MATLAB and the MATLAB codes for the compared methods were obtained from the authors.\nClassification performance on all of the data sets is summarized in Table 2. SPAM-L2 and SPAM-NET both achieve a similar performance as the other state of the art AUC maximization algorithms in both the online and batch settings. This validates the algorithms we proposed in this paper. The data set sector shows the advantage of using elastic net. Next, we compared the CPU running time of SPAM-\nL2 versus SOLAM and the OPAUC algorithm. We did not compare the running time of SPAM against OAM (Zhao et al., 2011) since it used hinge loss. It was observed that the running time is inferior to OPAUC as shown in (Gao et al., 2013) and to SOLAM (Ying et al., 2016).\nThe main advantage of SPAM is the running efficiency. As we pointed out in the introduction, it has a faster convergence rate of O( 1t ) than SOLAM\u2019s convergence rate of O( 1\u221a\nt ), and its per-iteration running time and space complexity are linear in data dimension. The running time performance against OPAUC and SOLAM is depicted in Figure 1 on splice, usps and a9a datasets. Theses results show that SPAM demonstrates a competitive performance while achieving a faster rate of performance."}, {"heading": "5. Conclusion", "text": "In this paper, we proposed a novel stochastic proximal algorithm (SPAM) for AUC maximization with general penalty terms. We showed that the algorithm can achieve a convergence rate of O(1/T ) up to a logarithmic term for\nstrongly convex objective functions while the space and per-iteration complexity are of one datum.\nThere are several directions for future work. Firstly, it would be very interesting to extend the ideas of this paper to design stochastic variance reduction algorithms (Johnson & Zhang, 2013) and stochastic primal-dual algorithms (Zhang & Xiao, 2017) for AUC maximization, which can achieve the linear convergence rate. Secondly, it remains unclear to us whether SPAM can achieve convergence rate O(1/T ) without strong convexity (e.g. SPAM-L2 with \u03b2 = 0). One possible approach is to adapt the proof techniques in (Bach & Moulines, 2013; Yang & Lin, 2015) to the setting of AUC maximization."}, {"heading": "Acknowledgement", "text": "Yiming Ying is supported by the Simons Foundation (#422504) and the 2016-2017 Presidential Innovation Fund for Research and Scholarship (PIFRS) program from SUNY Albany. Siwei Lyu is supported by the National Science Foundation (NSF, Grant IIS1537257)."}], "year": 2018, "references": [{"title": "Non-strongly-convex smooth stochastic approximation with convergence rate o (1/n)", "authors": ["F. Bach", "E. Moulines"], "venue": "In Advances in neural information processing systems,", "year": 2013}, {"title": "Convex analysis and monotone operator theory in Hilbert spaces, volume 408", "authors": ["H H Bauschke", "Combettes", "P L"], "year": 2011}, {"title": "Large scale online learning", "authors": ["L. Bottou", "Y.L. Cun"], "venue": "In Advances in neural information processing systems,", "year": 2004}, {"title": "The use of the area under the roc curve in the evaluation of machine learning algorithms", "authors": ["Bradley", "A P"], "venue": "Pattern recognition,", "year": 1997}, {"title": "Libsvm: a library for support vector machines", "authors": ["Chang", "C.-C", "Lin", "C.-J"], "venue": "ACM transactions on intelligent systems and technology (TIST),", "year": 2011}, {"title": "Optimal primal-dual methods for a class of saddle point problems", "authors": ["Y Chen", "G Lan", "Y. Ouyang"], "venue": "SIAM Journal on Optimization,", "year": 2014}, {"title": "Ranking and empirical minimization of u-statistics", "authors": ["S. Cl\u00e9men\u00e7on", "G. Lugosi", "N. Vayatis"], "venue": "The Annals of Statistics,", "year": 2008}, {"title": "Efficient online and batch learning using forward backward splitting", "authors": ["J Duchi", "Y. Singer"], "venue": "Journal of Machine Learning Research,", "year": 2009}, {"title": "Adaptive subgradient methods for online learning and stochastic optimization", "authors": ["J. Duchi", "E. Hazan", "Y. Singer"], "venue": "Journal of Machine Learning Research,", "year": 2011}, {"title": "The foundations of cost-sensitive learning", "authors": ["C. Elkan"], "venue": "In International joint conference on artificial intelligence,", "year": 2001}, {"title": "An introduction to roc analysis", "authors": ["T. Fawcett"], "venue": "Pattern recognition letters,", "year": 2006}, {"title": "Uci machine learning repository [http://archive", "authors": ["Frank", "Andrew", "Asuncion", "Arthur"], "venue": "ics. uci. edu/ml]. irvine, ca: University of california. School of information and computer science,", "year": 2010}, {"title": "One-pass auc optimization", "authors": ["W. Gao", "R. Jin", "S. Zhu", "Zhou", "Z.-H"], "venue": "In International Conference on Machine Learning,", "year": 2013}, {"title": "On the consistency of auc pairwise optimization", "authors": ["Gao", "Wei", "Zhou", "Zhi-Hua"], "venue": "In IJCAI, pp", "year": 2015}, {"title": "The meaning and use of the area under a receiver operating characteristic (roc", "authors": ["J.A. Hanley", "B.J. McNeil"], "venue": "curve. Radiology,", "year": 1982}, {"title": "Projection-free online learning", "authors": ["E. Hazan", "S. Kale"], "venue": "In Proceedings of the 29th International Coference on International Conference on Machine Learning,", "year": 2012}, {"title": "Optimising area under the roc curve using gradient descent", "authors": ["A Herschtal", "B. Raskutti"], "venue": "In Proceedings of the twenty-first international conference on Machine learning,", "year": 2004}, {"title": "A support vector method for multivariate performance measures", "authors": ["Joachims", "Thorsten"], "venue": "In Proceedings of the 22nd international conference on Machine learning,", "year": 2005}, {"title": "Training linear svms in linear time", "authors": ["Joachims", "Thorsten"], "venue": "Proceedings of the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,", "year": 2006}, {"title": "Accelerating stochastic gradient descent using predictive variance reduction", "authors": ["Johnson", "Rie", "Zhang", "Tong"], "venue": "In Advances in neural information processing systems,", "year": 2013}, {"title": "On the generalization ability of online learning algorithms for pairwise loss functions", "authors": ["P. Kar", "B. Sriperumbudur", "P. Jain", "H. Karnick"], "venue": "In International Conference on Machine Learning,", "year": 2013}, {"title": "Bipartite ranking through minimization of univariate loss", "authors": ["W Kotlowski", "K J Dembczynski", "E. Huellermeier"], "venue": "In Proceedings of the 28th International Conference on Machine Learning", "year": 2011}, {"title": "A simpler approach to obtaining an o (1/t) convergence rate for the projected stochastic subgradient method", "authors": ["Lacoste-Julien", "Simon", "Schmidt", "Mark", "Bach", "Francis"], "venue": "arXiv preprint arXiv:1212.2002,", "year": 2012}, {"title": "Non-asymptotic analysis of stochastic approximation algorithms for machine learning", "authors": ["Moulines", "Eric", "Bach", "Francis R"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2011}, {"title": "Robust stochastic approximation approach to stochastic programming", "authors": ["A. Nemirovski", "A. Juditsky", "G. Lan", "A. Shapiro"], "venue": "SIAM Journal on optimization,", "year": 2009}, {"title": "Simultaneous model selection and optimization through parameter-free stochastic learning", "authors": ["F. Orabona"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2014}, {"title": "Stochastic variance reduction methods for saddle-point problems", "authors": ["Palaniappan", "Balamurugan", "Bach", "Francis"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2016}, {"title": "Making gradient descent optimal for strongly convex stochastic optimization", "authors": ["A. Rakhlin", "O. Shamir", "K. Sridharan"], "venue": "In Proceedings of the 29th International Conference on Machine Learning", "year": 2012}, {"title": "Making gradient descent optimal for strongly convex stochastic optimization", "authors": ["A Rakhlin", "O Shamir", "K. Sridharan"], "venue": "In Proceedings of the 29th International Conference on Machine Learning,", "year": 2012}, {"title": "Optimizing auc with support vector machine", "authors": ["Rakotomamonjy", "Alain"], "venue": "In European Conference on Artificial Intelligence Workshop on ROC Curve and AI,", "year": 2004}, {"title": "A stochastic approximation method", "authors": ["H. Robbins", "S. Monro"], "venue": "The annals of mathematical statistics,", "year": 1951}, {"title": "Convergence of stochastic proximal gradient algorithm", "authors": ["Rosasco", "Lorenzo", "Villa", "Silvia", "V\u0169", "Bang C\u00f4ng"], "venue": "arXiv preprint arXiv:1403.5074,", "year": 2014}, {"title": "Pegasos: Primal estimated sub-gradient solver for svm", "authors": ["S. Shalev-Shwartz", "Y. Singer", "N. Srebro", "A. Cotter"], "venue": "Mathematical programming,", "year": 2011}, {"title": "Stochastic gradient descent for non-smooth optimization: Convergence results and optimal averaging schemes", "authors": ["O Shamir", "T. Zhang"], "venue": "In International Conference on Machine Learning,", "year": 2013}, {"title": "Online learning algorithms", "authors": ["S. Smale", "Y. Yao"], "venue": "Foundations of computational mathematics,", "year": 2006}, {"title": "Stochastic optimization for machine learning", "authors": ["N. Srebro", "A. Tewari"], "venue": "ICML Tutorial,", "year": 2010}, {"title": "Generalization bounds for online learning algorithms with pairwise loss functions", "authors": ["Y. Wang", "R. Khardon", "D. Pechyony", "R. Jones"], "venue": "In Conference on Learning Theory, pp", "year": 2012}, {"title": "Rsg: Beating subgradient method without smoothness and strong convexity", "authors": ["Yang", "Tianbao", "Lin", "Qihang"], "venue": "arXiv preprint arXiv:1512.03107,", "year": 2015}, {"title": "Stochastic online auc maximization", "authors": ["Y. Ying", "L. Wen", "S. Lyu"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2016}, {"title": "Smoothing multivariate performance measures", "authors": ["X. Zhang", "A. Saha", "Vishwanathan", "SVN"], "venue": "Journal of Machine Learning Research,", "year": 2012}, {"title": "Stochastic primal-dual coordinate method for regularized empirical risk minimization", "authors": ["Zhang", "Yuchen", "Xiao", "Lin"], "venue": "The Journal of Machine Learning Research,", "year": 2017}, {"title": "Online auc maximization", "authors": ["P. Zhao", "R. Jin", "T. Yang", "S.C. Hoi"], "venue": "In Proceedings of the 28th international conference on machine learning (ICML-11),", "year": 2011}, {"title": "Regularization and variable selection via the elastic net", "authors": ["H Zou", "T. Hastie"], "venue": "Journal of the Royal Statistical Society: Series B (Statistical Methodology),", "year": 2005}], "id": "SP:6a26831ad30d48bf9eeb15a097bba8558a6cfddd", "authors": [{"name": "Michael Natole Jr.", "affiliations": []}, {"name": "Yiming Ying", "affiliations": []}, {"name": "Siwei Lyu", "affiliations": []}], "abstractText": "Stochastic optimization algorithms such as stochastic gradient descent (SGD) update the model sequentially with cheap per-iteration costs, making them amenable for large-scale data analysis. Most of the existing studies focus on the classification accuracy. However, these can not be directly applied to the important problems of maximizing the Area under the ROC curve (AUC) in imbalanced classification and bipartite ranking. In this paper, we develop a novel stochastic proximal algorithm for AUC maximization which is referred to as SPAM. Compared with the previous literature, our algorithm SPAM applies to a non-smooth penalty function, and achieves a convergence rate of O( log t t ) for strongly convex functions while both space and per-iteration costs are of one datum.", "title": "Stochastic Proximal Algorithms for AUC Maximization"}