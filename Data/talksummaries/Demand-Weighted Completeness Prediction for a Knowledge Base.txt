0	198	Knowledge Bases (KBs) are widely used for representing information in a structured format.
1	34	Such KBs, including Wikidata (Vrandečić and Krötzsch, 2014), Google Knowledge Vault (Dong et al., 2014), and YAGO (Suchanek et al., 2007), often store information as facts in the form of triples, consisting of two entities and a relation between them.
5	16	This can be defined as the proportion of facts about an entity that are present in the KB as compared to an ideal KB which has every fact that can be known about that entity.
7	16	As of 2016, Wikidata knows the father of only 2% of all people in the KB (Galárraga et al., 2017).
11	13	For this work, we were interested in determining a KB’s completeness with respect to its query usage, which we term Demand-Weighted Completeness.
13	25	We define our task as follows: ‘Given an entity E in a KB, and query usage data of the KB, predict the distribution of relations that E must have in order for 95% of queries about E to be answered successfully.’
47	38	As the first clause queries for the hasPresident relation of the USA entity, we attribute this occurrence of hasPresident to the USA entity.
49	30	Since the distribution of relation usage is dominated by a few high-value relations (see Figure 6), we only consider relations required to satisfy 95% of queries.
50	15	Combining the two representation methods above, we aim to predict the relation distribution for a given entity (as in Figure 4) using the class membership for the entity (as in Figure 1).
51	38	This provides the expected usage profile of an entity, potentially before it has seen any usage.
59	36	We then group entities by class signature, so entities with identical class membership are grouped together.
61	24	In our case, this usage data is a random subset of query traffic against the KB taken from a specific period of time.
73	24	Using the normalized relation distribution for each class signature, we trained a least-squares linear regression model to predict the relation distribution from a binary vector of classes.
74	69	This model has (n×m) parameters, where n is the number of input classes and m is the number of relations.
75	45	We implemented our linear regression model using Scikit-learn toolkit (Pedregosa et al., 2011).
83	68	This rewards a correctly predicted relation without focusing on the proportion predicted for that relation, and is sufficient to define a set of important relations for a class sig- nature.
89	16	We also evaluated the models using the Weighted Jaccard index and Intersection methods, but weighting by usage counts for each signature.
90	14	This metric rewards the models more for correctly predicting relation distributions for common class signatures in the usage data.
95	29	Therefore we also evaluated a neural model against future usage data to measure how elapsed time affected model performance.
96	39	The datasets T1, T2, and T3 each contain 3 datasets (of similar size to D1small, D2medium, and D1large), and were created using usage data from time periods with a fixed offset, t. The base set was created at time t0, T1 at time t0 + t, T2 at time t0 + 2t, and T3 at time t0+3t.
97	23	A time interval was chosen that reflected the known variability of the usage data, such that we would expect the usage to not be the same.
108	16	From this we might expect the performance of the model to be invariant with the amount of data.
117	20	This gives more usage-focused evaluation, emphasizing the non-uniform usage of different class signatures.
120	26	Table 4 gives measurements of the intersection metric.
121	14	These show a similar trend to the Jaccard scores, with lower absolute values from the stricter evaluation metric.
122	29	Although the Jaccard measure shows correct relation set prediction with a precision of 0.700, predicting the proportions for those relations accurately remains a difficult problem.
127	67	This suggests that a model trained on usage data from one period of time will have significant predictive power on future datasets.
140	36	We have introduced the notion of DemandWeighted Completeness as a way of determining a KB’s suitability by employing usage data.
141	13	We have demonstrated a method to predict the distribution of relations needed in a KB for entities of a given class signature, and have compared three different models for predicting these distributions.
144	53	We would also like to investigate Good-Turing frequency estimation (Good, 1953).
