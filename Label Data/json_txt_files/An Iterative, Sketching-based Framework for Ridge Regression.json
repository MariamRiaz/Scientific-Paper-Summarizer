{"sections": [{"heading": "1. Introduction", "text": "In statistics and machine learning, ridge regression (Gunst & Mason, 1977; Hoerl & Kennard, 1970) (also known as Tikhonov regularization or weight decay) is a variant of regularized least squares problems where the choice of the penalty function is the squared `2-norm. Formally, let A \u2208 Rn\u00d7d be the design matrix and let b \u2208 Rn be the response vector. Then, the linear algebraic formulation of the ridge regression problem is as follows:\nZ\u2217 = min x\u2208Rd\n{ \u2016Ax\u2212 b\u201622 + \u03bb\u2016x\u201622 } , (1)\nwhere \u03bb > 0 is the regularization parameter. There are two fundamental motivations underlying the use of ridge regres-\n1Department of Statistics, Purdue University, West Lafayette, IN 2Department of Computer Science, Purdue University, West Lafayette, IN. Correspondence to: Agniva Chowdhury <chowdhu5@purdue.edu>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\nsion. First, when d n, i.e., the number of predictor variables d greatly exceeds the number of observations n, fitting the full model without regularization (i.e., setting \u03bb to zero) will result in large prediction intervals and a non-unique regression estimator. Second, if the design matrix A is ill-conditioned, solving the standard least-squares problem without regularization would depend on (ATA)\u22121. This inversion would be problematic if ATA were singular or nearly singular and thus adding even a little noise to the elements of A could result in large changes in (ATA)\u22121. Due to these two considerations, solving standard least-squares problems without regularization may provide a good fit to the training data but may not generalize well to test data.\nRidge regression abandons the requirement of an unbiased estimator in order to address the aforementioned problems. At the cost of introducing bias, ridge regression reduces the variance and thus might reduce the overall mean squared error (MSE). The minimizer of eqn. (1) is\nx\u2217 = ( ATA + \u03bbId )\u22121 ATb, (2)\nor, equivalently (see Saunders et al. (1998) and Lemma 9 in Appendix A),\nx\u2217 = AT ( AAT + \u03bbIn )\u22121 b. (3)\nBoth formulations work for any \u03bb > 0 for either underconstrained or over-constrained ridge regression problems, regardless of the rank of the design matrix A. It is easy to see that x\u2217 can be computed in time\nO(ndmin{n, d}+ min{n3, d3}) = O(ndmin{n, d}).\nIn our work, we will focus on design matrices A \u2208 Rn\u00d7d with d n, which is the most common setting for ridge regression. For simplicity of exposition, we will assume that the rank of A is equal to n.1 In the context of ridge regression, a much more important quantity than the rank of the design matrix is the effective degrees of freedom:\nd\u03bb = n\u2211 i=1 \u03c32i \u03c32i + \u03bb \u2264 n, (4)\nwhere \u03c3i are the singular values of A.\n1Our results can be slightly improved to depend on the rank \u03c1 of the matrix A instead of n.\nThe recent flurry of activity on Randomized Linear Algebra (RLA) (Drineas & Mahoney, 2016) and the widespread use of sketching as a tool for matrix computations (Woodruff, 2014), resulted in many novel results for ridge regression. In Section 1.2 we discuss relevant prior work."}, {"heading": "1.1. Our Contributions", "text": "We present a novel iterative algorithm (Algorithm 1) for sketched ridge regression and two simple sketching-based structural conditions under which Algorithm 1 guarantees highly accurate approximations to the optimal solution x\u2217. More precisely, Algorithm 1 guarantees that, as long as a simple structural constraint is satisfied, the resulting approximate solution vector x\u0302\u2217 satisfies (after t iterations)\n\u2016x\u2217 \u2212 x\u0302\u2217\u20162 \u2264 \u03b5t\u2016x\u2217\u20162. (5)\nPrior to discussing the aforementioned constraint, we note that error guarantees of the above form are highly desirable. Indeed, beyond being a relative error guarantee, the dependency on \u03b5 drops exponentially fast as the number of iterations increases. It is easy to see that by setting \u03b5t = \u03b5\u2032, O(ln(1/\u03b5\u2032)) iterations would suffice to provide a relative error guarantee with accuracy parameter \u03b5\u2032. This means that converging to, say, ten decimal digits of accuracy would necessitate only a constant number of iterations. See Section 1.2 for a comparison of this bound with prior work.\nLet V \u2208 Rd\u00d7n be the matrix of right singular vectors of A; recall that A has rank n. For eqn. (5) to hold, a sketching matrix S \u2208 Rd\u00d7s is to be constructed such that (for an appropriate choice of the sketching dimension s d)\n\u2016VTSSTV \u2212 In\u20162 \u2264 \u03b5\n2 . (6)\nWe note that the constraint of eqn. (6) has been the topic of intense research in the RLA literature; this is precisely the reason why we use eqn. (6) as the building block in our analysis. Indeed, assuming that n d, one can use the (exact or approximate) column leverage scores (Mahoney & Drineas, 2009; Mahoney, 2011) of A to satisfy the aforementioned constraint, in which case S is a samplingand-rescaling matrix. Perhaps more interestingly, a variety of oblivious sketching matrix constructions for S can be used to satisfy eqn. (6). We discuss various constructions for S in Section 2.1.\nOne deficiency of the structural constraint of eqn. (6) is that all known constructions for S that satisfy the constraint need a number of columns s that is proportional to n. As a result, the running time of any algorithm that computes the sketch AS is also proportional to n. It would be much better to design algorithms whose running time depends on the degrees of freedom d\u03bb, which is upper bounded by n, but could be significantly smaller depending on the distribution of the singular values and the choice of \u03bb.\nTowards that end, we analyze Algorithm 1 under a second structural constraint. We define a diagonal matrix \u03a3\u03bb \u2208 Rn\u00d7n whose i-th diagonal entry is given by\n(\u03a3\u03bb)ii =\n\u221a \u03c32i\n\u03c32i + \u03bb , i = 1, . . . , n. (7)\nNotice that \u2016\u03a3\u03bb\u20162F = d\u03bb. Our second structural condition is given by\n\u2016\u03a3\u03bbVTSSTV\u03a3\u03bb \u2212\u03a32\u03bb\u20162 \u2264 \u03b5\n4 \u221a 2 . (8)\nSimilarly to the constraint of eqn. (6), the constraint of eqn. (8) can also be satisfied by, for example, sampling with respect to the ridge leverage scores of Alaoui & Mahoney (2015); Cohen et al. (2017) or by oblivious sketching matrix constructions for S. The difference is that, instead of having the column size s of the matrix S depend on n, it now depends on d\u03bb, which could be considerably smaller. Indeed, it follows that by sampling-and-rescaling O(d\u03bb ln d\u03bb) predictor variables from the design matrix A (using either exact or approximate ridge leverage scores (Alaoui & Mahoney, 2015; Cohen et al., 2017) we can satisfy the constraint of eqn. (8). Similarly, oblivious sketching matrix constructions for S can be used to satisfy eqn. (8). We discuss constructions for S in Section 2.1.\nHowever, this improved dependency on d\u03bb instead of n comes with a mild loss in accuracy. For simplicity, we only state a result when \u03bb satisfies \u03c32k+1 \u2264 \u03bb \u2264 \u03c32k for some integer k, 1 \u2264 k \u2264 n.2 In words, \u03bb can be thought of as \u201cregularizing\u201d the bottom n\u2212k singular values of the design matrix A, since it dominates them. In this case, we prove that the approximation x\u0302\u2217 returned by Algorithm 1 satisfies\n\u2016x\u2217 \u2212 x\u0302\u2217\u20162 \u2264 \u03b5t\n2\n( \u2016x\u2217\u20162 +\n1\u221a 2\u03bb \u2225\u2225UTk,\u22a5b\u2225\u22252) . (9) Here Uk,\u22a5 \u2208 Rn\u00d7(n\u2212k) denotes the matrix of the bottom n \u2212 k left singular vectors of the design matrix A. In words, we achieve an additive-relative error approximation, where the additive error part depends on the norm of the \u201cpiece\u201d of the response vector b that lies on the regularized component of the design matrix A. As this piece grows, the quality of the approximation worsens. The error decreases exponentially fast with the number of iterations.\nAnother contribution of our work is Theorem 4, which proves that the mean-square-error (MSE) of the approximate solution x\u0302\u2217 is a relative error approximation to the MSE of x\u2217, under the structural assumptions of eqns. (6) or (8), even after a single iteration.\n2The bound of eqn. (9) can be easily generalized to hold when c1\u03c3 2 k+1 \u2264 \u03bb \u2264 c2\u03c32k for some constants c1, c2 > 0. For simplicity of exposition, we assume that both c1 and c2 equal one.\nTo the best of our knowledge, our bounds are a first attempt to provide general structural results that guarantee highquality approximations to the optimal solution vector of ridge regression. Our first structural result can be satisfied by sampling with respect to the leverage scores or by the use of oblivious sketching matrices whose size depends on the rank of the design matrix and guarantees relative error approximations. Our second structural result presents the first accuracy analysis for ridge regression when the ridge leverage scores are used to sample predictor variables. Interestingly, the ridge leverage scores have been used in a number of applications involving matrix approximation, cost-preserving projections, clustering, etc. (Cohen et al., 2017), but their performance in the context of ridge regression has not been analyzed in prior work. Our work here argues that the second structural condition can be satisfied by sampling with respect to the ridge leverage scores. The number of predictor variables to be sampled depends on the degrees of freedom of the ridge-regression problem rather than the dimensions of the design matrix, and results in a relative-additive error guarantee."}, {"heading": "1.2. Prior Work", "text": "In this section, we discuss our contributions in the context of the large and ever-growing body of prior work on sketching-based algorithms for regression and ridge regression. The work more closely related to ours is Chen et al. (2015), which (in our notation) returns an approximation x\u0302\u2217 to x\u2217 that satisfies (with high probability) a relative error guarantee of the form\n\u2016x\u2217 \u2212 x\u0302\u2217\u20162 \u2264 \u03b5\u2016x\u2217\u20162.\nThe running time of the proposed approach is O(nnz(A) + \u03b5\u22122n3 ln(n/\u03b5)). The proposed approach is also based on sketching A using RLA tools such as the count-min sketch of Clarkson & Woodruff (2013) and the sub-sampled Randomized Hadamard Transform of Ailon & Chazelle (2009); Sarlo\u0301s (2006); Drineas et al. (2011). Compared to our work, notice that their dependency on \u03b5 is exponentially higher: our approach has a running time that grows with ln(1/\u03b5) whereas the above bound grows proportionally to 1/\u03b52. Additionally, our analysis can be made to depend on the degrees of freedom of the ridge-regression problem (see Theorem 2 and Section 2.1). Finally, we complement the bounds on the MSE for the response vector presented in Theorem 6 of Chen et al. (2015) with a relative-error guarantee on the MSE of the solution vector (see Theorem 4). We should also mention that prior to Chen et al. (2015); Lu et al. (2013) proposed a fast approximation algorithm for the computation of the kernel matrix using the sub-sampled randomized Hadamard transformation (SRHT).\nRecently, Wang et al. (2017) presented many results on ridge-regression problems assuming n d. In this setting,\nthe main motivation for ridge regression is to deal with the potential ill-conditioning of the design matrix A. Wang et al. (2017) presented sketching-based approaches that guarantee relative error approximations to the value of the objective Z\u2217, as opposed to the actual solution vector. Our approach and analysis is quite different and is applicable where d n; the results of Wang et al. (2017) do not generalize to this setting. However, recent work by Avron et al. (2017a;b) also focused on d n: for example, Theorem 17 of Avron et al. (2017b) presents structural conditions under which the value of the objective Z\u2217 can be estimated up to relative error accuracy, but no bounds are presented for the approximate solution vector. This last result seems to necessitate two structural conditions: the first one is identical to the condition of eqn. (6), but the second one is on the spectral norm of an approximate matrix product that is not needed in our analysis.\nOur work was partially motivated by Pilanci & Wainwright (2016), where an iterative algorithm (the so-called Iterative Hessian Sketch) was presented for standard (i.e., \u03bb = 0), over-constrained (n d) regression problems. Indeed, the authors provide strong motivation that clarifies the need for algorithms for regression problems whose running times depends on ln(1/\u03b5) in order to achieve \u03b5-relative-error approximations. We emphasize that the transition from standard to regularized regression problems as well as from the overto the under-constrained case is far from trivial. Indeed, algorithms and structural results for over-constrained regression problems date back to 2006 (Drineas et al., 2006b), whereas the analogous results for ridge-regression problems appeared after 2015. Similarly, the only result that we know for under-constrained regression problems (\u03bb = 0, n d) appeared in Section 6.2 of Drineas et al. (2012).\nAnother line of research that motivated our approach was the recent introduction of ridge leverage scores (Alaoui & Mahoney, 2015; Cohen et al., 2017). Indeed, our Theorem 2 presents a structural result that can be satisfied (with high probability) by sampling columns of A with probabilities proportional to (exact or approximate) ridge leverage scores (see Section 2.1). The number of sampled predictor variables (columns of A) is proportional to O(d\u03bb ln d\u03bb). To the best of our knowledge, this is the first result showing a strong accuracy guarantee for ridge regression problems when the ridge leverage scores are used to sample predictor variables, in one or more iterations. We also note a recent application of ridge leverage scores (Calandriello et al., 2017a;b) where the authors presented a row sampling algorithm in order to construct a kernel sketch which is eventually used in a second-order gradient-based method for online kernel convex optimization.\nIn yet another relevant line of work, much research recently focused on the computation and inversion of the kernel ma-\ntrix AAT (or ATA). A number of recent papers have considered the problem of fast kernel approximation for large datasets (Zhang et al., 2015; Avron et al., 2017b; Musco & Musco, 2017; Calandriello et al., 2017c; Wang et al., 2017). However, direct comparison of the bounds presented in the aforementioned papers and our work is not straightforward, since our objective (accuracy of the approximate solution vector) is different than the objective of the above papers. In this context, there are also several recent works (Cutajar et al., 2016; Rudi et al., 2017; Ma & Belkin, 2017) that considered preconditioned gradient-based methods to develop fast and scalable approaches for approximating kernels.\nFinally, Gonen et al. (2016) presented a sketching-based preconditioned SVRG approach for ridge regression problems that converges to the optimal solution in a number of iterations that depends on ln(1/\u03b5), returning an \u03b5-relative-error approximation to the objective value Z\u2217. However, no such bounds were presented for the actual solution vector."}, {"heading": "1.3. Notation", "text": "We use a,b, . . . to denote vectors and A,B, . . . to denote matrices. For a matrix A, A\u2217i (Ai\u2217) denotes the i-th column (row) of A as a column (row) vector. For vector a, \u2016a\u20162 denotes its Euclidean norm; for a matrix A, \u2016A\u20162 denotes its spectral norm and \u2016A\u2016F denotes its Frobenius norm. We refer the reader to Golub & Van Loan (1996) for properties of norms that will be quite useful in our work. For a matrix A \u2208 Rn\u00d7d with d > n of rank n, its (thin) Singular Value Decomposition (SVD) is equal to the product U\u03a3VT, with U \u2208 Rn\u00d7n (the matrix of the left singular vectors), V \u2208 Rd\u00d7n (the matrix of the right singular vectors), and \u03a3 \u2208 Rn\u00d7n a diagonal matrix whose diagonal entries are the singular values of A. Computation of the SVD takes, in this setting, O(n2d) time. We will use the notation Uk \u2208 Rn\u00d7k to denote the matrix of the top k left singular vectors and Uk,\u22a5 \u2208 Rn\u00d7(n\u2212k) to denote the matrix of the bottom n\u2212k left singular vectors. We will often use \u03c3i to denote the singular values of a matrix implied by context. Additional notation will be introduced as needed."}, {"heading": "2. Iterative, Sketching-based Ridge Regression", "text": "Algorithm 1 iteratively computes a sequence of vectors x\u0303(j) \u2208 Rd for j = 1, . . . , t and returns the estimator x\u0302\u2217 =\u2211t j=1 x\u0303 (j) to the true solution vector x\u2217 of eqn. (3).\nIn words, Algorithm 1 is quite simple: roughly, it solves ridge regression problems with the residual vector b(j) (i.e., the part of the vector b(j\u22121) that was not captured in the previous iteration) as the new response vector for i = 1, . . . , t. Our main quality-of-approximation results (Theorems 1 and 2) argue that returning the sum of those intermediate solutions results in a highly accurate approximation\nAlgorithm 1 Iterative, sketching-based ridge regression\nInput: A \u2208 Rn\u00d7d, b \u2208 Rn, \u03bb > 0; number of iterations t > 0; sketching matrix S \u2208 Rd\u00d7s; Initialize: b(0) \u2190 b, x\u0303(0) \u2190 0d, y(0) \u2190 0n; for j = 1 to t do\nb(j) \u2190 b(j\u22121) \u2212 \u03bby(j\u22121) \u2212Ax\u0303(j\u22121); y(j) \u2190 (ASSTAT + \u03bbIn)\u22121b(j); x\u0303(j) \u2190 ATy(j);\nend for Output: Approximate solution vector x\u0302\u2217 = \u2211t j=1 x\u0303 (j);\nto the optimal solution vector x\u2217. Theorem 1 presents a quality-of-approximation result under the assumption that the sketching matrix S satisfies the constraint of eqn. (6).\nTheorem 1. Let A \u2208 Rn\u00d7d, b \u2208 Rn, and \u03bb > 0 be the inputs of the ridge regression problem. Assume that for some constant 0 < \u03b5 < 1, the sketching matrix S \u2208 Rd\u00d7s satisfies the constraint of eqn. (6). Then, the estimator x\u0302\u2217 returned by Algorithm 1 satisfies\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 \u2264 \u03b5 t \u2016x\u2217\u20162 .\nHere x\u2217 is the true solution of the ridge regression problem.\nSimilarly, Theorem 2 presents a quality-of-approximation result under the assumption that the sketching matrix S satisfies the constraint of eqn. (8).\nTheorem 2. Let A \u2208 Rn\u00d7d, b \u2208 Rn, and \u03bb > 0 be the inputs of the ridge regression problem. Assume that for some constant 0 < \u03b5 < 1, the sketching matrix S \u2208 Rd\u00d7s satisfies the constraint of eqn. (8). Then, the estimator x\u0302\u2217 returned by Algorithm 1 satisfies\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 \u2264 \u03b5t\n2\n( \u2016x\u2217\u20162 +\n1\u221a 2\u03bb \u2225\u2225UTk,\u22a5b\u2225\u22252) . Here, k \u2208 {1, . . . , n} is an integer with \u03c32k+1 \u2264 \u03bb \u2264 \u03c32k and x\u2217 is the true solution of the ridge regression problem.\nAs we have already discussed, the bound of Theorem 2 is weaker. However, the structural condition of eqn. (8) on which the above theorem depends, can be satisfied with a sketching matrix S whose dimensionality depends only on the degrees of freedom d\u03bb of the underlying ridge regression problem, as opposed to the dimensions of the design matrix. This could result in significant savings (see Section 2.1).\nOur algorithm can also be viewed as a preconditioned Richardson iteration (see e.g., Chapter 2 of Quarteroni & Valli (1994)) for solving the linear system (AAT+\u03bbIn)y = b with pre-conditioner P\u22121 = (ASSTAT + \u03bbIn)\u22121 and step-size equal to one. More precisely, Algorithm 1 can be formulated as\ny\u0304(j) = y\u0304(j\u22121) + P\u22121 ( b\u2212 (AAT + \u03bbIn)y\u0304(j\u22121) ) ,\nwhere y\u0304(j) = \u2211j k=1 y\n(k) (see Appendix D for the derivation). Further, subject to the structural conditions of eqns. (6) and (8), it can be shown that y\u0304(t) converges to the true solution y\u2217 = (AAT + \u03bbIn)\u22121b in O(ln(1/\u03b5)) steps (see Appendix D) and, consequently, the output of Algorithm 1 (which can be expressed as x\u0302\u2217 = ATy\u0304(t)) also converges to x\u2217 = AT(AAT + \u03bbIn)\u22121b, the true solution of the ridge regression problem. Our analysis offers several advantages over preconditioned Richardson iteration. In our case, P\u22121(AAT + \u03bbIn) is not symmetric positive definite which, according to existing literature, implies that the convergence of Richardson\u2019s method is monotone in terms of the energy-norm induced by AAT + \u03bbIn, but not the Euclidean norm (see eqn. (2.4.17) in Quarteroni & Valli (1994)). Additionally, standard convergence analysis of the Richardson iteration is with respect to y\u0304(t), whereas our vector of interest is x\u0302\u2217 (which is y\u0304(t) premultiplied by AT). The equality \u2016y\u0304(t) \u2212 y\u2217\u20162 = \u2016x\u0302\u2217 \u2212 x\u2217\u20162 holds if A has orthonormal rows, which is not true in general.\nWe now discuss the running time of Algorithm 1. First, we need to compute Ax\u0303(j\u22121) which takes time O(nnz(A)). Next, computing the sketch AS \u2208 Rn\u00d7s takes T (A,S) time and depends on the particular construction of S (see Section 2.1). Then, in order to invert the matrix \u0398 = ASSTAT + \u03bbIn it suffices to compute the SVD of the matrix AS. Notice that given the singular values of AS we can compute the singular values of \u0398; also note that the left and right singular vectors of \u0398 are the same as the left singular vectors of AS. Interestingly, we do not need to compute \u0398\u22121: we can store it implicitly by storing its left (and right) singular vectors U\u0398 and its singular values \u03a3\u0398. Then, we can compute all necessary matrix-vector products using this implicit representation of \u0398\u22121. Thus, inverting \u0398 takes O(sn2) time. Updating the vectors b(j), y(j), and x\u0303(j) is dominated by the aforementioned running times, as all updates amount to just matrix-vector products. Thus, summing over all t iterations, the running time of Algorithm 1 is given by\nO(t \u00b7 nnz(A)) +O(sn2) + T (A,S). (10)\nWe conclude this section by noting that our results remain valid when different sampling matrices Sj are used in each iteration j = 1, . . . , t, as long as they satisfy the constraints of eqns. (6) or (8). As a matter of fact, the sketching matrices Sj do not even need to have the same number of columns. See Section 5 for an interesting open problem in this setting."}, {"heading": "2.1. Satisfying the Conditions of Eqns. (6) or (8)", "text": "The conditions of eqns. (6) and (8) essentially boil down to randomized, approximate matrix multiplication (Drineas & Kannan, 2001; Drineas et al., 2006a), a task that has received much attention in the RLA community. We start by discussing sketching-based approaches: a particularly useful\nresult for our purposes appeared in Cohen et al. (2016). Using our notation, Cohen et al. (2016) proved that for X \u2208 Rd\u00d7n and for a (suitably constructed) sketching matrix S \u2208 Rd\u00d7s, with probability at least 1\u2212 \u03b4,\n\u2225\u2225XTSSTX\u2212XTX\u2225\u2225 2 \u2264 \u03b5 ( \u2016X\u201622 + \u2016X\u20162F r ) , (11)\nfor any arbitrary r \u2265 1. The above bound holds for a very broad family of constructions for the sketching matrix S (see Cohen et al. (2016) for details). In particular, Cohen et al. (2016) demonstrated a construction for S with s = O(r/\u03b52) columns such that, for any n \u00d7 d matrix A, the product AS can be computed in timeO(nnz(A))+O\u0303((r3+ r2n)/\u03b5\u03b3) for some constant \u03b3. Thus, starting with eqn. (6) and using this particular construction for S, let X = V and note that \u2016V\u20162F = n and \u2016V\u20162 = 1. Setting r = n, eqn. (11) implies that\u2225\u2225VTSSTV \u2212 In\u2225\u22252 \u2264 2 \u03b5. In this case, the running time of the sketch computation is equal to T (A,S) = O(nnz(A)) + O\u0303(n3/\u03b5\u03b3). The running time of the overall algorithm follows from eqn. (10) and our choices for s and r:\nO(t \u00b7 nnz(A)) + O\u0303(n3/\u03b5max{2,\u03b3}).\nThe failure probability (hidden in the polylogarithmic terms) can be easily controlled using a union bound. Finally, a simple change of variables (using \u03b5/4 instead of \u03b5) suffices to satisfy the structural condition of eqn. (6) without changing the above running time.\nSimilarly, starting with eqn. (8), let X = V\u03a3\u03bb and note that \u2016V\u03a3\u03bb\u20162F = d\u03bb and \u2016V\u03a3\u03bb\u20162 \u2264 1. Setting r = d\u03bb, eqn. (11) implies that \u2225\u2225\u03a3\u03bbVTSSTV\u03a3\u03bb \u2212\u03a32\u03bb\u2225\u22252 \u2264 2\u03b5. In this case, the running time of the sketch computation is equal to T (A,S) = O(nnz(A)) + O\u0303(d2\u03bbn/\u03b5\u03b3). The running time of the overall algorithm follows from eqn. (10) and our choices for s and r:\nO(t \u00b7 nnz(A)) + O\u0303(d\u03bbn2/\u03b5max{2,\u03b3}).\nAgain, a change of variables suffices to satisfy the structural condition of eqn. (8) without changing the running time.\nWe now discuss how to satisfy the conditions of eqns. (6) or (8) by sampling, i.e., by selecting a small number of predictor variables. Towards that end, consider Algorithm 2 for the construction of the sampling-and-rescaling matrix S.\nThe following theorem (see Appendix G for its proof) is of independent interest and is a strengthening of Theorem 4.2 of Holodnak & Ipsen (2015), since the sampling complexity s is improved to depend only on \u2016X\u20162F instead of the stable rank of X for the special case where \u2016X\u20162 \u2264 1.3\n3We do note that Theorem 3 is implicit in Cohen et al. (2017).\nAlgorithm 2 Construct sampling-and-rescaling matrix Input: Probabilities pi, i = 1, . . . , d; integer s d; S\u2190 0d\u00d7s; for j = 1 to s do\nPick ij \u2208 {1, . . . , d} with P(ij = i) = pi; Sijj \u2190 (s pij )\u2212 1 2 ;\nend for Output: Sampling-and-rescaling matrix S;\nTheorem 3. Let X \u2208 Rd\u00d7n with \u2016X\u20162 \u2264 1 and let S be constructed by Algorithm 2 with pi = \u2016Xi\u2217\u201622 / \u2016X\u2016 2 F for i = 1, . . . , d. Let \u03b4 be a failure probability and let \u03b5 \u2208 (0, 1] be an accuracy parameter. If the number of sampled columns s satisfies\ns \u2265 8 \u2016X\u20162F\n3 \u03b52 ln\n( 4 (1 + \u2016X\u20162F )\n\u03b4\n) ,\nthen, with probability at least 1\u2212 \u03b4,\u2225\u2225XTSSTX\u2212XTX\u2225\u2225 2 \u2264 \u03b5.\nUsing Theorem 3 with X = V we can satisfy the condition of eqn. (6) by simply using the sampling probabilities pi = \u2016Vi\u2217\u201622 /n (recall that \u2016V\u2016 2 F = n and \u2016V\u20162 = 1), which are the column leverage scores of the design matrix A. Setting s = O(\u03b5\u22122n lnn) suffices to satisfy the condition of eqn. (6). We note that approximate leverage scores also suffice and that their computation can be done efficiently without computing V (Drineas et al., 2012).\nFinally, using Theorem 3 with X = V\u03a3\u03bb we can satisfy the condition of eqn. (8) using the sampling probabilities pi = \u2016(V\u03a3\u03bb)i\u2217\u201622 /d\u03bb (recall that \u2016V\u03a3\u03bb\u2016 2 F = d\u03bb and \u2016V\u03a3\u03bb\u20162 \u2264 1). It is easy to see that these probabilities are proportional to the column ridge leverage scores of the design matrix A (see Lemma 21 in Appendix F). Setting s = O(\u03b5\u22122d\u03bb ln d\u03bb) suffices to satisfy the condition of eqn. (8). We note that approximate ridge leverage scores also suffice and that their computation can be done efficiently without computing V (Cohen et al., 2017)."}, {"heading": "2.2. Bounding the MSE of x\u0302\u2217", "text": "Consider the data-generation model\nb = Ax0 + \u03b5, (12)\nwhere b \u2208 Rn is the response vector, A \u2208 Rn\u00d7d is the design matrix, x0 \u2208 Rn is the \u201ctrue\u201d parameter vector, and \u03b5 \u2208 Rn is the noise satisfying E(\u03b5) = 0 and E(\u03b5\u03b5T) = \u03c32In, \u03c3 > 0. Then, the ridge regression estimator x\u2217 of the parameter vector x0 can be expressed as in eqn. (3), with mean squared error (MSE) given by (see Lemma 16 in Appendix E for the derivation)\nMSE(x\u2217) = \u03c32 \u2225\u2225(AAT + \u03bbIn)\u22121A\u2225\u22252F\n+ \u2225\u2225(AT(AAT + \u03bbIn)\u22121A\u2212 Id)x0\u2225\u222522 . (13)\nSimilarly, we can prove that the MSE of x\u0302\u2217 for the special case where t = 1 in Algorithm 1 is equal to\nMSE(x\u0302\u2217) = \u03c32 \u2225\u2225(ASSTAT + \u03bbIn)\u22121A\u2225\u22252F\n+ \u2225\u2225(AT(ASSTAT + \u03bbIn)\u22121A\u2212 Id)x0\u2225\u222522 . (14)\nWe present bounds on the MSE of x\u0302\u2217 for the special case where Algorithm 1 is run for a single iteration (t = 1) under the assumptions of eqns. (6) or (8). Bounds for t > 1 (more than one iteration) are delegated to future work.\nTheorem 4. Let A \u2208 Rn\u00d7d be the design matrix and let x\u0302\u2217 be the output of Algorithm 1 for t = 1. If the condition of eqn. (6) is satisfied for some constant 0 < \u03b5 < 1, then,\nMSE(x\u0302\u2217) \u2264 (1 + 3\u03b5\u03b321) MSE(x\u2217),\nwhere \u03b31 = 1 + \u03c321 \u03bb . If the condition of eqn. (8) is satisfied for some constant 0 < \u03b5 < 1, then,\nMSE(x\u0302\u2217) \u2264 (1 + 3\u03b5\u03b322) MSE(x\u2217),\nwhere \u03b32 = max { 1 + \u03c321/\u03bb, \u221a 1 + \u03bb/\u03c32n } ."}, {"heading": "3. Sketching the Proof of Theorem 2", "text": "Due to space considerations, essentially all our proofs have been deferred to the Appendix. However, to give a flavor of the mathematical derivations underlying our contributions, we present an outline of the proof of Theorem 2, starting with the special case where Algorithm 1 is run for a single iteration (t = 1).\nUsing the quantities defined in Algorithm 1, let\nx\u2217(j) = AT(AAT + \u03bbIn) \u22121b(j) (15)\nfor j = 1, . . . , t. Notice that x\u2217 = x\u2217(1). Our next result expresses the intermediate vectors x\u0303(j) of Algorithm 1 in terms of the vectors x\u2217(j). We remind the reader that U \u2208 Rn\u00d7n and \u03a3 \u2208 Rn\u00d7n are, respectively, the matrices of the left singular vectors and singular values of A. We will make extensive use of the matrix \u03a3\u03bb defined in eqn. (7). Lemma 5. Let A \u2208 Rn\u00d7d, b \u2208 Rn, and \u03bb > 0 be the inputs of the ridge regression problem. Let S \u2208 Rd\u00d7s be the sketching matrix and define\nE = \u03a3\u03bbV TSSTV\u03a3\u03bb \u2212\u03a32\u03bb."}, {"heading": "If \u2016E\u20162 < 1, then for all j = 1, . . . , t,", "text": "x\u0303(j) = x\u2217(j) + V\u03a3\u03bbR\u03a3\u03bb\u03a3 \u22121UTb(j), (16)\nwhere R = \u2211\u221e `=1(\u22121)`E`.\nNow, consider the case when t = 1. Algorithm 1 returns x\u0302\u2217 = x\u0303(1); also recall that x\u2217 = x\u2217(1) and b = b(1). Therefore, applying Lemma 5 yields\nx\u0302\u2217 = x\u2217 + V\u03a3\u03bbR\u03a3\u03bb\u03a3 \u22121UTb. (17)\nFurther, for any j = 1, . . . , t,\n\u2016R\u20162 = \u2225\u2225 \u221e\u2211 `=1 (\u22121)`E` \u2225\u2225 2 \u2264 \u221e\u2211 `=1 \u2016E`\u20162 \u2264 \u221e\u2211 `=1 \u2016E\u2016`2\n\u2264 \u221e\u2211 `=1 ( \u03b5 4 \u221a 2 )` = \u03b5 4 \u221a 2 1\u2212 \u03b5 4 \u221a 2 \u2264 \u03b5 2 \u221a 2 . (18)\nwhere we used the triangle inequality, sub-multiplicativity of the spectral norm, and the fact that \u03b5\n4 \u221a 2 \u2264 12 . Now, using\neqn. (17), we have\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 = \u2016V\u03a3\u03bbR\u03a3\u03bb\u03a3\u22121UTb\u20162 \u2264 \u2016\u03a3\u03bb\u20162\u2016R\u20162\u2016\u03a3\u03bb\u03a3\u22121UTb\u20162\n\u2264 \u03b5 2 \u221a 2 \u2016\u03a3\u03bb\u03a3\u22121UTb\u20162 = \u03b5\n2 \u221a 2 \u2016\u03a3\u22121\u03bb \u03a3 2 \u03bb\u03a3 \u22121UTb\u20162. (19)\nwhere the first inequality follows from the unitary invariance and sub-multiplicativity of the spectral norm, and the second inequality is due to eqn. (18) and the fact that \u2016\u03a3\u03bb\u20162 \u2264 1.\nNow, let (\u03a3\u22121\u03bb )k denote the diagonal matrix whose first k diagonal entries are equal to the first k diagonal entries of \u03a3\u22121\u03bb and the bottom n\u2212 k diagonal entries are set to zero. Let (\u03a3\u22121\u03bb )k,\u22a5 = \u03a3 \u22121 \u03bb \u2212 (\u03a3 \u22121 \u03bb )k. Then, we have\n\u2016\u03a3\u22121\u03bb \u03a3 2 \u03bb\u03a3 \u22121UTb\u20162 \u2264 \u2016(\u03a3\u22121\u03bb )k \u03a3 2 \u03bb\u03a3 \u22121UTb\u20162\ufe38 \ufe37\ufe37 \ufe38\n\u22061\n+ \u2016(\u03a3\u22121\u03bb )k,\u22a5 \u03a3 2 \u03bb\u03a3 \u22121UTb\u20162\ufe38 \ufe37\ufe37 \ufe38\n\u22062\n. (20)\nwhere eqn. (20) follows from the triangle inequality and the fact that \u03a3\u22121\u03bb = (\u03a3 \u22121 \u03bb )k + (\u03a3 \u22121 \u03bb )k,\u22a5.\nNext, we bound \u22061 and \u22062 separately using eqns. (60) and (62) in Appendix C:\n\u22061 \u2264 \u221a\n2 \u2016x\u2217\u20162 , \u22062 \u2264 1\u221a \u03bb \u2225\u2225UTk,\u22a5b\u2225\u22252 . (21)\nFinally, combining eqns. (19), (20) and (21), we obtain\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 \u2264 \u03b5\n2 \u221a 2\n(\u221a 2 \u2016x\u2217\u20162 +\n1\u221a \u03bb \u2016UTk,\u22a5b\u20162 ) = \u03b5\n2\n( \u2016x\u2217\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b\u20162\n) , (22)\nwhich concludes the proof for the t = 1 case.\nInterestingly, the eqn. (22) holds more generally and can be used to bound the distance between the intermediate approximate solution vectors x\u0303(j) and the intermediate true solution vectors x\u2217(j)of eqn. (15). Indeed, for j = 1, . . . , t, we have\n\u2016x\u0303(j) \u2212 x\u2217(j)\u20162 \u2264 \u03b5\n2\n( \u2016x\u2217(j)\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b(j)\u20162\n) .\n(23)\nThe next lemma (see Appendix C for its proof) presents a structural result for the optimal solution x\u2217.\nLemma 6. Let x\u0303(j), j = 1, . . . , t be the sequence of vectors introduced in Algorithm 1 and let x\u2217(t) \u2208 Rd be defined as in eqn. (15). Then,\nx\u2217 = x\u2217(t) + t\u22121\u2211 j=1 x\u0303(j), (24)\nwhere x\u2217 is the true solution of the ridge regression problem.\nRepeated application of eqns. (23) and (24) yields\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 = \u2225\u2225 t\u2211 j=1 x\u0303(j) \u2212 x\u2217 \u2225\u2225 2\n= \u2225\u2225x\u0303(t) \u2212 (x\u2217 \u2212 t\u22121\u2211\nj=1\nx\u0303(j) )\u2225\u2225 2 = \u2225\u2225x\u0303(t) \u2212 x\u2217(t)\u2225\u2225 2\n\u2264 \u03b5 2\n( \u2016x\u2217(t)\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b(t)\u20162\n) . (25)\nThe next bound (see Appendix C for its proof) provides a critical inequality that can be used recursively in order to establish Theorem 2.\nLemma 7. Let b(j), j = 1, . . . , t, be the intermediate response vectors of Algorithm 1 and let x\u2217(j) be the vector defined in eqn. (15) for j = 1, . . . , t \u2212 1. If the structural condition of eqn. (8) is satisfied, then\n\u2016x\u2217(j+1)\u20162 + 1\u221a 2\u03bb \u2016UTk,\u22a5b(j+1)\u20162\n\u2264 \u03b5 ( \u2016x\u2217(j)\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b(j)\u20162\n) . (26)\nApplying eqn. (26) iteratively, we obtain\n\u2016x\u2217(t)\u20162 + 1\u221a 2\u03bb \u2016UTk,\u22a5b(t)\u20162\n\u2264 \u03b5 ( \u2016x\u2217(t\u22121)\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b(t\u22121)\u20162 ) \u2264 \u00b7 \u00b7 \u00b7 \u2264 \u03b5t\u22121 ( \u2016x\u2217\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b\u20162\n) . (27)\nFinally, combining eqns. (25) and (27), we conclude that\n\u2016x\u0302\u2217 \u2212 x\u2217\u20162 \u2264 \u03b5t\n2\n( \u2016x\u2217\u20162 +\n1\u221a 2\u03bb \u2016UTk,\u22a5b\u20162\n) . (28)"}, {"heading": "4. Empirical Evaluation", "text": "We perform experiments on the ARCENE dataset (Guyon et al., 2005) from the UCI repository (Lichman, 2013). The design matrix contains 200 samples with 10, 000 real-valued features; we normalize the entries to be within the interval [0, 1]. The response vector consists of \u00b11 labels. We also perform experiments on synthetic data generated as in Chen et al. (2015); see Appendix H for details.\nIn our experiments, we compare three different choices of sampling probabilities: selecting columns (i) uniformly at random, (ii) proportional to their leverage scores, or (iii) proportional to their ridge leverage scores. For each sampling method, we run Algorithm 1 for 50 iterations with a variety of sketch sizes, and measure (i) the relative error of the solution vector \u2016x\u0302\n\u2217\u2212x\u2217\u20162 \u2016x\u2217\u20162 , where x \u2217 is the true optimal solu-\ntion and (ii) the objective sub-optimality f(x\u0302 \u2217)\nf(x\u2217) \u2212 1, where f(x) = \u2016Ax\u2212 b\u201622 + \u03bb\u2016x\u201622 is the objective function for the ridge-regression problem.\nThe results are shown in Figure 1. Figures 1a and 1b plot the relative error of the solution vector and the objective suboptimality (for a fixed sketch size) as the iterative algorithm progresses. Figure 1c plots the relative error of the solution with respect to varying sketch sizes (the plots for objective sub-optimality are analogous and thus omitted). We observe that both the solution error and the objective sub-optimality decay exponentially as our iterative algorithm progresses.4\n4For these experiments, we have set the regularization parameter \u03bb = 10 in the ridge regression objective as well as when computing the ridge leverage score sampling probabilities.\nNext, we show that the approximation quality depends directly on the degrees of freedom d\u03bb of the ridge-regression problem (eqn. (4)), rather than the dimensions of the design matrix. To this end, we keep the design matrix unchanged (n remains fixed), and vary the regularization parameter \u03bb \u2208 {1, 2, 5, 10, 20, 50}. Figure 1d plots the relative solution error against the degrees of freedom d\u03bb (for a fixed sketch size and number of iterations); we observe that the relative error decreases roughly exponentially as d\u03bb decreases (as \u03bb increases). Thus, the sketch size or number of iterations necessary to achieve a certain precision in the solution also decreases with d\u03bb, even though n remains fixed."}, {"heading": "5. Conclusion and Open Problems", "text": "We have presented simple structural results that guarantee high-quality approximations to the optimal solution vector of ridge regression. In particular, our second structural result presents the first accuracy analysis for ridge regression when the ridge leverage scores are used to sample predictor variables. The sample size depends on the degrees of freedom of the ridge regression problem and not the dimensions of the design matrix. An obvious open problem is to either improve the sample size or present lower bounds showing that our bounds are tight. Additionally, the results of Theorem 4 should be generalized to cover the t > 1 case.\nFinally, an interesting open problem would be to investigate whether the use of different sampling matrices in each iteration of Algorithm 1 (i.e., introducing new \u201crandomness\u201d in each iteration) could lead to provably improved bounds for our main theorems. We conjecture that this is indeed the case, and we present further experiment results in Appendix H which support our conjecture. In particular, the results show that using a newly sampled sketching matrix at every iteration enables faster convergence as the iterations progress, and also reduces the minimum sketch size necessary for Algorithm 1 to converge.\nAcknowledgements. We thank an anonymous reviewer for pointing out the connection between our method and the preconditioned Richardson iteration. AC and PD were partially supported by NSF IIS-1661760 and IIS-1661756. JY was supported by NSF IIS-1149789 and IIS-1618690."}], "year": 2018, "references": [{"title": "The fast Johnson\u2013Lindenstrauss transform and approximate nearest neighbors", "authors": ["N. Ailon", "B. Chazelle"], "venue": "SIAM Journal on Computing,", "year": 2009}, {"title": "Fast randomized kernel ridge regression with statistical guarantees", "authors": ["A.E. Alaoui", "M.W. Mahoney"], "venue": "In Proceedings of the 28th International Conference on Neural Information Processing Systems,", "year": 2015}, {"title": "Sharper bounds for regularized data fitting. In Approximation, Randomization, and Combinatorial Optimization", "authors": ["H. Avron", "K.L. Clarkson", "D.P. Woodruff"], "venue": "Algorithms and Techniques,", "year": 2017}, {"title": "Faster kernel ridge regression using sketching and preconditioning", "authors": ["H. Avron", "K.L. Clarkson", "D.P. Woodruff"], "venue": "SIAM Journal on Matrix Analysis and Applications,", "year": 2017}, {"title": "Second-order kernel online convex optimization with adaptive sketching", "authors": ["D. Calandriello", "A. Lazaric", "M. Valko"], "venue": "In Proceedings of the 34th International Conference on Machine Learning,", "year": 2017}, {"title": "Efficient second-order online kernel learning with adaptive embedding", "authors": ["D. Calandriello", "A. Lazaric", "M. Valko"], "venue": "In Advances in Neural Information Processing Systems", "year": 2017}, {"title": "Distributed adaptive sampling for kernel matrix approximation", "authors": ["D. Calandriello", "A. Lazaric", "M. Valko"], "venue": "In Proceedings of the 20th International Conference on Artificial Intelligence and Statistics,", "year": 2017}, {"title": "Fast relative-error approximation algorithm for ridge regression", "authors": ["S. Chen", "Y. Liu", "M.R. Lyu", "I. King", "S. Zhang"], "venue": "In Proceedings of the Thirty-First Conference on Uncertainty in Artificial Intelligence,", "year": 2015}, {"title": "Low rank approximation and regression in input sparsity time", "authors": ["K.L. Clarkson", "D.P. Woodruff"], "venue": "In Proceedings of the 45th annual ACM symposium on Symposium on Theory of Computing,", "year": 2013}, {"title": "Optimal approximate matrix product in terms of stable rank", "authors": ["M.B. Cohen", "J. Nelson", "D.P. Woodruff"], "venue": "In 43rd International Colloquium on Automata, Languages, and Programming,", "year": 2016}, {"title": "Input sparsity time low-rank approximation via ridge leverage score sampling", "authors": ["M.B. Cohen", "C. Musco"], "venue": "In Proceedings of the Twenty-Eighth Annual ACM-SIAM Symposium on Discrete Algorithms,", "year": 2017}, {"title": "Preconditioning kernel matrices", "authors": ["K. Cutajar", "M.A. Osborne", "J.P. Cunningham", "M. Filippone"], "venue": "In Proceedings of the 33rd International Conference on International Conference on Machine Learning,", "year": 2016}, {"title": "Fast monte-carlo algorithms for approximate matrix multiplication", "authors": ["P. Drineas", "R. Kannan"], "venue": "In Proceedings of the 42nd IEEE Symposium on Foundations of Computer Science,", "year": 2001}, {"title": "RandNLA: Randomized numerical linear algebra", "authors": ["P. Drineas", "M.W. Mahoney"], "venue": "Communications of the ACM,", "year": 2016}, {"title": "Fast monte carlo algorithms for matrices I: Approximating matrix multiplication", "authors": ["P. Drineas", "R. Kannan", "M.W. Mahoney"], "venue": "SIAM Journal on Computing,", "year": 2006}, {"title": "Sampling algorithms for `2 regression and applications", "authors": ["P. Drineas", "M.W. Mahoney", "S. Muthukrishnan"], "venue": "In Proceedings of the 17th Annual ACM-SIAM Symposium on Discrete Algorithms,", "year": 2006}, {"title": "Faster least squares approximation", "authors": ["P. Drineas", "M.W. Mahoney", "S. Muthukrishnan", "T. Sarl\u00f3s"], "venue": "Numerische Mathematik,", "year": 2011}, {"title": "Fast approximation of matrix coherence and statistical leverage", "authors": ["P. Drineas", "M. Magdon-Ismail", "M.W. Mahoney", "D.P. Woodruff"], "venue": "Journal of Machine Learning Research,", "year": 2012}, {"title": "Matrix Computations", "authors": ["G.H. Golub", "C.F. Van Loan"], "year": 1996}, {"title": "Solving ridge regression using sketched preconditioned SVRG", "authors": ["A. Gonen", "F. Orabona", "S. Shalev-Shwartz"], "venue": "In Proceedings of the 33nd International Conference on Machine Learning,", "year": 2016}, {"title": "Biased estimation in regression: An evaluation using mean squared error", "authors": ["R.F. Gunst", "R.L. Mason"], "venue": "Journal of the American Statistical Association,", "year": 1977}, {"title": "Result analysis of the NIPS 2003 feature selection challenge", "authors": ["I. Guyon", "S. Gunn", "A. Ben-Hur", "G. Dror"], "venue": "In Advances in Neural Information Processing Systems", "year": 2005}, {"title": "Ridge regression: Biased estimation for nonorthogonal problems", "authors": ["A.E. Hoerl", "R.W. Kennard"], "venue": "Technometrics, 12:55\u201367,", "year": 1970}, {"title": "Randomized approximation of the gram matrix: Exact computation and probabilistic bounds", "authors": ["J.T. Holodnak", "I.C.F. Ipsen"], "venue": "SIAM Journal on Matrix Analysis and Applications,", "year": 2015}, {"title": "Approximate Gaussian Elimination", "authors": ["R. Kyng"], "venue": "Ph.D Thesis, Yale University,", "year": 2017}, {"title": "Faster ridge regression via the subsampled randomized hadamard transform", "authors": ["Y. Lu", "P. Dhillon", "D.P. Foster", "L. Ungar"], "venue": "In Advances in Neural Information Processing Systems", "year": 2013}, {"title": "Diving into the shallows: a computational perspective on large-scale shallow learning", "authors": ["S. Ma", "M. Belkin"], "venue": "In Advances in Neural Information Processing Systems", "year": 2017}, {"title": "Randomized algorithms for matrices and data", "authors": ["M.W. Mahoney"], "venue": "Foundations and Trends in Machine Learning", "year": 2011}, {"title": "CUR matrix decompositions for improved data analysis", "authors": ["M.W. Mahoney", "P. Drineas"], "venue": "Proceedings of the National Academy of Sciences of the United States of America,", "year": 2009}, {"title": "Recursive sampling for the nystrom method", "authors": ["C. Musco"], "venue": "In Advances in Neural Information Processing Systems", "year": 2017}, {"title": "Iterative Hessian sketch: Fast and accurate solution approximation for constrained least-squares", "authors": ["M. Pilanci", "M.J. Wainwright"], "venue": "Journal of Machine Learning Research,", "year": 2016}, {"title": "Numerical Approximation of Partial Differential Equations", "authors": ["A.M. Quarteroni", "A. Valli"], "year": 1994}, {"title": "Falkon: An optimal large scale kernel method", "authors": ["A. Rudi", "L. Carratino", "L. Rosasco"], "venue": "In Advances in Neural Information Processing Systems", "year": 2017}, {"title": "Improved approximation algorithms for large matrices via random projections", "authors": ["T. Sarl\u00f3s"], "venue": "In Proceedings of the 47th Annual IEEE Symposium on Foundations of Computer Science,", "year": 2006}, {"title": "Ridge regression learning algorithm in dual variables", "authors": ["C. Saunders", "A. Gammerman", "V. Vovk"], "venue": "In Proceedings of the Fifteenth International Conference on Machine Learning,", "year": 1998}, {"title": "An introduction to matrix concentration inequalities", "authors": ["J.A. Tropp"], "venue": "Foundations and Trends in Machine Learning,", "year": 2015}, {"title": "Sketched ridge regression: Optimization perspective, statistical perspective, and model averaging", "authors": ["S. Wang", "A. Gittens", "M.W. Mahoney"], "venue": "In Proceedings of the 34th International Conference on Machine Learning,", "year": 2017}, {"title": "Sketching as a tool for numerical linear algebra", "authors": ["D.P. Woodruff"], "venue": "Foundations and Trends in Theoretical Computer Science,", "year": 2014}, {"title": "Singular values of differences of positive semidefinite matrices", "authors": ["X. Zhan"], "venue": "SIAM Journal on Matrix Analysis and Applications,", "year": 2001}, {"title": "Divide and conquer kernel ridge regression: A distributed algorithm with minimax optimal rates", "authors": ["Y. Zhang", "J. Duchi", "M. Wainwright"], "venue": "Journal of Machine Learning Research,", "year": 2015}], "id": "SP:39a6decfc6e1d16181c30279f7bfb0e226b5ec23", "authors": [{"name": "Agniva Chowdhury", "affiliations": []}, {"name": "Jiasen Yang", "affiliations": []}, {"name": "Petros Drineas", "affiliations": []}], "abstractText": "Ridge regression is a variant of regularized least squares regression that is particularly suitable in settings where the number of predictor variables greatly exceeds the number of observations. We present a simple, iterative, sketching-based algorithm for ridge regression that guarantees highquality approximations to the optimal solution vector. Our analysis builds upon two simple structural results that boil down to randomized matrix multiplication, a fundamental and wellunderstood primitive of randomized linear algebra. An important contribution of our work is the analysis of the behavior of sub-sampled ridge regression problems when the ridge leverage scores are used: we prove that accurate approximations can be achieved by a sample whose size depends on the degrees of freedom of the ridge-regression problem rather than the dimensions of the design matrix. Our empirical evaluations verify our theoretical results on both real and synthetic data.", "title": "An Iterative, Sketching-based Framework for Ridge Regression"}