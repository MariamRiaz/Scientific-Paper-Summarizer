0	39	Maximum selection (maxing) and sorting (ranking) are fundamental problems in Computer Science with numerous important applications.
5	11	Other practical applications are in areas such as social choice (Caplin & Nalebuff, 1991; Soufiani et al., 2013), web search and information retrieval (Radlinski & Joachims, 2007; Radlinski et al., 2008), crowdsourcing (Chen et al., 2013; gif), recommender systems (Baltrunas et al., 2010) and several others.
16	11	A maximal is an element i that is preferable to every other element i.e., p̃i,j ≥ 0 ∀j.
24	20	Observe that WST is sufficient for existence of both maximal and ranking.
25	10	More restrictive notions of transitivity are motivated and used in different contexts.
27	8	Medium Stochastic Transitivity (MST) (Skorepa, 2010) sitting in between WST and SST, assumes that whenever i j k, p̃i,k ≥ min(p̃i,j , p̃j,k).
28	71	From WST to MST to SST, the model becomes more restrictive.
33	8	Easy fix to alleviate this problem is to consider Probably Approximately Correct (PAC) formulation which we also adopt.
41	18	Another set of widely-studied restrictive models are parametric ones.
45	20	Later (Falahatgar et al., 2017b) considered same model and proposed an optimal PAC maxing algorithm that uses O ( n 2 log 1 δ ) comparisons.
50	67	Among other related works we can point out (BusaFekete et al., 2014b; Lee et al., 2014; Dudı́k et al., 2015; Hüllermeier et al., 2008), who considered models more general than WST under different definitions of maximum and ranking.
51	29	More discussion about these models can be found in Appendix G. (Busa-Fekete et al., 2014a; Mohajer et al., 2017) considered the non-PAC version and (Rajkumar & Agarwal, 2014; Negahban et al., 2012; 2016; Jang et al., 2016) considered the non-adaptive version of this problem.
52	38	Also (Acharya et al., 2016; Ajtai et al., 2015) considered the deterministic adversarial version of maxing and ranking.
53	58	(Shah et al., 2016b; Chatterjee et al., 2015; Shah et al., 2016a) studied the problem of estimating pairwise probabilities in non-adaptive setting.
57	9	We resolve both questions in this paper: 1a) No.
62	8	2c) For models with SST + STI, since PAC ranking is possible with near linear complexity, is it also possible to approximate all pairwise probabilities to accuracy of using near linear number of comparisons?
65	13	Theorem 10 in Section 6 shows that there is a model with MST+STI, for which any PAC ranking algorithm requires Ω(n2) comparisons.
68	13	Interpretation Table 1 summarizes all known results for problems of maxing, ranking, and finding pairwise probabilities under different transitive properties.
71	21	But for SST model adding STI property facilitates near-linear complexity algorithms for PAC ranking and approximating pairwise probabilities.
72	63	It is easy to see that once all pairwise probabilities are approximated to accuracy of /2, one can find an -maximum and an -ranking.
76	7	Hence upper bound of O ( n2 2 log n δ ) follows for all problems.
78	23	To establish the lower bound, we reduce the problem of finding a 1/4-maximum to finding the left most piece of a linear jigsaw puzzle.
84	9	The modified problem is similar to a linear jigsaw puzzle where if we compare two pieces we will know if pieces are adjacent or not and if adjacent, which piece is on the left, the goal is to find the left most piece.
86	37	We use this to show the lower bound.
88	54	There exists a model that satisfies WST for which any algorithm requires Ω(n2) comparisons to find a 1/4-maximum with probability ≥ 7/8.
90	62	In the process, we present two other suboptimal maxing algorithms SOFTSEQ-ELIM, NEAR-OPT-MAX and use them as building blocks in OPT-MAX.
91	15	SOFT-SEQ-ELIM finds an - maximum with quadratic complexity.
93	114	NEAR-OPT-MAX first finds a good anchor and then uses SOFT-SEQ-ELIM, guaranteeing near linear comparison complexity.
97	48	Let p̂i,j be the fraction of times i won and ˆ̃pi,j = p̂i,j − 1/2.
99	16	Lemma 2 bounds comparisons used by COMPARE and proves its correctness.
