0,1,label2,summary_sentences
"Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1829–1838 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics
1829",text,[0],[0]
"Networks are ubiquitous, with prominent examples including social networks (e.g., Facebook, Twitter) or citation networks of research papers (e.g., arXiv).",1 Introduction,[0],[0]
"When analyzing data from these real-world networks, traditional methods often represent vertices (nodes) as one-hot representations (containing the connectivity information of each vertex with respect to all other vertices), usually suffering from issues related to the inherent sparsity of large-scale networks.",1 Introduction,[0],[0]
"This results in models that are not able to fully capture the relationships between vertices of the network (Perozzi et al., 2014; Tu et al., 2016).",1 Introduction,[0],[0]
"Alternatively, network embedding (i.e., network representation learning) has been considered, representing each vertex of a network with a low-dimensional vector that preserves information on its similarity rel-
ative to other vertices.",1 Introduction,[0],[0]
"This approach has attracted considerable attention in recent years (Tang and Liu, 2009; Perozzi et al., 2014; Tang et al., 2015; Grover and Leskovec, 2016; Wang et al., 2016; Chen et al., 2016; Wang et al., 2017a; Zhang et al., 2018).
",1 Introduction,[0],[0]
"Traditional network embedding approaches focus primarily on learning representations of vertices that preserve local structure, as well as internal structural properties of the network.",1 Introduction,[0],[0]
"For instance, Isomap (Tenenbaum et al., 2000), LINE (Tang et al., 2015), and Grarep (Cao et al., 2015) were proposed to preserve first-, second-, and higher-order proximity between nodes, respectively.",1 Introduction,[0],[0]
"DeepWalk (Perozzi et al., 2014), which learns vertex representations from random-walk sequences, similarly, only takes into account structural information of the network.",1 Introduction,[0],[0]
"However, in realworld networks, vertices usually contain rich textual information (e.g., user profiles in Facebook, paper abstracts in arXiv, user-generated content on Twitter, etc.), which may be leveraged effectively for learning more informative embeddings.
",1 Introduction,[0],[0]
"To address this opportunity, Yang et al. (2015) proposed text-associated DeepWalk, to incorporate textual information into the vectorial representations of vertices (embeddings).",1 Introduction,[0],[0]
"Sun et al. (2016) employed deep recurrent neural networks to integrate the information from vertex-
associated text into network representations.",1 Introduction,[0],[0]
"Further, Tu et al. (2017) proposed to more effectively model the semantic relationships between vertices using a mutual attention mechanism.
",1 Introduction,[0],[0]
"Although these methods have demonstrated performance gains over structure-only network embeddings, the relationship between text sequences for a pair of vertices is accounted for solely by comparing their sentence embeddings.",1 Introduction,[0],[0]
"However, as shown in Figure 1, to assess the similarity between two research papers, a more effective strategy would compare and align (via localweighting) individual important words (keywords) within a pair of abstracts, while information from other words (e.g., stop words) that tend to be less relevant can be effectively ignored (downweighted).",1 Introduction,[0],[0]
"This alignment mechanism is difficult to accomplish in models where text sequences are first embedded into a common space and then compared in pairs (He and Lin, 2016; Parikh et al., 2016; Wang and Jiang, 2017; Wang et al., 2017b; Shen et al., 2018a).
",1 Introduction,[0],[0]
We propose to learn a semantic-aware Network Embedding (NE) that incorporates wordlevel alignment features abstracted from text sequences associated with vertex pairs.,1 Introduction,[0],[0]
"Given a pair of sentences, our model first aligns each word within one sentence with keywords from the other sentence (adaptively up-weighted via an attention mechanism), producing a set of fine-grained matching vectors.",1 Introduction,[0],[0]
"These features are then accumulated via a simple but efficient aggregation function, obtaining the final representation for the sentence.",1 Introduction,[0],[0]
"As a result, the word-by-word alignment features (as illustrated in Figure 1) are explicitly and effectively captured by our model.",1 Introduction,[0],[0]
"Further, the learned network embeddings under our framework are adaptive to the specific (local) vertices that are considered, and thus are context-aware and especially suitable for downstream tasks, such as link prediction.",1 Introduction,[0],[0]
"Moreover, since the word-by-word matching procedure introduced here is highly parallelizable and does not require any complex encoding networks, such as Long Short-Term Memory (LSTM) or Convolutional Neural Networks (CNNs), our framework requires significantly less time for training, which is attractive for large-scale network applications.
",1 Introduction,[0],[0]
"We evaluate our approach on three real-world datasets spanning distinct network-embeddingbased applications: link prediction, vertex classi-
fication and visualization.",1 Introduction,[0],[0]
"We show that the proposed word-by-word alignment mechanism efficiently incorporates textual information into the network embedding, and consistently exhibits superior performance relative to several competitive baselines.",1 Introduction,[0],[0]
Analyses considering the extracted word-by-word pairs further validate the effectiveness of the proposed framework.,1 Introduction,[0],[0]
"A network (graph) is defined as G = {V ,E}, where V and E denote the set of N vertices (nodes) and edges, respectively, where elements of E are two-element subsets of V .",2.1 Problem Definition,[0],[0]
"Here we only consider undirected networks, however, our approach (introduced below) can be readily extended to the directed case.",2.1 Problem Definition,[0],[0]
"We also define W , the symmetric RN×N matrix whose elements,wij , denote the weights associated with edges in V , and T , the set of text sequences assigned to each vertex.",2.1 Problem Definition,[0],[0]
"Edges and weights contain the structural information of the network, while the text can be used to characterize the semantic properties of each vertex.",2.1 Problem Definition,[0],[0]
"Given network G, with the network embedding we seek to encode each vertex into a low-dimensional vector h (with dimension much smaller than N ), while preserving structural and semantic features of G.",2.1 Problem Definition,[0],[0]
"To incorporate both structural and semantic information into the network embeddings, we specify two types of (latent) embeddings: (i) hs, the structural embedding; and (ii) ht, the textual embedding.",2.2 Framework Overview,[0],[0]
"Specifically, each vertex in G is encoded into a low-dimensional embedding h =",2.2 Framework Overview,[0],[0]
[hs;ht].,2.2 Framework Overview,[0],[0]
"To learn these embeddings, we specify an objective that leverages the information from both W and T , denoted as
L = ∑ e∈E Lstruct(e) + Ltext(e) + Ljoint(e) , (1)
where Lstruct, Ltext and Ljoint denote structure, text, and joint structure-text training losses, respectively.",2.2 Framework Overview,[0],[0]
"For a vertex pair {vi, vj} weighted by wij , Lstruct(vi, vj) in (1) is defined as (Tang et al., 2015)
Lstruct(vi, vj) = wij log p(his|hjs) , (2)
where p(his|hjs) denotes the conditional probability between structural embeddings for vertices {vi, vj}.",2.2 Framework Overview,[0],[0]
"To leverage the textual information in T , similar text-specific and joint structure-text training objectives are also defined
Ltext(vi, vj) = wijα1 log p(hit|h j t ) , (3)
Ljoint(vi, vj) =",2.2 Framework Overview,[0],[0]
wijα2 log p(hit|hjs) (4) + wijα3 log p(h,2.2 Framework Overview,[0],[0]
"i s|h j t ) , (5)
where p(hit|h j t ) and p(h i t|hjs) (or p(his|h j t ))",2.2 Framework Overview,[0],[0]
"denote the conditional probability for a pair of text embeddings and text embedding given structure embedding (or vice versa), respectively, for vertices {vi, vj}.",2.2 Framework Overview,[0],[0]
"Further, α1, α2 and α3 are hyperparameters that balance the impact of the different training-loss components.",2.2 Framework Overview,[0],[0]
"Note that structural embeddings, hs, are treated directly as parameters, while the text embeddings ht are learned based on the text sequences associated with vertices.
",2.2 Framework Overview,[0],[0]
"For all conditional probability terms, we follow Tang et al. (2015) and consider the second-order proximity between vertex pairs.",2.2 Framework Overview,[0],[0]
"Thus, for vertices {vi, vj}, the probability of generating hi conditioned on hj may be written as
p(hi|hj) = exp
( hj T hi )
∑N k=1 exp ( hj T hk ) .",2.2 Framework Overview,[0],[0]
"(6)
Note that (6) can be applied to both structural and text embeddings in (2) and (3).
",2.2 Framework Overview,[0],[0]
"Inspired by Tu et al. (2017), we further assume that vertices in the network play different roles depending on the vertex with which they interact.",2.2 Framework Overview,[0],[0]
"Thus, for a given vertex, the text embedding, ht, is adaptive (specific) to the vertex it is being conditioned on.",2.2 Framework Overview,[0],[0]
"This type of contextaware textual embedding has demonstrated superior performance relative to context-free embeddings (Tu et al., 2017).",2.2 Framework Overview,[0],[0]
"In the following two sections, we describe our strategy for encoding the text sequence associated with an edge into its adaptive textual embedding, via word-by-context and word-by-word alignments.",2.2 Framework Overview,[0],[0]
"We first introduce our base model, which reweights the importance of individual words within a text sequence in the context of the edge being considered.",2.3 Word-by-Context Alignment,[0],[0]
"Consider text sequences associated with two vertices connected by an edge, de-
noted ta and tb and contained in T .",2.3 Word-by-Context Alignment,[0],[0]
"Text sequences ta and tb are of lengths Ma and Mb, respectively, and are represented by Xa ∈ Rd×Ma",2.3 Word-by-Context Alignment,[0],[0]
"and Xb ∈ Rd×Mb , respectively, where d is the dimension of the word embedding.",2.3 Word-by-Context Alignment,[0],[0]
"Further, x(i)a denotes the embedding of the i-th word in sequence ta.
",2.3 Word-by-Context Alignment,[0],[0]
Our goal is to encode text sequences ta and tb into counterpart-aware vectorial representations ha and hb.,2.3 Word-by-Context Alignment,[0],[0]
"Thus, while inferring the adaptive textual embedding for sentence ta, we propose reweighting the importance of each word in ta to explicitly account for its alignment with sentence tb.",2.3 Word-by-Context Alignment,[0],[0]
"The weight αi, corresponding to the i-th word in ta, is generated as:
αi = exp(tanh(W1cb",2.3 Word-by-Context Alignment,[0],[0]
+W2x (i) a )),2.3 Word-by-Context Alignment,[0],[0]
"∑Ma
j=1 exp(tanh(W1cb",2.3 Word-by-Context Alignment,[0],[0]
+,2.3 Word-by-Context Alignment,[0],[0]
"W2x (j) a ))
, (7)
where W1 and W2 are model parameters and cb = ∑Mb i=1",2.3 Word-by-Context Alignment,[0],[0]
"x b i is the context vector of sequence tb, obtained by simply averaging over all the word embeddings in the sequence, similar to fastText (Joulin et al., 2016).",2.3 Word-by-Context Alignment,[0],[0]
"Further, the word-by-context embedding for sequence ta is obtained by taking the weighted average over all word embeddings
ha = ∑Ma i=1αix (i) a .",2.3 Word-by-Context Alignment,[0],[0]
"(8)
Intuitively, αi may be understood as the relevance score between the ith word in ta and sequence tb.",2.3 Word-by-Context Alignment,[0],[0]
"Specifically, keywords within ta, in the context of tb, should be assigned larger weights, while less important words will be correspondingly downweighted.",2.3 Word-by-Context Alignment,[0],[0]
"Similarly, hb is encoded as a weighted embedding using (7) and (8).",2.3 Word-by-Context Alignment,[0],[0]
"With the alignment in the previous section, wordby-context matching features αi are modeled; however, the word-by-word alignment information (fine-grained), which is key to characterize the relationship between two vertices (as discussed in the above), is not explicitly captured.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"So motivated, we further propose an architecture to explicitly abstract word-by-word alignment information from ta and tb, to learn the relationship between the two vertices.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"This is inspired by the recent success of Relation Networks (RNs) for relational reasoning (Santoro et al., 2017).
",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"As illustrated in Figure 2, given two input embedding matrices Xa and Xb, we first compute the affinity matrix A ∈ RMb×Ma , whose elements represent the affinity scores corresponding to all word pairs between sequences ta and tb
A = XTb Xa .",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"(9)
Subsequently, we compute the context-aware matrix for sequence tb as
Ab = softmax(A) , X̃b = XbAb , (10)
where the softmax(·) function is applied columnwise to A, and thus Ab contains the attention weights (importance scores) across sequence tb (columns), which account for each word in sequence ta (rows).",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Thus, matrix X̃b ∈ Rd×Ma in (10) constitutes an attention-weighted embedding for Xb.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Specifically, the i-th column of X̃b, denoted as x̃(i)b , can be understood as a weighted average over all the words in tb, where higher attention weights indicate better alignment (match) with the i-th word in ta.
",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"To abstract the word-by-word alignments, we compare x(i)a with x̃ (i) b , for i = 1, 2, ...,Ma, to obtain the corresponding matching vector
m(i)a = falign ( x(i)a , x̃ (i) b ) , (11)
where falign(·) represents the alignment function.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Inspired by the observation in Wang and Jiang (2017) that simple comparison/alignment functions based on element-wise operations exhibit excellent performance in matching text sequences, here we use a combination of element-wise subtraction and multiplication as
falign(x (i) a , x̃ (i) a ) =",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"[x (i) a − x̃ (i) a ;x (i) a x̃ (i) a ] ,
where denotes the element-wise Hadamard product, then these two operations are concatenated to produce the matching vector m(i)a .",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Note these operators may be used individually or combined as we will investigate in our experiments.
",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Subsequently, matching vectors from (11) are aggregated to produce the final textual embedding hat for sequence ta as
hat = faggregate ( m(1)a ,m (2) a , ...,m (Ma) a ) , (12)
where faggregate denotes the aggregation function, which we specify as the max-pooling pooling operation.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Notably, other commutative operators, such as summation or average pooling, can be otherwise employed.",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Although these aggregation functions are simple and invariant to the order of words in input sentences, they have been demonstrated to be highly effective in relational reasoning (Parikh et al., 2016; Santoro et al., 2017).",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"To further explore this, in Section 5.3, we conduct an ablation study comparing different choices of alignment and aggregation functions.
",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"The representation hb can be obtained in a similar manner through (9), (10), (11) and (12), but replacing (9) with A = XTaXb (its transpose).",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"Note that this word-by-word alignment is more computationally involved than word-by-context; however, the former has substantially fewer parameters to learn, provided we no longer have to estimate the parameters in (7).",2.4 Fine-Grained Word-by-Word Alignment,[0],[0]
"For large-scale networks, computing and optimizing the conditional probabilities in (1) using (6) is computationally prohibitive, since it requires the summation over all vertices V in G. To address this limitation, we leverage the negative sampling strategy introduced by Mikolov et al. (2013), i.e., we perform computations by sampling a subset of negative edges.",2.5 Training and Inference,[0],[0]
"As a result, the conditional in (6) can be rewritten as:
p(hi|hj) = log σ",2.5 Training and Inference,[0],[0]
"( hj T hi )
+ K∑ i=1",2.5 Training and Inference,[0],[0]
Ehi∼P,2.5 Training and Inference,[0],[0]
"(v) [ log σ ( −hjThi )] ,
where σ(x) = 1/(1 + exp(−x)) is the sigmoid function.",2.5 Training and Inference,[0],[0]
"Following Mikolov et al. (2013), we set the noise distribution P (v) ∝",2.5 Training and Inference,[0],[0]
"d3/4v , where dv is the out-degree of vertex v ∈ V .",2.5 Training and Inference,[0],[0]
The number of negative samples K is treated as a hyperparameter.,2.5 Training and Inference,[0],[0]
"We
use Adam (Kingma and Ba, 2014) to update the model parameters while minimizing the objective in (1).",2.5 Training and Inference,[0],[0]
"Network embedding methods can be divided into two categories: (i) methods that solely rely on the structure, e.g., vertex information; and (ii) methods that leverage both the structure the network and the information associated with its vertices.
",3 Related Work,[0],[0]
"For the first type of models, DeepWalk (Perozzi et al., 2014) has been proposed to learn node representations by generating node contexts via truncated random walks; it is similar to the concept of Skip-Gram (Mikolov et al., 2013), originally introduced for learning word embeddings.",3 Related Work,[0],[0]
"LINE (Tang et al., 2015) proposed a principled objective to explicitly capture first-order and second-order proximity information from the vertices of a network.",3 Related Work,[0],[0]
"Further, Grover and Leskovec (2016) introduced a biased random walk procedure to generate the neighborhood for a vertex, which infers the node representations by maximizing the likelihood of preserving the local context information of vertices.",3 Related Work,[0],[0]
"However, these algorithms generally ignore rich heterogeneous information associated with vertices.",3 Related Work,[0],[0]
"Here, we focus on incorporating textual information into network embeddings.
",3 Related Work,[0],[0]
"To learn semantic-aware network embeddings, Text-Associated DeepWalk (TADW) (Yang et al., 2015) proposed to integrate textual features into network representations with matrix factorization, by leveraging the equivalence between DeepWalk and matrix factorization.",3 Related Work,[0],[0]
"CENE (ContentEnhanced Network Embedding) (Sun et al., 2016) used bidirectional recurrent neural networks to abstract the semantic information associated with vertices, which further demonstrated the advantages of employing textual information.",3 Related Work,[0],[0]
"To capture the interaction between sentences of vertex pairs, Tu et al. (2017) further proposed ContextAware Network Embedding (CANE), that employs a mutual attention mechanism to adaptively account for the textual information from neighboring vertices.",3 Related Work,[0],[0]
"Despite showing improvement over structure-only models, these semantic-aware methods cannot capture word-level alignment information, which is important for inferring the relationship between node pairs, as previously discussed.",3 Related Work,[0],[0]
"In this work, we introduce a WordAlignment-based Network Embedding (WANE)
framework, which aligns and aggregates word-byword matching features in an explicit manner, to obtain more informative network representations.",3 Related Work,[0],[0]
"Datasets We investigate the effectiveness of the proposed WANE model on two standard networkembedding-based tasks, i.e., link prediction and multi-label vertex classification.",4 Experimental Setup,[0],[0]
"The following three real-world datasets are employed for quantitative evaluation: (i) Cora, a standard paper citation network that contains 2,277 machine learning papers (vertices) grouped into 7 categories and connected by 5,214 citations (edges) (ii) HepTh, another citation network of 1,038 papers with abstract information and 1,990 citations; (iii) Zhihu, a network of 10,000 active users from Zhihu, the largest Q&A website in China, where 43,894 vertices and descriptions of the Q&A topics are available.",4 Experimental Setup,[0],[0]
"The average lengths of the text in the three datasets are 90, 54, and 190, respectively.",4 Experimental Setup,[0],[0]
"To make direct comparison with existing work, we employed the same preprocessing procedure1 of Tu et al. (2017).
",4 Experimental Setup,[0],[0]
"Training Details For fair comparison with CANE (Tu et al., 2017), we set the dimension of network embedding for our model to 200.",4 Experimental Setup,[0],[0]
"The number of negative samples K is selected from {1, 3, 5} according to performance on the validation set.",4 Experimental Setup,[0],[0]
"We set the batch size as 128, and the model is trained using Adam (Kingma and Ba, 2014), with a learning rate of 1× 10−3 for all parameters.",4 Experimental Setup,[0],[0]
"Dropout regularization is employed on the word embedding layer, with rate selected from {0.5, 0.7, 0.9}, also on the validation set.",4 Experimental Setup,[0],[0]
"Our code will be released to encourage future research.
",4 Experimental Setup,[0],[0]
"Baselines To evaluate the effectiveness of our framework, we consider several strong baseline methods for comparisons, which can be categorized into two types: (i) models that only exploit structural information: MMB (Airoldi et al., 2008), DeepWalk (Perozzi et al., 2014), LINE (Tang et al., 2015), and node2vec (Grover and Leskovec, 2016).",4 Experimental Setup,[0],[0]
"(ii) Models that take both structural and textual information into account: Naive combination (which simply concatenates the structure-based embedding with CNN-based text embeddings, as explored in (Tu et al., 2017), TADW (Yang et al., 2015), CENE (Sun et al.,
1https://github.com/thunlp/CANE
2016), and CANE (Tu et al., 2017).",4 Experimental Setup,[0],[0]
"It is worth noting that unlike all these baselines, WANE explicitly captures word-by-word interactions between text sequence pairs.
",4 Experimental Setup,[0],[0]
Evaluation Metrics,4 Experimental Setup,[0],[0]
"We employ AUC (Hanley and McNeil, 1982) as the evaluation metric for link prediction, which measures the probability that vertices within an existing edge, randomly sampled from the test set, are more similar than those from a random pair of non-existing vertices, in terms of the inner product between their corresponding embeddings.
",4 Experimental Setup,[0],[0]
"For multi-label vertex classification and to ensure fair comparison, we follow Yang et al. (2015) and employ a linear SVM on top of the learned network representations, and evaluate classification accuracy with different training ratios (varying from 10% to 50%).",4 Experimental Setup,[0],[0]
The experiments for each setting are repeated 10 times and the average test accuracy is reported.,4 Experimental Setup,[0],[0]
"We experiment with three variants for our WANE model: (i) WANE: where the word embeddings of each text sequence are simply average to obtain the sentence representations, similar to (Joulin et al., 2016; Shen et al., 2018c).",5 Experimental Results,[0],[0]
"(ii) WANE-
wc: where the textual embeddings are inferred with word-by-context alignment.",5 Experimental Results,[0],[0]
(iii) WANE-ww: where the word-by-word alignment mechanism is leveraged to capture word-by-word matching features between available sequence pairs.,5 Experimental Results,[0],[0]
"Table 1 presents link prediction results for all models on Cora dataset, where different ratios of edges are used for training.",5.1 Link Prediction,[0],[0]
"It can be observed that when only a small number of edges are available, e.g., 15%, the performances of structure-only methods is much worse than semantic-aware models that have taken textual information into consideration The perfromance gap tends to be smaller when a larger proportion of edges are employed for training.",5.1 Link Prediction,[0],[0]
"This highlights the importance of incorporating associated text sequences into network embeddings, especially in the case of representing a relatively sparse network.",5.1 Link Prediction,[0],[0]
"More importantly, the proposed WANE-ww model consistently outperforms other semantic-aware NE models by a substantial margin, indicating that our model better abstracts word-by-word alignment features from the text sequences available, thus yields more informative network representations.
",5.1 Link Prediction,[0],[0]
"Further, WANE-ww also outperforms WANE or WANE-wc on a wide range of edge training pro-
portions.",5.1 Link Prediction,[0],[0]
This suggests that: (i) adaptively assigning different weights to each word within a text sequence (according to its paired sequence) tends to be a better strategy than treating each word equally (as in WANE).,5.1 Link Prediction,[0],[0]
(ii) Solely considering the context-by-word alignment features (as in WANE-wc) is not as efficient as abstracting word-by-word matching information from text sequences.,5.1 Link Prediction,[0],[0]
"We observe the same trend and the superiority of our WANE-ww models on the other two datasets, HepTh and Zhihu datasets, as shown in Table 2 and 3, respectively.",5.1 Link Prediction,[0],[0]
We further evaluate the effectiveness of proposed framework on vertex classification tasks with the Cora dataset.,5.2 Multi-label Vertex Classification,[0],[0]
"Similar to Tu et al. (2017), we generate the global embedding for each vertex by taking the average over its context-aware embeddings with all other connected vertices.",5.2 Multi-label Vertex Classification,[0],[0]
"As shown in Figure 3(c), semantic-aware NE methods (including naive combination, TADW, CENE, CANE) exhibit higher test accuracies than semantic-agnostic models, demonstrating the advantages of incorporating textual information.",5.2 Multi-label Vertex Classification,[0],[0]
"Moreover, WANEww consistently outperforms other competitive semantic-aware models on a wide range of labeled proportions, suggesting that explicitly capturing word-by-word alignment features is not only use-
ful for vertex-pair-based tasks, such as link prediction, but also results in better global embeddings which are required for vertex classification tasks.",5.2 Multi-label Vertex Classification,[0],[0]
"These observations further demonstrate that WANE-ww is an effective and robust framework to extract informative network representations.
",5.2 Multi-label Vertex Classification,[0],[0]
"Semi-supervised classification We further consider the case where the training ratio is less than 10%, and evaluate the learned network embedding with a semi-supervised classifier.",5.2 Multi-label Vertex Classification,[0],[0]
"Following Yang et al. (2015), we employ a Transductive SVM (TSVM) classifier with a linear kernel (Joachims, 1998) for fairness.",5.2 Multi-label Vertex Classification,[0],[0]
"As illustrated in Table 4, the proposed WANE-ww model exhibits superior performances in most cases.",5.2 Multi-label Vertex Classification,[0],[0]
"This may be due to the fact that WANE-ww extracts information from the vertices and text sequences jointly, thus the obtained vertex embeddings are less noisy and perform more consistently with relatively small training ratios (Yang et al., 2015).",5.2 Multi-label Vertex Classification,[0],[0]
"Motivated by the observation in Wang and Jiang (2017) that the advantages of different functions to match two vectors vary from task to task, we further explore the choice of alignment and aggregation functions in our WANE-ww model.",5.3 Ablation Study,[0],[0]
"To match the word pairs between two sequences, we experimented with three types of operations: sub-
traction, multiplication, and Sub & Multi (the concatenation of both approaches).",5.3 Ablation Study,[0],[0]
"As shown in Figure 3(a) and 3(b), element-wise subtraction tends to be the most effective operation performancewise on both Cora and Zhihu datasets, and performs comparably to Sub & Multi on the HepTh dataset.",5.3 Ablation Study,[0],[0]
"This finding is consistent with the results in Wang and Jiang (2017), where they found that simple comparison functions based on elementwise operations work very well on matching text sequences.
",5.3 Ablation Study,[0],[0]
"In terms of the aggregation functions, we compare (one-layer) CNN, mean-pooling, and maxpooling operations to accumulate the matching vectors.",5.3 Ablation Study,[0],[0]
"As shown in Figure 3(b), max-pooling has the best empirical results on all three datasets.",5.3 Ablation Study,[0],[0]
"This may be attributed to the fact that the maxpooling operation is better at selecting important word-by-word alignment features, among all matching vectors available, to infer the relationship between vertices.",5.3 Ablation Study,[0],[0]
"Embedding visualization To visualize the learned network representations, we further employ t-SNE to map the low-dimensional vectors of the vertices to a 2-D embedding space.",5.4 Qualitative Analysis,[0],[0]
"We use the Cora dataset because there are labels associated with each vertex and WANE-ww to obtain the network embeddings.
",5.4 Qualitative Analysis,[0],[0]
"As shown in Figure 4 where each point indicates one paper (vertex), and the color of each point indicates the category it belongs to, the embeddings of the same label are indeed very close in the 2-D plot, while those with different labels are relatively farther from each other.",5.4 Qualitative Analysis,[0],[0]
"Note that the model is not trained with any label information, indicating that WANE-ww has extracted meaningful patterns from the text and vertex information available.
",5.4 Qualitative Analysis,[0],[0]
Case study The proposed word-by-word alignment mechanism can be used to highlight the most informative words (and the corresponding matching features) wrt the relationship between vertices.,5.4 Qualitative Analysis,[0],[0]
We visualize the norm of matching vector obtained in (11) in Figure 5 for the Cora dataset.,5.4 Qualitative Analysis,[0],[0]
"It can be observed that matched key words, e.g., ‘MCMC’, ‘convergence’, between the text sequences are indeed assigned higher values in the matching vectors.",5.4 Qualitative Analysis,[0],[0]
These words would be selected preferentially by the final max-pooling aggregation operation.,5.4 Qualitative Analysis,[0],[0]
This indicates that WANEww is able to abstract important word-by-word alignment features from paired text sequences.,5.4 Qualitative Analysis,[0],[0]
We have presented a novel framework to incorporate the semantic information from vertexassociated text sequences into network embeddings.,6 Conclusions,[0],[0]
"An align-aggregate framework is introduced, which first aligns a sentence pair by capturing the word-by-word matching features, and then adaptively aggregating these word-level alignment
information with an efficient max-pooling function.",6 Conclusions,[0],[0]
"The semantic features abstracted are further encoded, along with the structural information, into a shared space to obtain the final network embedding.",6 Conclusions,[0],[0]
Compelling experimental results on several tasks demonstrated the advantages of our approach.,6 Conclusions,[0],[0]
"In future work, we aim to leverage abundant unlabeled text data to abstract more informative sentence representations (Dai and Le, 2015; Zhang et al., 2017; Shen et al., 2017; Tang and de Sa, 2018) .",6 Conclusions,[0],[0]
"Another interesting direction is to learn binary and compact network embedding, which could be more efficient in terms of both computation and memory, relative to its continuous counterpart (Shen et al., 2018b).
",6 Conclusions,[0],[0]
"Acknowledgments This research was supported in part by DARPA, DOE, NIH, ONR and NSF.",6 Conclusions,[0],[0]
"Network embeddings, which learn lowdimensional representations for each vertex in a large-scale network, have received considerable attention in recent years.",abstractText,[0],[0]
"For a wide range of applications, vertices in a network are typically accompanied by rich textual information such as user profiles, paper abstracts, etc.",abstractText,[0],[0]
We propose to incorporate semantic features into network embeddings by matching important words between text sequences for all pairs of vertices.,abstractText,[0],[0]
"We introduce a word-by-word alignment framework that measures the compatibility of embeddings between word pairs, and then adaptively accumulates these alignment features with a simple yet effective aggregation function.",abstractText,[0],[0]
"In experiments, we evaluate the proposed framework on three real-world benchmarks for downstream tasks, including link prediction and multi-label vertex classification.",abstractText,[0],[0]
Results demonstrate that our model outperforms state-of-the-art network embedding methods by a large margin.,abstractText,[0],[0]
Improved Semantic-Aware Network Embedding with Fine-Grained Word Alignment,title,[0],[0]
At the heart of natural language parsing is the challenge of representing the “state” of an algorithm— what parts of a parse have been built and what parts of the input string are not yet accounted for— as it incrementally constructs a parse.,1 Introduction,[0],[0]
"Traditional approaches rely on independence assumptions, decomposition of scoring functions, and/or greedy approximations to keep this space manageable.",1 Introduction,[0],[0]
"Continuous-state parsers have been proposed, in which the state is embedded as a vector (Titov and Henderson, 2007; Stenetorp, 2013; Chen and Manning, 2014; Dyer et al., 2015; Zhou et al., 2015; Weiss et al., 2015).",1 Introduction,[0],[0]
"Dyer et al. reported state-of-the-art performance on English and Chinese benchmarks using a transition-based parser whose continuous-state embeddings were constructed using LSTM recurrent neural networks (RNNs) whose parameters were estimated to maximize the probability of a gold-standard sequence of parse actions.
",1 Introduction,[0],[0]
"The primary contribution made in this work is to take the idea of continuous-state parsing a step further by making the word embeddings that are used to construct the parse state sensitive to the morphology of the words.1 Since it it is well known that a word’s form often provides strong evidence regarding its grammatical role in morphologically rich languages (Ballesteros, 2013, inter alia), this has promise to improve accuracy and statistical efficiency relative to traditional approaches that treat each word type as opaque and independently modeled.",1 Introduction,[0],[0]
"In the traditional parameterization, words with similar grammatical roles will only be embedded near each other if they are observed in similar contexts with sufficient frequency.",1 Introduction,[0],[0]
"Our approach reparameterizes word embeddings using the same RNN machinery used in the parser: a word’s vector is calculated based on the sequence of orthographic symbols representing it (§3).
",1 Introduction,[0],[0]
"Although our model is provided no supervision in the form of explicit morphological annotation, we find that it gives a large performance increase when parsing morphologically rich languages in the SPMRL datasets (Seddah et al., 2013; Seddah and Tsarfaty, 2014), especially in agglutinative languages and the ones that present extensive case systems (§4).",1 Introduction,[0],[0]
"In languages that show little morphology, performance remains good, showing that the RNN composition strategy is capable of capturing both morphological regularities and arbitrariness in the sense of Saussure (1916).",1 Introduction,[0],[0]
"Finally, a particularly noteworthy result is that we find that character-based word embeddings in some cases obviate explicit POS information, which is usually found to be indispensable for accurate parsing.
",1 Introduction,[0],[0]
A secondary contribution of this work is to show that the continuous-state parser of Dyer et al. (2015) can learn to generate nonprojective trees.,1 Introduction,[0],[0]
"We do this by augmenting its transition operations
1Software for replicating the experiments is available from https://github.com/clab/lstm-parser.
",1 Introduction,[0],[0]
"ar X
iv :1
50 8.
00 65
7v 2
[ cs
.C",1 Introduction,[0],[0]
"L
] 1
1 A
ug 2
01 5
with a SWAP operation (Nivre, 2009) (§2.4), enabling the parser to produce nonprojective dependencies which are often found in morphologically rich languages.",1 Introduction,[0],[0]
"We begin by reviewing the parsing approach of Dyer et al. (2015) on which our work is based.
",2 An LSTM Dependency Parser,[0],[0]
"Like most transition-based parsers, Dyer et al.’s parser can be understood as the sequential manipulation of three data structures: a buffer B initialized with the sequence of words to be parsed, a stack S containing partially-built parses, and a list A of actions previously taken by the parser.",2 An LSTM Dependency Parser,[0],[0]
"In particular, the parser implements the arc-standard parsing algorithm (Nivre, 2004).
",2 An LSTM Dependency Parser,[0],[0]
"At each time step t, a transition action is applied that alters these data structures by pushing or popping words from the stack and the buffer; the operations are listed in Figure 1.
",2 An LSTM Dependency Parser,[0],[0]
"Along with the discrete transitions above, the parser calculates a vector representation of the states of B, S, and A; at time step t these are denoted by bt, st, and at, respectively.",2 An LSTM Dependency Parser,[0],[0]
"The total parser state at t is given by
pt = max {0,W[st;bt;at] + d} (1)
where the matrix W and the vector d are learned parameters.",2 An LSTM Dependency Parser,[0],[0]
"This continuous-state representation pt is used to decide which operation to apply next, updating B, S, and A (Figure 1).
",2 An LSTM Dependency Parser,[0],[0]
"We elaborate on the design of bt, st, and at using RNNs in §2.1, on the representation of partial parses in S in §2.2, and on the parser’s decision mechanism in §2.3.",2 An LSTM Dependency Parser,[0],[0]
We discuss the inclusion of SWAP in §2.4.,2 An LSTM Dependency Parser,[0],[0]
RNNs are functions that read a sequence of vectors incrementally; at time step t the vector xt is read in and the hidden state ht computed using xt and the previous hidden state ht−1.,2.1 Stack LSTMs,[0],[0]
"In principle, this allows retaining information from time steps in the distant past, but the nonlinear “squashing” functions applied in the calcluation of each ht result in a decay of the error signal used in training with backpropagation.",2.1 Stack LSTMs,[0],[0]
"LSTMs are a variant of RNNs designed to cope with this “vanishing gradient” problem using an extra memory “cell” (Hochreiter and Schmidhuber, 1997; Graves, 2013).
",2.1 Stack LSTMs,[0],[0]
Past work explains the computation within an LSTM through the metaphors of deciding how much of the current input to pass into memory (it) or forget (ft).,2.1 Stack LSTMs,[0],[0]
"We refer interested readers to the original papers and present only the recursive equations updating the memory cell ct and hidden state ht given xt, the previous hidden state ht−1, and the memory cell ct−1:
it = σ(Wixxt +Wihht−1 +Wicct−1 + bi)
ft = 1− it ct = ft ct−1+
it tanh(Wcxxt",2.1 Stack LSTMs,[0],[0]
+Wchht−1 + bc) ot = σ(Woxxt,2.1 Stack LSTMs,[0],[0]
"+Wohht−1 +Wocct + bo)
ht = ot tanh(ct),
where σ is the component-wise logistic sigmoid function and is the component-wise (Hadamard) product.",2.1 Stack LSTMs,[0],[0]
Parameters are all represented using W and b.,2.1 Stack LSTMs,[0],[0]
"This formulation differs slightly from the classic LSTM formulation in that it makes use of “peephole connections” (Gers et al., 2002) and defines the forget gate so that it sums with the input gate to 1 (Greff et al., 2015).",2.1 Stack LSTMs,[0],[0]
"To improve the representational capacity of LSTMs (and RNNs generally), they can be stacked in “layers.”",2.1 Stack LSTMs,[0],[0]
"In these architectures, the input LSTM at higher layers at time t is the value of ht computed by the lower layer (and xt is the input at the lowest layer).
",2.1 Stack LSTMs,[0],[0]
The stack LSTM augments the left-to-right sequential model of the conventional LSTM with a stack pointer.,2.1 Stack LSTMs,[0],[0]
"As in the LSTM, new inputs are added in the right-most position, but the stack pointer indicates which LSTM cell provides ct−1 and ht−1 for the computation of the next iterate.",2.1 Stack LSTMs,[0],[0]
"Further, the stack LSTM provides a pop operation that moves the stack pointer to the previous element.",2.1 Stack LSTMs,[0],[0]
"Hence each of the parser data structures (B, S, and A) is implemented with its own stack LSTM, each with its own parameters.",2.1 Stack LSTMs,[0],[0]
"The values of bt, st, and at are the ht vectors from their respective stack LSTMs.",2.1 Stack LSTMs,[0],[0]
"Whenever a REDUCE operation is selected, two tree fragments are popped off of S and combined to form a new tree fragment, which is then popped back onto S (see Figure 1).",2.2 Composition Functions,[0],[0]
"This tree must be embedded as an input vector xt.
",2.2 Composition Functions,[0],[0]
"To do this, Dyer et al. (2015) use a recursive neural network gr (for relation r) that composes
the representations of the two subtrees popped from S (we denote these by u and v), resulting in a new vector gr(u,v) or gr(v,u), depending on the direction of attachment.",2.2 Composition Functions,[0],[0]
The resulting vector embeds the tree fragment in the same space as the words and other tree fragments.,2.2 Composition Functions,[0],[0]
"This kind of composition was thoroughly explored in prior work (Socher et al., 2011; Socher et al., 2013b; Hermann and Blunsom, 2013; Socher et al., 2013a); for details, see Dyer et al. (2015).",2.2 Composition Functions,[0],[0]
"The parser uses a probabilistic model of parser decisions at each time step t. Letting A(S,B) denote the set of allowed transitions given the stack S and buffer S (i.e., those where preconditions are met; see Figure 1), the probability of action z ∈ A(S,B) defined using a log-linear distribution:
p(z | pt) = exp
( g>z pt + qz )∑ z′∈A(S,B) exp",2.3 Predicting Parser Decisions,[0],[0]
"( g>z′pt + qz′
) (2) (where gz and qz are parameters associated with each action type z).
",2.3 Predicting Parser Decisions,[0],[0]
"Parsing proceeds by always choosing the most probable action from A(S,B).",2.3 Predicting Parser Decisions,[0],[0]
"The probabilistic definition allows parameter estimation for all of the parameters (W∗, b∗ in all three stack LSTMs, as well as W, d, g∗, and q∗) by maximizing the conditional likelihood of each correct parser decisions given the state.",2.3 Predicting Parser Decisions,[0],[0]
"Dyer et al. (2015)’s parser implemented the most basic version of the arc-standard algorithm, which is capable of producing only projective parse trees.",2.4 Adding the SWAP Operation,[0],[0]
"In order to deal with nonprojective trees, we also add the SWAP operation which allows nonprojective trees to be produced.
",2.4 Adding the SWAP Operation,[0],[0]
"The SWAP operation, first introduced by Nivre (2009), allows a transition-based parser to produce
nonprojective trees.",2.4 Adding the SWAP Operation,[0],[0]
"Here, the inclusion of the SWAP operation requires breaking the linearity of the stack by removing tokens that are not at the top of the stack.",2.4 Adding the SWAP Operation,[0],[0]
This is easily handled with the stack LSTM.,2.4 Adding the SWAP Operation,[0],[0]
"Figure 1 shows how the parser is capable of moving words from the stack (S) to the buffer (B), breaking the linear order of words.",2.4 Adding the SWAP Operation,[0],[0]
"Since a node that is swapped may have already been assigned as the head of a dependent, the buffer (B) can now also contain tree fragments.",2.4 Adding the SWAP Operation,[0],[0]
The main contribution of this paper is to change the word representations.,3 Word Representations,[0],[0]
"In this section, we present the standard word embeddings as in Dyer et al. (2015), and the improvements we made generating word embeddings designed to capture morphology based on orthographic strings.",3 Word Representations,[0],[0]
"Dyer et al.’s parser generates a word representation for each input token by concatenating two vectors: a vector representation for each word type (w) and a representation (t) of the POS tag of the token (if it is used), provided as auxiliary input to the parser.2 A linear map (V) is applied to the resulting vector and passed through a component-wise ReLU:
x = max {0,V[w; t] + b}
For out-of-vocabulary words, the parser uses an “UNK” token that is handled as a separate word during parsing time.",3.1 Baseline: Standard Word Embeddings,[0],[0]
"This mapping can be shown schematically as in Figure 2.
2Dyer et al. (2015), included a third input representation learned from a neural language model (w̃LM).",3.1 Baseline: Standard Word Embeddings,[0],[0]
"We do not include these pretrained representations in our experiments, focusing instead on character-based representations.",3.1 Baseline: Standard Word Embeddings,[0],[0]
"Following Ling et al. (2015), we compute character-based continuous-space vector embeddings of words using bidirectional LSTMs (Graves and Schmidhuber, 2005).",3.2 Character-Based Embeddings of Words,[0],[0]
"When the parser initiates the learning process and populates the buffer with all the words from the sentence, it reads the words character by character from left to right and computes a continuous-space vector embedding the character sequence, which is the h vector of the LSTM; we denote it by → w.",3.2 Character-Based Embeddings of Words,[0],[0]
"The same process is also applied in reverse (albeit with different parameters), computing a similar continuous-space vector embedding starting from the last character and finishing at the first ( ← w); again each character is represented with an LSTM cell.",3.2 Character-Based Embeddings of Words,[0],[0]
"After that, we concatenate these vectors and a (learned) representation of their tag to produce the representation w.",3.2 Character-Based Embeddings of Words,[0],[0]
"As in §3.1, a linear map (V) is applied and passed through a component-wise ReLU.
",3.2 Character-Based Embeddings of Words,[0],[0]
"x = max { 0,V",3.2 Character-Based Embeddings of Words,[0],[0]
[ → w; ← w; t] + b },3.2 Character-Based Embeddings of Words,[0],[0]
"This process is shown schematically in Figure 3.
",3.2 Character-Based Embeddings of Words,[0],[0]
"Note that under this representation, out-ofvocabulary words are treated as bidirectional LSTM encodings and thus they will be “close” to other words that the parser has seen during training, ideally close to their more frequent, syntactically similar morphological relatives.",3.2 Character-Based Embeddings of Words,[0],[0]
"We conjecture that this will give a clear advantage over a single “UNK” token for all the words that the parser does not see during training, as done by Dyer et al. (2015) and other parsers without additional resources.",3.2 Character-Based Embeddings of Words,[0],[0]
In §4 we confirm this hypothesis.,3.2 Character-Based Embeddings of Words,[0],[0]
"We applied our parsing model and several variations of it to several parsing tasks and report re-
sults below.",4 Experiments,[0],[0]
"In order to find out whether the character-based representations are capable of learning the morphology of words, we applied the parser to morphologically rich languages specifically the treebanks of the SPMRL shared task (Seddah et al., 2013; Seddah and Tsarfaty, 2014): Arabic (Maamouri et al., 2004), Basque (Aduriz et al., 2003), French (Abeillé et al., 2003), German (Seeker and Kuhn, 2012), Hebrew (Sima’an et al., 2001), Hungarian (Vincze et al., 2010), Korean (Choi, 2013), Polish (Świdziński and Woliński, 2010) and Swedish (Nivre et al., 2006b).",4.1 Data,[0],[0]
"For all the corpora of the SPMRL Shared Task we used predicted POS tags as provided by the shared task organizers.3 For these datasets, evaluation is calculated using eval07.pl, which includes punctuation.
",4.1 Data,[0],[0]
"We also experimented with the Turkish dependency treebank4 (Oflazer et al., 2003) of the CoNLL-X Shared Task (Buchholz and Marsi, 2006).",4.1 Data,[0],[0]
"We used gold POS tags, as is common with the CoNLL-X data sets.
",4.1 Data,[0],[0]
"To put our results in context with the most recent neural network transition-based parsers, we run the parser in the same Chinese and English
3The POS tags were calculated with the MarMot tagger (Müller et al., 2013) by the best performing system of the SPMRL Shared Task (Björkelund et al., 2013).",4.1 Data,[0],[0]
Arabic: 97.38.,4.1 Data,[0],[0]
Basque: 97.02.,4.1 Data,[0],[0]
French: 97.61.,4.1 Data,[0],[0]
German: 98.10.,4.1 Data,[0],[0]
Hebrew: 97.09.,4.1 Data,[0],[0]
Hungarian: 98.72.,4.1 Data,[0],[0]
Korean: 94.03.,4.1 Data,[0],[0]
Polish: 98.12.,4.1 Data,[0],[0]
"Swedish: 97.27.
4Since the Turkish dependency treebank does not have a development set, we extracted the last 150 sentences from the 4996 sentences of the training set as a development set.
setups as Chen and Manning (2014) and Dyer et al. (2015).",4.1 Data,[0],[0]
"For Chinese, we use the Penn Chinese Treebank 5.1 (CTB5) following Zhang and Clark (2008b),5 with gold POS tags.",4.1 Data,[0],[0]
"For English, we used the Stanford Dependency (SD) representation of the Penn Treebank6 (Marcus et al., 1993; Marneffe et al., 2006).7.",4.1 Data,[0],[0]
"Results for Turkish, Chinese, and English are calculated using the CoNLL-X eval.pl script, which ignores punctuation symbols.",4.1 Data,[0],[0]
"In order to isolate the improvements provided by the LSTM encodings of characters, we run the stack LSTM parser in the following configurations:
• Words: words only, as in §3.1 (but without POS tags)
",4.2 Experimental Configurations,[0],[0]
"• Chars: character-based representations of words with bidirectional LSTMs, as in §3.2 (but without POS tags)
•",4.2 Experimental Configurations,[0],[0]
"Words + POS: words and POS tags (§3.1)
• Chars + POS: character-based representations of words with bidirectional LSTMs plus POS tags (§3.2)
",4.2 Experimental Configurations,[0],[0]
None of the experimental configurations include pretrained word-embeddings or any additional data resources.,4.2 Experimental Configurations,[0],[0]
"All experiments include the SWAP transition, meaning that nonprojective trees can be produced in any language.
Dimensionality.",4.2 Experimental Configurations,[0],[0]
The full version of our parsing model sets dimensionalities as follows.,4.2 Experimental Configurations,[0],[0]
"LSTM hidden states are of size 100, and we use two layers of LSTMs for each stack.",4.2 Experimental Configurations,[0],[0]
"Embeddings of the parser actions used in the composition functions have 20 dimensions, and the output embedding size is 20 dimensions.",4.2 Experimental Configurations,[0],[0]
"The learned word representations embeddings have 32 dimensions when used, while the character-based representations have 100 dimensions, when used.",4.2 Experimental Configurations,[0],[0]
Part of speech embeddings have 12 dimensions.,4.2 Experimental Configurations,[0],[0]
"These dimensionalities were chosen after running several tests with different values, but a more careful selection of these values would probably further improve results.
",4.2 Experimental Configurations,[0],[0]
"5Training: 001–815, 1001–1136.",4.2 Experimental Configurations,[0],[0]
"Development: 886– 931, 1148–1151.",4.2 Experimental Configurations,[0],[0]
"Test: 816–885, 1137–1147.
",4.2 Experimental Configurations,[0],[0]
6Training: 02–21.,4.2 Experimental Configurations,[0],[0]
Development: 22.,4.2 Experimental Configurations,[0],[0]
Test: 23.,4.2 Experimental Configurations,[0],[0]
"7The POS tags are predicted by using the Stanford Tagger
(Toutanova et al., 2003) with an accuracy of 97.3%.",4.2 Experimental Configurations,[0],[0]
Parameters are initialized randomly—refer to Dyer et al. (2015) for specifics—and optimized using stochastic gradient descent (without minibatches) using derivatives of the negative log likelihood of the sequence of parsing actions computed using backpropagation.,4.3 Training Procedure,[0],[0]
"Training is stopped when the learned model’s UAS stops improving on the development set, and this model is used to parse the test set.",4.3 Training Procedure,[0],[0]
No pretraining of any parameters is done.,4.3 Training Procedure,[0],[0]
"Tables 1 and 2 show the results of the parsers for the development sets and the final test sets, respectively.",4.4 Results and Discussion,[0],[0]
"Most notable are improvements for agglutinative languages—Basque, Hungarian, Korean, and Turkish—both when POS tags are included and when they are not.",4.4 Results and Discussion,[0],[0]
"Consistently, across all languages, Chars outperforms Words, suggesting that the character-level LSTMs are learning representations that capture similar information to parts of speech.",4.4 Results and Discussion,[0],[0]
"On average, Chars is on par with Words + POS, and the best average of labeled attachment scores is achieved with Chars + POS.
",4.4 Results and Discussion,[0],[0]
"It is common practice to encode morphological information in treebank POS tags; for instance, the Penn Treebank includes English number and tense (e.g., NNS is plural noun and VBD is verb in past tense).",4.4 Results and Discussion,[0],[0]
"Even if our character-based representations are capable of encoding the same kind of information, existing POS tags suffice for high accuracy.",4.4 Results and Discussion,[0],[0]
"However, the POS tags in treebanks for morphologically rich languages do not seem to be enough.
",4.4 Results and Discussion,[0],[0]
"Swedish, English, and French use suffixes for the verb tenses and number,8 while Hebrew uses prepositional particles rather than grammatical case.",4.4 Results and Discussion,[0],[0]
"Tsarfaty (2006) and Cohen and Smith (2007) argued that, for Hebrew, determining the correct morphological segmentation is dependent on syntactic context.",4.4 Results and Discussion,[0],[0]
"Our approach sidesteps this step, capturing the same kind of information in the vectors, and learning it from syntactic context.",4.4 Results and Discussion,[0],[0]
"Even for Chinese, which is not morphologically rich, Chars shows a benefit over Words, perhaps by capturing regularities in syllable structure within words.
",4.4 Results and Discussion,[0],[0]
"8Tense and number features provide little improvement in a transition-based parser, compared with other features such as case, when the POS tags are included (Ballesteros, 2013).",4.4 Results and Discussion,[0],[0]
Figure 4 visualizes a sample of the characterbased bidirectional LSTMs’s learned representations (Chars).,4.4.1 Learned Word Representations,[0],[0]
"Clear clusters of past tense verbs, gerunds, and other syntactic classes are visible.",4.4.1 Learned Word Representations,[0],[0]
The colors in the figure represent the most common POS tag for each word.,4.4.1 Learned Word Representations,[0],[0]
The character-based representation for words is notably beneficial for out-of-vocabulary (OOV) words.,4.4.2 Out-of-Vocabulary Words,[0],[0]
We tested this specifically by comparing Chars to a model in which all OOVs are replaced by the string “UNK” during parsing.,4.4.2 Out-of-Vocabulary Words,[0],[0]
"This always has a negative effect on LAS (average−4.5 points,
−2.8 UAS).",4.4.2 Out-of-Vocabulary Words,[0],[0]
"Figure 5 shows how this drop varies with the development OOV rate across treebanks; most extreme is Korean, which drops 15.5 LAS.",4.4.2 Out-of-Vocabulary Words,[0],[0]
"A similar, but less pronounced pattern, was observed for models that include POS.
",4.4.2 Out-of-Vocabulary Words,[0],[0]
"Interestingly, this artificially impoverished model is still consistently better than Words for all languages (e.g., for Korean, by 4 LAS).",4.4.2 Out-of-Vocabulary Words,[0],[0]
"This implies that not all of the improvement is due to OOV words; statistical sharing across orthographically close words is beneficial, as well.",4.4.2 Out-of-Vocabulary Words,[0],[0]
"The character-based representations make the parser slower, since they require composing the character-based bidirectional LSTMs for each
word of the input sentence; however, at test time these results could be cached.",4.4.3 Computational Requirements,[0],[0]
"On average, Words parses a sentence in 44 ms, whileChars needs 130 ms.9 Training time is affected by the same cons-
9We are using a machine with 32 Intel Xeon CPU E52650 at 2.00GHz; the parser runs on a single core.
tant, needing some hours to have a competitive model.",4.4.3 Computational Requirements,[0],[0]
"In terms of memory, Words requires on average 300 MB of main memory for both training and parsing, while Chars requires 450 MB.",4.4.3 Computational Requirements,[0],[0]
Table 3 shows a comparison with state-of-theart parsers.,4.4.4 Comparison with State-of-the-Art,[0],[0]
"We include greedy transition-based parsers that, like ours, do not apply a beam search (Zhang and Clark, 2008b) or a dynamic oracle (Goldberg and Nivre, 2013).",4.4.4 Comparison with State-of-the-Art,[0],[0]
"For all the SPMRL languages we show the results of Ballesteros (2013), who reported results after carrying out a careful automatic morphological feature selection experiment.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"For Turkish, we show the results of Nivre et al. (2006a) which also carried out a careful manual morphological feature selection.",4.4.4 Comparison with State-of-the-Art,[0],[0]
Our parser outperforms these in most cases.,4.4.4 Comparison with State-of-the-Art,[0],[0]
"Since those systems rely on morphological features, we believe that this comparison shows even more that the character-based representations are capturing morphological information, though without explicit morphological features.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"For English and Chinese, we report (Dyer et al., 2015) which is Words + POS but with pretrained word embeddings.
",4.4.4 Comparison with State-of-the-Art,[0],[0]
We also show the best reported results on these datasets.,4.4.4 Comparison with State-of-the-Art,[0],[0]
"For the SPMRL data sets, the best performing system of the shared task is either Björkelund et al. (2013) or Björkelund et al. (2014), which are consistently better than our sys-
tem for all languages.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"Note that the comparison is harsh to our system, which does not use unlabeled data or explicit morphological features nor any combination of different parsers.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"For Turkish, we report the results of Koo et al. (2010), which only reported unlabeled attachment scores.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"For English, we report (Weiss et al., 2015) and for Chinese, we report (Dyer et al., 2015) which is Words + POS but with pretrained word embeddings.",4.4.4 Comparison with State-of-the-Art,[0],[0]
"Character-based representations have been explored in other NLP tasks; for instance, dos Santos and Zadrozny (2014) and dos Santos and Guimarães (2015)",5 Related Work,[0],[0]
"learned character-level neural representations for POS tagging and named entity recognition, getting a large error reduction in both tasks.",5 Related Work,[0],[0]
Our approach is similar to theirs.,5 Related Work,[0],[0]
Others have used character-based models as features to improve existing models.,5 Related Work,[0],[0]
"For instance, Chrupała (2014) used character-based recurrent neural networks to normalize tweets.
",5 Related Work,[0],[0]
"Botha and Blunsom (2014) show that stems, prefixes and suffixes can be used to learn useful word representations but relying on an external morphological analyzer.",5 Related Work,[0],[0]
"That is, they learn the morpheme-meaning relationship with an additive model, whereas we do not need a morphological analyzer.",5 Related Work,[0],[0]
"Similarly, Chen et al. (2015) proposed joint learning of character and word embeddings for Chinese, claiming that characters contain rich information.
",5 Related Work,[0],[0]
Methods for joint morphological disambiguation and parsing have been widely explored Tsarfaty (2006; Cohen and Smith (2007; Goldberg and Tsarfaty (2008; Goldberg and Elhadad (2011).,5 Related Work,[0],[0]
"More recently, Bohnet et al. (2013) presented an arc-standard transition-based parser that performs competitively for joint morphological tagging and dependency parsing for richly inflected languages, such as Czech, Finnish, German, Hungarian, and Russian.",5 Related Work,[0],[0]
"Our model seeks to achieve a similar benefit to parsing without explicitly reasoning about the internal structure of words.
",5 Related Work,[0],[0]
"Zhang et al. (2013) presented efforts on Chinese parsing with characters showing that Chinese can be parsed at the character level, and that Chinese word segmentation is useful for predicting the correct POS tags (Zhang and Clark, 2008a).
",5 Related Work,[0],[0]
"To the best of our knowledge, previous work has not used character-based embeddings to improve dependency parsers, as done in this paper.",5 Related Work,[0],[0]
We have presented several interesting findings.,6 Conclusion,[0],[0]
"First, we add new evidence that character-based representations are useful for NLP tasks.",6 Conclusion,[0],[0]
"In this paper, we demonstrate that they are useful for transition-based dependency parsing, since they are capable of capturing morphological information crucial for analyzing syntax.
",6 Conclusion,[0],[0]
"The improvements provided by the characterbased representations using bidirectional LSTMs are strong for agglutinative languages, such as
Basque, Hungarian, Korean, and Turkish, comparing favorably to POS tags as encoded in those languages’ currently available treebanks.",6 Conclusion,[0],[0]
"This outcome is important, since annotating morphological information for a treebank is expensive.",6 Conclusion,[0],[0]
"Our finding suggests that the best investment of annotation effort may be in dependencies, leaving morphological features to be learned implicitly from strings.
",6 Conclusion,[0],[0]
"The character-based representations are also a way of overcoming the out-of-vocabulary problem; without any additional resources, they enable the parser to substantially improve the performance when OOV rates are high.",6 Conclusion,[0],[0]
"We expect that, in conjunction with a pretraing regime, or in conjunction with distributional word embeddings, further improvements could be realized.",6 Conclusion,[0],[0]
MB was supported by the European Commission under the contract numbers FP7-ICT610411 (project MULTISENSOR) and H2020RIA-645012 (project KRISTINA).,Acknowledgments,[0],[0]
This research was supported by the U.S. Army Research Laboratory and the U.S. Army Research Office under contract/grant number W911NF-10-1-0533 and NSF IIS-1054319.,Acknowledgments,[0],[0]
This work was completed while NAS was at CMU.,Acknowledgments,[0],[0]
"Thanks to Joakim Nivre, Bernd Bohnet, Fei Liu and Swabha Swayamdipta for useful comments.",Acknowledgments,[0],[0]
We present extensions to a continuousstate dependency parsing method that makes it applicable to morphologically rich languages.,abstractText,[0],[0]
"Starting with a highperformance transition-based parser that uses long short-term memory (LSTM) recurrent neural networks to learn representations of the parser state, we replace lookup-based word representations with representations constructed from the orthographic representations of the words, also using LSTMs.",abstractText,[0],[0]
This allows statistical sharing across word forms that are similar on the surface.,abstractText,[0],[0]
Experiments for morphologically rich languages show that the parsing model benefits from incorporating the character-based encodings of words.,abstractText,[0],[0]
Improved Transition-Based Parsing by Modeling Characters instead of Words with LSTMs,title,[0],[0]
"Recent work on generative text modeling has found that variational autoencoders (VAE) with LSTM decoders perform worse than simpler LSTM language models (Bowman et al., 2015). This negative result is so far poorly understood, but has been attributed to the propensity of LSTM decoders to ignore conditioning information from the encoder. In this paper, we experiment with a new type of decoder for VAE: a dilated CNN. By changing the decoder’s dilation architecture, we control the size of context from previously generated words. In experiments, we find that there is a trade-off between contextual capacity of the decoder and effective use of encoding information. We show that when carefully managed, VAEs can outperform LSTM language models. We demonstrate perplexity gains on two datasets, representing the first positive language modeling result with VAE. Further, we conduct an in-depth investigation of the use of VAE (with our new decoding architecture) for semi-supervised and unsupervised labeling tasks, demonstrating gains over several strong baselines.",text,[0],[0]
"Generative models play an important role in NLP, both in their use as language models and because of their ability to effectively learn from unlabeled data.",1. Introduction,[0],[0]
"By parameterzing generative models using neural nets, recent work has proposed model classes that are particularly expressive and can pontentially model a wide range of phenomena in language and other modalities.",1. Introduction,[0],[0]
"We focus on a specific instance
1Carnegie Mellon University.",1. Introduction,[0],[0]
"Correspondence to: Zichao Yang <zichaoy@cs.cmu.edu>.
",1. Introduction,[0],[0]
"Proceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017.",1. Introduction,[0],[0]
"Copyright 2017 by the author(s).
of this class: the variational autoencoder1 (VAE) (Kingma & Welling, 2013).
",1. Introduction,[0],[0]
"The generative story behind the VAE (to be described in detail in the next section) is simple: First, a continuous latent representation is sampled from a multivariate Gaussian.",1. Introduction,[0],[0]
"Then, an output is sampled from a distribution parameterized by a neural decoder, conditioned on the latent representation.",1. Introduction,[0],[0]
"The latent representation (treated as a latent variable during training) is intended to give the model more expressive capacity when compared with simpler neural generative models–for example, conditional language models.",1. Introduction,[0],[0]
"The choice of decoding architecture and final output distribution, which connect the latent representation to output, depends on the kind of data being modeled.",1. Introduction,[0],[0]
"The VAE owes its name to an accompanying variational technique (Kingma & Welling, 2013) that has been successfully used to train such models on image data (Gregor et al., 2015; Salimans et al., 2015; Yan et al., 2016).
",1. Introduction,[0],[0]
"The application of VAEs to text data has been far less successful (Bowman et al., 2015; Miao et al., 2016).",1. Introduction,[0],[0]
"The obvious choice for decoding architecture for a textual VAE is an LSTM, a typical workhorse in NLP.",1. Introduction,[0],[0]
"However, Bowman et al. (2015) found that using an LSTM-VAE for text modeling yields higher perplexity on held-out data than using an LSTM language model.",1. Introduction,[0],[0]
"In particular, they observe that the LSTM decoder in VAE does not make effective use of the latent representation during training and, as a result, VAE collapses into a simple language model.",1. Introduction,[0],[0]
"Related work (Miao et al., 2016; Larochelle & Lauly, 2012; Mnih & Gregor, 2014) has used simpler decoders that model text as a bag of words.",1. Introduction,[0],[0]
"Their results indicate better use of latent representations, but their decoders cannot effectively model longer-range dependencies in text and thus underperform in terms of final perplexity.
",1. Introduction,[0],[0]
"Motivated by these observations, we hypothesize that the contextual capacity of the decoder plays an important role in whether VAEs effectively condition on the latent representation when trained on text data.",1. Introduction,[0],[0]
"We propose the use of a dilated CNN as a decoder in VAE, inspired by the recent success of using CNNs for audio, image and language
1The name VAE is often used to refer to both a model class and an associated inference procedure.
modeling (van den Oord et al., 2016a; Kalchbrenner et al., 2016a; van den Oord et al., 2016b).",1. Introduction,[0],[0]
"In contrast with prior work where extremely large CNNs are used, we exploit the dilated CNN for its flexibility in varying the amount of conditioning context.",1. Introduction,[0],[0]
"In the two extremes, depending on the choice of dilation, the CNN decoder can reproduce a simple MLP using a bags of words representation of text, or can reproduce the long-range dependence of recurrent architectures (like an LSTM) by conditioning on the entire history.",1. Introduction,[0],[0]
"Thus, by choosing a dilated CNN as the decoder, we are able to conduct experiments where we vary contextual capacity, finding a sweet spot where the decoder can accurately model text but does not yet overpower the latent representation.
",1. Introduction,[0],[0]
"We demonstrate that when this trade-off is correctly managed, textual VAEs can perform substantially better than simple LSTM language models, a finding consistent with recent image modeling experiments using variational lossy autoencoders (Chen et al., 2016).",1. Introduction,[0],[0]
"We go on to show that VAEs with carefully selected CNN decoders can be quite effective for semi-supervised classification and unsupervised clustering, outperforming several strong baselines (from (Dai & Le, 2015)) on both text categorization and sentiment analysis.
",1. Introduction,[0],[0]
"Our contributions are as follows: First, we propose the use of a dilated CNN as a new decoder for VAE.",1. Introduction,[0],[0]
"We then empirically evaluate several dilation architectures with different capacities, finding that reduced contextual capacity leads to stronger reliance on latent representations.",1. Introduction,[0],[0]
"By picking a decoder with suitable contextual capacity, we find our VAE performs better than LSTM language models on two data sets.",1. Introduction,[0],[0]
"We also explore the use of dilated CNN VAEs for semi-supervised classification and find they perform better than strong baselines from (Dai & Le, 2015).",1. Introduction,[0],[0]
"Finally, we verify that the same framework can be used effectively for unsupervised clustering.",1. Introduction,[0],[0]
"In this section, we begin by providing background on the use of variational autoencoders for language modeling.",2. Model,[0],[0]
Then we introduce the dilated CNN architecture that we will use as a new decoder for VAE in experiments.,2. Model,[0],[0]
"Finally, we describe the generalization of VAE that we will use to conduct experiments on semi-supervised classification.",2. Model,[0],[0]
"Neural language models (Mikolov et al., 2010) typically generate each token xt conditioned on the entire history of previously generated tokens:
p(x) = ∏ t p(xt|x1, x2, ..., xt−1).",2.1. Background on Variational Autoencoders,[0],[0]
"(1)
State-of-the-art language models often parametrize these conditional probabilities using RNNs, which compute an evolving hidden state over the text which is used to predict each xt.",2.1. Background on Variational Autoencoders,[0],[0]
"This approach, though effective in modeling text, does not explicitly model variance in higher-level properties of entire utterances (e.g. topic or style) and thus can have difficulty with heterogeneous datasets.
",2.1. Background on Variational Autoencoders,[0],[0]
"Bowman et al. (2015) propose a different approach to generative text modeling inspired by related work on vision (Kingma & Welling, 2013).",2.1. Background on Variational Autoencoders,[0],[0]
"Instead of directly modeling the joint probability p(x) as in Equation 1, we specify a generative process for which p(x) is a marginal distribution.",2.1. Background on Variational Autoencoders,[0],[0]
"Specifically, we first generate a continuous latent vector representation z from a multivariate Gaussian prior pθ(z), and then generate the text sequence x from a conditional distribution pθ(x|z) parameterized using a neural net (often called the generation model or decoder).",2.1. Background on Variational Autoencoders,[0],[0]
"Because this model incorporates a latent variable that modulates the entire generation of each whole utterance, it may be better able to capture high-level sources of variation in the data.",2.1. Background on Variational Autoencoders,[0],[0]
"Specifically, in contrast with Equation 1, this generating distribution conditions on latent vector representation z:
pθ(x|z) = ∏ t pθ(xt|x1, x2, ..., xt−1, z).",2.1. Background on Variational Autoencoders,[0],[0]
"(2)
To estimate model parameters θ we would ideally like to maximize the marginal probability pθ(x) =∫ pθ(z)pθ(x|z)dz.",2.1. Background on Variational Autoencoders,[0],[0]
"However, computing this marginal is intractable for many decoder choices.",2.1. Background on Variational Autoencoders,[0],[0]
"Thus, the following variational lower bound is often used as an objective (Kingma & Welling, 2013):
log pθ(x) =",2.1. Background on Variational Autoencoders,[0],[0]
"− log ∫ pθ(z)pθ(x|z)dz
≥ Eqφ(z|x)[log pθ(x|z)]− KL(qφ(z|x)||pθ(z)).
",2.1. Background on Variational Autoencoders,[0],[0]
"Here, qφ(z|x) is an approximation to the true posterior (often called the recognition model or encoder) and is parameterized by φ.",2.1. Background on Variational Autoencoders,[0],[0]
"Like the decoder, we have a choice of neural architecture to parameterize the encoder.",2.1. Background on Variational Autoencoders,[0],[0]
"However, unlike the decoder, the choice of encoder does not change the model class – it only changes the variational approximation used in training, which is a function of both the model parameters θ and the approximation parameters φ.",2.1. Background on Variational Autoencoders,[0],[0]
Training seeks to optimize these parameters jointly using stochastic gradient ascent.,2.1. Background on Variational Autoencoders,[0],[0]
A final wrinkle of the training procedure involves a stochastic approximation to the gradients of the variational objective (which is itself intractable).,2.1. Background on Variational Autoencoders,[0],[0]
"We omit details here, noting only that the final distribution of the posterior approximation qφ(z|x) is typically assumed to be Gaussian so that a re-parametrization trick can be used, and refer readers to (Kingma & Welling, 2013).",2.1. Background on Variational Autoencoders,[0],[0]
"Together, this combination of generative model and variational inference procedure are often referred to as a variational autoencoder (VAE).",2.2. Training Collapse with Textual VAEs,[0],[0]
We can also view the VAE as a regularized version of the autoencoder.,2.2. Training Collapse with Textual VAEs,[0],[0]
"Note, however, that while VAEs are valid probabilistic models whose likelihood can be evaluated on held-out data, autoencoders are not valid models.",2.2. Training Collapse with Textual VAEs,[0],[0]
"If only the first term of the VAE variational bound Eqφ(z|x)[log pθ(x|z)] is used as an objective, the variance of the posterior probability qφ(z|x) will become small and the training procedure reduces to an autoencoder.",2.2. Training Collapse with Textual VAEs,[0],[0]
"It is the KL-divergence term, KL(qφ(z|x)||pθ(z)), that discourages the VAE memorizing each x as a single latent point.
",2.2. Training Collapse with Textual VAEs,[0],[0]
"While the KL term is critical for training VAEs, historically, instability on text has been evidenced by the KL term becoming vanishingly small during training, as observed by Bowman et al. (2015).",2.2. Training Collapse with Textual VAEs,[0],[0]
"When the training procedure collapses in this way, the result is an encoder that has duplicated the Gaussian prior (instead of a more interesting posterior), a decoder that completely ignores the latent variable z, and a learned model that reduces to a simpler language model.",2.2. Training Collapse with Textual VAEs,[0],[0]
We hypothesize that this collapse condition is related to the contextual capacity of the decoder architecture.,2.2. Training Collapse with Textual VAEs,[0],[0]
The choice encoder and decoder depends on the type of data.,2.2. Training Collapse with Textual VAEs,[0],[0]
"For images, these are typically MLPs or CNNs.",2.2. Training Collapse with Textual VAEs,[0],[0]
"LSTMs have been used for text, but have resulted in training collapse as discussed above (Bowman et al., 2015).",2.2. Training Collapse with Textual VAEs,[0],[0]
"Here, we propose to use a dilated CNN as the decoder instead.",2.2. Training Collapse with Textual VAEs,[0],[0]
"In one extreme, when the effective contextual width of a CNN is very large, it resembles the behavior of LSTM.",2.2. Training Collapse with Textual VAEs,[0],[0]
"When the width is very small, it behaves like a bag-ofwords model.",2.2. Training Collapse with Textual VAEs,[0],[0]
The architectural flexibility of dilated CNNs allows us to change the contextual capacity and conduct experiments to validate our hypothesis: decoder contextual capacity and effective use of encoding information are directly related.,2.2. Training Collapse with Textual VAEs,[0],[0]
We next describe the details of our decoder.,2.2. Training Collapse with Textual VAEs,[0],[0]
"The typical approach to using CNNs used for text generation (Kalchbrenner et al., 2016a) is similar to that used for images (Krizhevsky et al., 2012; He et al., 2016), but with the convolution applied in one dimension.",2.3. Dilated Convolutional Decoders,[0],[0]
"We take this approach here in defining our decoder.
",2.3. Dilated Convolutional Decoders,[0],[0]
"One dimensional convolution: For a CNN to serve as a decoder for text, generation of xt must only condition on past tokens x<t.",2.3. Dilated Convolutional Decoders,[0],[0]
Applying the traditional convolution will break this assumption and use tokens x≥t as inputs to predict xt.,2.3. Dilated Convolutional Decoders,[0],[0]
"In our decoder, we avoid this by simply shifting the input by several slots (van den Oord et al., 2016b).",2.3. Dilated Convolutional Decoders,[0],[0]
"With a convolution with filter size of k and using n layers, our effective filter size (the number of past tokens
to condition to in predicting xt) would be (k− 1)× n+ 1.",2.3. Dilated Convolutional Decoders,[0],[0]
"Hence, the filter size would grow linearly with the depth of the network.
",2.3. Dilated Convolutional Decoders,[0],[0]
"Dilation: Dilated convolution (Yu & Koltun, 2015) was introduced to greatly increase the effective receptive field size without increasing the computational cost.",2.3. Dilated Convolutional Decoders,[0],[0]
"With dilation d, the convolution is applied so that d − 1 inputs are skipped each step.",2.3. Dilated Convolutional Decoders,[0],[0]
Causal convolution can be seen a special case with d = 1.,2.3. Dilated Convolutional Decoders,[0],[0]
"With dilation, the effective receptive size grows exponentially with network depth.",2.3. Dilated Convolutional Decoders,[0],[0]
"In Figure 1b, we show dilation of sizes of 1 and 2 in the first and second layer, respectively.",2.3. Dilated Convolutional Decoders,[0],[0]
"Suppose the dilation size in the i-th layer is di and we use the same filter size k in all layers, then the effective filter size is (k − 1) ∑ i di + 1.",2.3. Dilated Convolutional Decoders,[0],[0]
The dilations are typically set to double every layer di+1,2.3. Dilated Convolutional Decoders,[0],[0]
=,2.3. Dilated Convolutional Decoders,[0],[0]
"2di, so the effective receptive field size can grow exponentially.",2.3. Dilated Convolutional Decoders,[0],[0]
"Hence, the contextual capacity of a CNN can be controlled across a greater range by manipulating the filter size, dilation size and network depth.",2.3. Dilated Convolutional Decoders,[0],[0]
"We use this approach in experiments.
",2.3. Dilated Convolutional Decoders,[0],[0]
"Residual connection: We use residual connection (He et al., 2016) in the decoder
ReLU 1x1, 512
ReLU 1xk, 512
conv
ReLU 1x1, 1024
+
conv
conv to speed up convergence and enable training of deeper models.",2.3. Dilated Convolutional Decoders,[0],[0]
"We use a residual block (shown to the right) similar to that of (Kalchbrenner et al., 2016a).",2.3. Dilated Convolutional Decoders,[0],[0]
"We use three convolutional layers with filter size 1×1, 1×k, 1×1, respectively, and ReLU activation be-
tween convolutional layers.
",2.3. Dilated Convolutional Decoders,[0],[0]
Overall architecture: Our VAE architecture is shown in Figure 1a.,2.3. Dilated Convolutional Decoders,[0],[0]
"We use LSTM as the encoder to get the posterior probability q(z|x), which we assume to be diagonal Gaussian.",2.3. Dilated Convolutional Decoders,[0],[0]
We parametrize the mean µ and variance σ with LSTM output.,2.3. Dilated Convolutional Decoders,[0],[0]
"We sample z from q(z|x), the decoder is conditioned on the sample by concatenating z with every word embedding of the decoder input.",2.3. Dilated Convolutional Decoders,[0],[0]
"In addition to conducting language modeling experiments, we will also conduct experiments on semi-supervised classification of text using our proposed decoder.",2.4. Semi-supervised VAE,[0],[0]
"In this section, we briefly review semi-supervised VAEs of (Kingma et al., 2014) that incorporate discrete labels as additional variables.",2.4. Semi-supervised VAE,[0],[0]
"Given the labeled set (x, y) ∼ DL and the unlabeled set x ∼ DU , (Kingma et al., 2014) proposed a model whose latent representation contains continuous vector z and discrete label y:
p(x,y, z) =",2.4. Semi-supervised VAE,[0],[0]
"p(y)p(z)p(x|y, z).",2.4. Semi-supervised VAE,[0],[0]
"(3)
The semi-supervised VAE fits a discriminative network q(y|x), an inference network q(z|x,y) and a generative network p(x|y, z) jointly as part of optimizing a variational lower bound similar that of basic VAE.",2.4. Semi-supervised VAE,[0],[0]
"For labeled data (x,y), this bound is:
log p(x,y) ≥Eq(z|x,y)[log p(x|y, z)]",2.4. Semi-supervised VAE,[0],[0]
"− KL(q(z|x,y)||p(z)) + log p(y)
=L(x,y) + log p(y).
",2.4. Semi-supervised VAE,[0],[0]
"For unlabeled data x, the label is treated as a latent variable, yielding:
log p(x) ≥U(x) =Eq(y|x)",2.4. Semi-supervised VAE,[0],[0]
"[ Eq(z|x,y)[log p(x|y, z)]
− KL(q(z|x,y)||p(z))",2.4. Semi-supervised VAE,[0],[0]
"+ log p(y)− log q(y|x) ]
",2.4. Semi-supervised VAE,[0],[0]
"= ∑ y q(y|x)L(x,y)− KL(q(y|x)||p(y)).
",2.4. Semi-supervised VAE,[0],[0]
"Combining the labeled and unlabeled data terms, we have the overall objective as:
J =E(x,y)∼DL",2.4. Semi-supervised VAE,[0],[0]
"[L(x,y)] + Ex∼DU",2.4. Semi-supervised VAE,[0],[0]
[U(x)],2.4. Semi-supervised VAE,[0],[0]
"+ αE(x,y)∼DL",2.4. Semi-supervised VAE,[0],[0]
"[log q(y|x)],
where α controls the trade off between generative and discriminative terms.
",2.4. Semi-supervised VAE,[0],[0]
Gumbel-softmax: Jang et al. (2016); Maddison et al. (2016) propose a continuous approximation to sampling from a categorical distribution.,2.4. Semi-supervised VAE,[0],[0]
"Let u be a categorical distribution with probabilities π1, π2, ..., πc.",2.4. Semi-supervised VAE,[0],[0]
"Samples from u
can be approximated using:
yi = exp((log(πi) +",2.4. Semi-supervised VAE,[0],[0]
"gi)/τ)∑c j=1 exp((log(πj) + gj)/τ) , (4)
where gi follows Gumbel(0, 1).",2.4. Semi-supervised VAE,[0],[0]
The approximation is accurate when τ → 0 and smooth when τ > 0.,2.4. Semi-supervised VAE,[0],[0]
"In experiments, we use Gumbel-Softmax to approximate the samples from p(y|x) to reduce the computational cost.",2.4. Semi-supervised VAE,[0],[0]
"As a result, we can directly back propagate the gradients of U(x) to the discriminator network.",2.4. Semi-supervised VAE,[0],[0]
We anneal τ,2.4. Semi-supervised VAE,[0],[0]
"so that sample variance is small when training starts and then gradually decrease τ .
",2.4. Semi-supervised VAE,[0],[0]
Unsupervised clustering: In this section we adapt the same framework for unsupervised clustering.,2.4. Semi-supervised VAE,[0],[0]
"We directly minimize the objective U(x), which is consisted of two parts: reconstruction loss and KL regularization on q(y|x).",2.4. Semi-supervised VAE,[0],[0]
The first part encourages the model to assign x to label y such that the reconstruction loss is low.,2.4. Semi-supervised VAE,[0],[0]
We find that the model can easily get stuck in two local optimum: the KL term is very small and q(y|x) is close to uniform distribution or the KL term is very large and all samples collapse to one class.,2.4. Semi-supervised VAE,[0],[0]
"In order to make the model more robust, we modify the KL term by:
KLy = max(γ,KL(q(y|x)|p(y)).",2.4. Semi-supervised VAE,[0],[0]
"(5)
That is, we only minimize the KL term when it is large enough.",2.4. Semi-supervised VAE,[0],[0]
"Since we would like to investigate VAEs for language modeling and semi-supervised classification, the data sets should be suitable for both purposes.",3.1. Data sets,[0],[0]
"We use two large scale document classification data sets: Yahoo Answer and Yelp15 review, representing topic classification and sentiment classification data sets respectively (Tang et al., 2015; Yang et al., 2016; Zhang et al., 2015).",3.1. Data sets,[0],[0]
"The original data sets contain millions of samples, of which we sample 100k as training and 10k as validation and test from the respective partitions.",3.1. Data sets,[0],[0]
The detailed statistics of both data sets are in Table 1.,3.1. Data sets,[0],[0]
"Yahoo Answer contains 10 topics including Society & Culture, Science & Mathematics etc.",3.1. Data sets,[0],[0]
"Yelp15 contains 5 level of rating, with higher rating better.",3.1. Data sets,[0],[0]
We use an LSTM as an encoder for VAE and explore LSTMs and CNNs as decoders.,3.2. Model configurations and Training details,[0],[0]
"For CNNs, we explore several different configurations.",3.2. Model configurations and Training details,[0],[0]
"We set the convolution filter size to be 3 and gradually increase the depth and dilation from [1, 2, 4], [1, 2, 4, 8, 16] to [1, 2, 4, 8, 16, 1, 2, 4, 8, 16].",3.2. Model configurations and Training details,[0],[0]
"They represent small, medium and large model and we name them as SCNN, MCNN and LCNN.",3.2. Model configurations and Training details,[0],[0]
"We also explore a very large model with dilations [1, 2, 4, 8, 16, 1, 2, 4, 8, 16, 1, 2, 4, 8, 16] and name it as VLCNN.",3.2. Model configurations and Training details,[0],[0]
"The effective filter size are 15, 63, 125 and 187 respectively.",3.2. Model configurations and Training details,[0],[0]
"We use the last hidden state of the encoder LSTM and feed it though an MLP to get the mean and variance of q(z|x), from which we sample z and then feed it through an MLP to get the starting state of decoder.",3.2. Model configurations and Training details,[0],[0]
"For the LSTM decoder, we follow (Bowman et al., 2015) to use it as the initial state of LSTM and feed it to every step of LSTM.",3.2. Model configurations and Training details,[0],[0]
"For the CNN decoder, we concatenate it with the word embedding of every decoder input.
",3.2. Model configurations and Training details,[0],[0]
The architecture of the Semi-supervised VAE basically follows that of the VAE.,3.2. Model configurations and Training details,[0],[0]
We feed the last hidden state of the encoder LSTM through a two layer MLP then a softmax to get q(y|x).,3.2. Model configurations and Training details,[0],[0]
We use Gumbel-softmax to sample y from q(y|x).,3.2. Model configurations and Training details,[0],[0]
"We then concatenate y with the last hidden state of encoder LSTM and feed them throught an MLP to get the mean and variance of q(z|y,x).",3.2. Model configurations and Training details,[0],[0]
"y and z together are used as the starting state of the decoder.
",3.2. Model configurations and Training details,[0],[0]
We use a vocabulary size of 20k for both data sets and set the word embedding dimension to be 512.,3.2. Model configurations and Training details,[0],[0]
The LSTM dimension is 1024.,3.2. Model configurations and Training details,[0],[0]
"The number of channels for convolutions
in CNN decoders is 512 internally and 1024 externally, as shown in Section 2.3.",3.2. Model configurations and Training details,[0],[0]
"We select the dimension of z from [32, 64].",3.2. Model configurations and Training details,[0],[0]
"We find our model is not sensitive to this parameter.
",3.2. Model configurations and Training details,[0],[0]
"We use Adam (Kingma & Ba, 2014) to optimize all models and the learning rate is selected from [2e-3, 1e-3, 7.5e-4] and β1 is selected from [0.5, 0.9].",3.2. Model configurations and Training details,[0],[0]
"Empirically, we find learning rate 1e-3 and β1 = 0.5 to perform the best.",3.2. Model configurations and Training details,[0],[0]
"We select drop out ratio of LSTMs (both encoder and decoder) from [0.3, 0.5].",3.2. Model configurations and Training details,[0],[0]
"Following (Bowman et al., 2015), we also use drop word for the LSTM decoder, the drop word ratio is selected from [0, 0.3, 0.5, 0.7].",3.2. Model configurations and Training details,[0],[0]
"For the CNN decoder, we use a drop out ratio of 0.1 at each layer.",3.2. Model configurations and Training details,[0],[0]
We do not use drop word for CNN decoders.,3.2. Model configurations and Training details,[0],[0]
We use batch size of 32 and all model are trained for 40 epochs.,3.2. Model configurations and Training details,[0],[0]
We start to half the learning rate every 2 epochs after epoch 30.,3.2. Model configurations and Training details,[0],[0]
"Following (Bowman et al., 2015), we use KL cost annealing strategy.",3.2. Model configurations and Training details,[0],[0]
We set the initial weight of KL cost term to be 0.01 and increase it linearly until a given iteration T .,3.2. Model configurations and Training details,[0],[0]
"We treat T as a hyper parameter and select it from [10k, 40k, 80k].",3.2. Model configurations and Training details,[0],[0]
The results for language modeling are shown in Table 2.,3.3. Language modeling results,[0],[0]
We report the negative log likelihood (NLL) and perplexity (PPL) of the test set.,3.3. Language modeling results,[0],[0]
"For the NLL of VAEs, we decompose it into reconstruction loss and KL divergence and report the KL divergence in the parenthesis.",3.3. Language modeling results,[0],[0]
"To better visualize these results, we plot the results of Yahoo data set (Table 2a) in Figure 2.
",3.3. Language modeling results,[0],[0]
We first look at the LM results for Yahoo data set.,3.3. Language modeling results,[0],[0]
"As we gradually increase the effective filter size of CNN from SCNN, MCNN to LCNN, the NLL decreases from 345.3, 338.3 to 335.4.",3.3. Language modeling results,[0],[0]
The NLL of LCNN-LM is very close to the NLL of LSTM-LM 334.9.,3.3. Language modeling results,[0],[0]
"But VLCNN-LM is a little bit worse than LCNN-LM, this indicates a little bit of over-fitting.
",3.3. Language modeling results,[0],[0]
"We can see that LSTM-VAE is worse than LSTM-LM in terms of NLL and the KL term is nearly zero, which verifies the finding of (Bowman et al., 2015).",3.3. Language modeling results,[0],[0]
"When we use CNNs as the decoders for VAEs, we can see improvement over pure CNN LMs.",3.3. Language modeling results,[0],[0]
"For SCNN, MCNN and LCNN, the VAE results improve over LM results from 345.3 to 337.8, 338.3 to 336.2, and 335.4 to 333.9 respectively.",3.3. Language modeling results,[0],[0]
The improvement is big for small models and gradually decreases as we increase the decoder model contextual capacity.,3.3. Language modeling results,[0],[0]
"When the model is as large as VLCNN, the improvement diminishes and the VAE result is almost the same with LM result.",3.3. Language modeling results,[0],[0]
"This is also reflected in the KL term, SCNN-VAE has the largest KL of 13.3 and VLCNN-VAE has the smallest KL of 0.7.",3.3. Language modeling results,[0],[0]
"When LCNN is used as the decoder, we obtain an optimal trade off between using contextual information and latent representation.",3.3. Language modeling results,[0],[0]
"LCNN-VAE achieves a NLL of 333.9, which improves over LSTM-LM with NLL of 334.9.
",3.3. Language modeling results,[0],[0]
"We find that if we initialize the parameters of LSTM encoder with parameters of LSTM language model, we can improve the VAE results further.",3.3. Language modeling results,[0],[0]
This indicates better encoder model is also a key factor for VAEs to work well.,3.3. Language modeling results,[0],[0]
"Combined with encoder initialization, LCNN-VAE improves over LSTM-LM from 334.9 to 332.1 in NLL and from 66.2 to 63.9 in PPL.",3.3. Language modeling results,[0],[0]
Similar results for the sentiment data set are shown in Table 2b.,3.3. Language modeling results,[0],[0]
"LCNN-VAE improves over LSTM-LM from 362.7 to 359.1 in NLL and from 42.6 to 41.1 in PPL.
",3.3. Language modeling results,[0],[0]
"Latent representation visualization: In order to visualize the latent representation, we set the dimension of z to be 2 and plot the mean of posterior probability q(z|x), as shown in Figure 3.",3.3. Language modeling results,[0],[0]
We can see distinct different characteristics of topic and sentiment representation.,3.3. Language modeling results,[0],[0]
"In Figure 3a, we can see that documents of different topics fall into different clusters, while in Figure 3b, documents of different ratings form a continuum, they lie continuously on the xaxis as the review rating increases.",3.3. Language modeling results,[0],[0]
"Motivated by the success of VAEs for language modeling, we continue to explore VAEs for semi-supervised learning.",3.4. Semi-supervised VAE results,[0],[0]
"Following that of (Kingma et al., 2014), we set the number of labeled samples to be 100, 500, 1000 and 2000 respectively.
",3.4. Semi-supervised VAE results,[0],[0]
Ablation Study:,3.4. Semi-supervised VAE results,[0],[0]
"At first, we would like to explore the effect of different decoders for semi-supervised classification.",3.4. Semi-supervised VAE results,[0],[0]
We fix the number of labeled samples to be 500 and report both classification accuracy and NLL of the test set of Yahoo data set in Table.,3.4. Semi-supervised VAE results,[0],[0]
5.,3.4. Semi-supervised VAE results,[0],[0]
We can see that SCNN-VAESemi has the best classification accuracy of 65.5.,3.4. Semi-supervised VAE results,[0],[0]
The accuracy decreases as we gradually increase the decoder contextual capacity.,3.4. Semi-supervised VAE results,[0],[0]
"On the other hand, LCNN-VAE-Semi has the best NLL result.",3.4. Semi-supervised VAE results,[0],[0]
"This classification accuracy and NLL trade off once again verifies our conjecture: with small contextual window size, the decoder is forced to use the encoder information, hence the latent representation is better
learned.
",3.4. Semi-supervised VAE results,[0],[0]
"Comparing the NLL results of Table 5 with that of Table 2a, we can see the NLL improves.",3.4. Semi-supervised VAE results,[0],[0]
"The NLL of semisupervised VAE improves over simple VAE from 337.8 to 335.7 for SCNN, from 336.2 to 332.8 for MCNN, and from 333.9 to 332.8 for LCNN.",3.4. Semi-supervised VAE results,[0],[0]
"The improvement mainly comes from the KL divergence part, this indicates that better latent representations decrease the KL divergence, further improving the VAE results.
",3.4. Semi-supervised VAE results,[0],[0]
"Comparison with related methods: We compare Semisupervised VAE with the methods from (Dai & Le, 2015), which represent the previous state-of-the-art for semisupervised sequence learning.",3.4. Semi-supervised VAE results,[0],[0]
Dai & Le (2015) pre-trains a classifier by initializing the parameters of a classifier with that of a language model or a sequence autoencoder.,3.4. Semi-supervised VAE results,[0],[0]
They find it improves the classification accuracy significantly.,3.4. Semi-supervised VAE results,[0],[0]
"Since SCNN-VAE-Semi performs the best according to Table 5, we fix the decoder to be SCNN in this part.",3.4. Semi-supervised VAE results,[0],[0]
The detailed comparison is in Table 4.,3.4. Semi-supervised VAE results,[0],[0]
"We can see that semisupervised VAE performs better than LM-LSTM and LALSTM from (Dai & Le, 2015).",3.4. Semi-supervised VAE results,[0],[0]
We also initialize the encoder of the VAE with parameters from LM and find classification accuracy further improves.,3.4. Semi-supervised VAE results,[0],[0]
We also see the advantage of SCNN-VAE-Semi over LM-LSTM is greater when the number of labeled samples is smaller.,3.4. Semi-supervised VAE results,[0],[0]
The advantage decreases as we increase the number of labeled samples.,3.4. Semi-supervised VAE results,[0],[0]
"When we set the number of labeled samples to be 25k, the SCNN-VAE-Semi achieves an accuracy of 70.4, which is similar to LM-LSTM with an accuracy of 70.5.",3.4. Semi-supervised VAE results,[0],[0]
"Also, SCNN-VAE-Semi performs better on Yahoo data set than Yelp data set.",3.4. Semi-supervised VAE results,[0],[0]
"For Yelp, SCNN-VAE-Semi is a little bit worse than LM-LSTM if the number of labeled samples is greater than 100, but becomes better when we initialize the encoder.",3.4. Semi-supervised VAE results,[0],[0]
Figure 3b explains this observation.,3.4. Semi-supervised VAE results,[0],[0]
It shows the documents are coupled together and are harder to classify.,3.4. Semi-supervised VAE results,[0],[0]
"Also, the latent representation contains information other than sentiment, which may not be useful for classification.",3.4. Semi-supervised VAE results,[0],[0]
We also explored using the same framework for unsupervised clustering.,3.5. Unsupervised clustering results,[0],[0]
"We compare with the baselines that ex-
tract the feature with existing models and then run Gaussian Mixture Model (GMM) on these features.",3.5. Unsupervised clustering results,[0],[0]
We find empirically that simply using the features does not perform well since the features are high dimensional.,3.5. Unsupervised clustering results,[0],[0]
"We run a PCA on these features, the dimension of PCA is selected from [8, 16, 32].",3.5. Unsupervised clustering results,[0],[0]
"Since GMM can easily get stuck in poor local optimum, we run each model ten times and report the best result.",3.5. Unsupervised clustering results,[0],[0]
We find directly optimizing U(x) does not perform well for unsupervised clustering and we need to initialize the encoder with LSTM language model.,3.5. Unsupervised clustering results,[0],[0]
The model only works well for Yahoo data set.,3.5. Unsupervised clustering results,[0],[0]
This is potentially because Figure 3b shows that sentiment latent representations does not fall into clusters.,3.5. Unsupervised clustering results,[0],[0]
"γ in Equation 5 is a sensitive parameter, we select it from the range between 0.5 and 1.5 with an interval of 0.1.",3.5. Unsupervised clustering results,[0],[0]
"We use the following evaluation protocol (Makhzani et al., 2015): after we finish training, for cluster i, we find out the validation sample xn from cluster i that has the best q(yi|x) and assign the label of xn to all samples in cluster i.",3.5. Unsupervised clustering results,[0],[0]
We then compute the test accuracy based on this assignment.,3.5. Unsupervised clustering results,[0],[0]
The detailed results are in Table 5.,3.5. Unsupervised clustering results,[0],[0]
We can see SCNN-VAE-Unsup + init performs better than other baselines.,3.5. Unsupervised clustering results,[0],[0]
"LSTM+GMM performs very bad probably because the feature dimension is 1024 and is too high for GMM, even though we already used PCA to reduce the dimension.
",3.5. Unsupervised clustering results,[0],[0]
"Conditional text generation With the semi-supervised VAE, we are able to generate text conditional on the label.",3.5. Unsupervised clustering results,[0],[0]
"Due to space limitation, we only show one example of
generated reviews conditioning on review rating in Table 6.",3.5. Unsupervised clustering results,[0],[0]
"For each group of generated text, we fix z and vary the label y, while picking x via beam search with a beam size of 10.",3.5. Unsupervised clustering results,[0],[0]
"Variational inference via the re-parameterization trick was initially proposed by (Kingma & Welling, 2013; Rezende et al., 2014) and since then, VAE has been widely adopted as generative model for images (Gregor et al., 2015; Yan et al., 2016; Salimans et al., 2015; Gregor et al., 2016; Hu et al., 2017b).
",4. Related work,[0],[0]
"Our work is in line with previous works on combining variational inferences with text modeling (Bowman et al., 2015; Miao et al., 2016; Serban et al., 2016; Zhang et al., 2016; Hu et al., 2017a).",4. Related work,[0],[0]
"(Bowman et al., 2015) is the first work to combine VAE with language model and they use LSTM as the decoder and find some negative results.",4. Related work,[0],[0]
"On the other hand, (Miao et al., 2016) models text as bag of words, though improvement has been found, the model can not be used to generate text.",4. Related work,[0],[0]
Our work fills the gaps between them.,4. Related work,[0],[0]
"(Serban et al., 2016; Zhang et al., 2016) applies variational inference to dialogue modeling and machine translation and found some improvement in terms of generated text quality, but no language modeling results are reported.",4. Related work,[0],[0]
"(Chung et al., 2015; Bayer & Osendorfer, 2014; Fraccaro et al., 2016) embedded variational units in every step of a RNN, which is different from our model in using global latent variables to learn high level features.
",4. Related work,[0],[0]
"Our use of CNN as decoder is inspired by recent success of PixelCNN model for images (van den Oord et al., 2016b), WaveNet for audios (van den Oord et al., 2016a), Video Pixel Network for video modeling (Kalchbrenner et al., 2016b) and ByteNet for machine translation (Kalchbrenner et al., 2016a).",4. Related work,[0],[0]
"But in contrast to those works showing using a very deep architecture leads to better performance, CNN as decoder is used in our model to control the contextual capacity, leading to better performance.
",4. Related work,[0],[0]
"Our work is closed related the recently proposed variational lossy autoencoder (Chen et al., 2016) which is used to pre-
dict image pixels.",4. Related work,[0],[0]
"They find that conditioning on a smaller window of a pixels leads to better results with VAE, which is similar to our finding.",4. Related work,[0],[0]
"Much (Rezende & Mohamed, 2015; Kingma et al., 2016; Chen et al., 2016) has been done to come up more powerful prior/posterior distribution representations with techniques such as normalizing flows.",4. Related work,[0],[0]
We treat this as one of our future works.,4. Related work,[0],[0]
"This work is largely orthogonal and could be potentially combined with a more effective choice of decoder to yield additional gains.
",4. Related work,[0],[0]
"There is much previous work exploring unsupervised sentence encodings, for example skip-thought vectors (Kiros et al., 2015), paragraph vectors (Le & Mikolov, 2014), and sequence autoencoders (Dai & Le, 2015).",4. Related work,[0],[0]
"(Dai & Le, 2015) applies a pretrained model to semi-supervised classification and find significant gains, we use this as the baseline for our semi-supervised VAE.",4. Related work,[0],[0]
"We showed that by controlling the decoder’s contextual capacity in VAE, we can improve performance on both language modeling and semi-supervised classification tasks by preventing a degenerate collapse of the training procedure.",5. Conclusion,[0],[0]
These results indicate that more carefully characterizing decoder capacity and understanding how it relates to common variational training procedures may represent important avenues for unlocking future unsupervised problems.,5. Conclusion,[0],[0]
"Recent work on generative text modeling has found that variational autoencoders (VAE) with LSTM decoders perform worse than simpler LSTM language models (Bowman et al., 2015).",abstractText,[0],[0]
"This negative result is so far poorly understood, but has been attributed to the propensity of LSTM decoders to ignore conditioning information from the encoder.",abstractText,[0],[0]
"In this paper, we experiment with a new type of decoder for VAE: a dilated CNN.",abstractText,[0],[0]
"By changing the decoder’s dilation architecture, we control the size of context from previously generated words.",abstractText,[0],[0]
"In experiments, we find that there is a trade-off between contextual capacity of the decoder and effective use of encoding information.",abstractText,[0],[0]
"We show that when carefully managed, VAEs can outperform LSTM language models.",abstractText,[0],[0]
"We demonstrate perplexity gains on two datasets, representing the first positive language modeling result with VAE.",abstractText,[0],[0]
"Further, we conduct an in-depth investigation of the use of VAE (with our new decoding architecture) for semi-supervised and unsupervised labeling tasks, demonstrating gains over several strong baselines.",abstractText,[0],[0]
Improved Variational Autoencoders for Text Modeling using Dilated Convolutions,title,[0],[0]
"Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1808–1817 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics
1808",text,[0],[0]
Text summarization concerns the task of compressing a long sequence of text into a more concise form.,1 Introduction,[0],[0]
"The two most common approaches to summarization are extractive (Dorr et al., 2003; Nallapati et al., 2017), where the model extracts salient parts of the source document, and abstractive (Paulus et al., 2017; See et al., 2017), where the model not only extracts but also concisely paraphrases the important parts of the document via generation.",1 Introduction,[0],[0]
We focus on developing a summarization model that produces an increased level of abstraction.,1 Introduction,[0],[0]
"That is, the model produces concise summaries without only copying long passages from the source document.
",1 Introduction,[0],[0]
"∗ Work performed while at Salesforce Research.
",1 Introduction,[0],[0]
"A high quality summary is shorter than the original document, conveys only the most important and no extraneous information, and is semantically and syntactically correct.",1 Introduction,[0],[0]
"Because it is difficult to gauge the correctness of the summary, evaluation metrics for summarization models use word overlap with the ground-truth summary in the form of ROUGE (Lin, 2004) scores.",1 Introduction,[0],[0]
"However, word overlap metrics do not capture the abstractive nature of high quality human-written summaries: the use of paraphrases with words that do not necessarily appear in the source document.
",1 Introduction,[0],[0]
"The state-of-the-art abstractive text summarization models have high word overlap performance, however they tend to copy long passages of the source document directly into the summary, thereby producing summaries that are not abstractive (See et al., 2017).
",1 Introduction,[0],[0]
We propose two general extensions to summarization models that improve the level of abstraction of the summary while preserving word overlap with the ground-truth summary.,1 Introduction,[0],[0]
Our first contribution decouples the extraction and generation responsibilities of the decoder by factoring it into a contextual network and a language model.,1 Introduction,[0],[0]
The contextual network has the sole responsibility of extracting and compacting the source document whereas the language model is responsible for the generation of concise paraphrases.,1 Introduction,[0],[0]
Our second contribution is a mixed objective that jointly optimizes the n-gram overlap with the ground-truth summary while encouraging abstraction.,1 Introduction,[0],[0]
This is done by combining maximum likelihood estimation with policy gradient.,1 Introduction,[0],[0]
"We reward the policy with the ROUGE metric, which measures word overlap with the ground-truth summary, as well as a novel abstraction reward that encourages the generation of words not in the source document.
",1 Introduction,[0],[0]
"We demonstrate the effectiveness of our contributions on a encoder-decoder summarization
Article
(cnn) to allay possible concerns, boston prosecutors released video friday of the shooting of a police officer last month that resulted in the killing of the gunman.",1 Introduction,[0],[0]
"the officer wounded, john moynihan, is white.",1 Introduction,[0],[0]
"angelo west, the gunman shot to death by officers, was black.",1 Introduction,[0],[0]
"after the shooting, community leaders in the predominantly african-american neighborhood of (...)
model.",1 Introduction,[0],[0]
"Our model obtains state-of-the-art ROUGE-L scores, and ROUGE-1 and ROUGE-2 performance comparable to state-of-the-art methods on the CNN/DailyMail dataset.",1 Introduction,[0],[0]
"Moreover, we significantly outperform all previous abstractive approaches in our abstraction metrics.",1 Introduction,[0],[0]
"Table 1 shows a comparison of summaries generated by our model and previous abstractive models, showing less copying and more abstraction in our model.",1 Introduction,[0],[0]
The base model follows the encoder-decoder architecture with temporal attention and intraattention proposed by Paulus et al. (2017).,2.1 Base Model and Training Objective,[0],[0]
Let E ∈ Rn×demb denote the matrix of demb dimensional word embeddings of the n words in the source document.,2.1 Base Model and Training Objective,[0],[0]
"The encoding of the source document henc is computed via a bidirectional LSTM (Hochreiter and Schmidhuber, 1997) whose output has dimension dhid.
",2.1 Base Model and Training Objective,[0],[0]
"henc = BiLSTM (E) ∈ Rn×dhid (1)
",2.1 Base Model and Training Objective,[0],[0]
The decoder uses temporal attention over the encoded sequence that penalizes input tokens that previously had high attention scores.,2.1 Base Model and Training Objective,[0],[0]
"Let hdect denote the decoder state at time t. The temporal at-
tention context at time t, ctmpt , is computed as
stmpti = ( hdect )ᵀ",2.1 Base Model and Training Objective,[0],[0]
W tmphenci ∈ R (2) qtmpti = exp(stmpti )∑t−1,2.1 Base Model and Training Objective,[0],[0]
j=1 exp(s tmp ji ) ∈ R (3) αtmpti =,2.1 Base Model and Training Objective,[0],[0]
"qtmpti∑n j=1 q tmp tj ∈ R (4)
",2.1 Base Model and Training Objective,[0],[0]
ctmpt = n∑ i=1,2.1 Base Model and Training Objective,[0],[0]
αtmpti h enc,2.1 Base Model and Training Objective,[0],[0]
"i ∈ Rd hid (5)
where we set qtmpti to exp(s tmp ti ) for t = 1.
",2.1 Base Model and Training Objective,[0],[0]
The decoder also attends to its previous states via intra-attention over the decoded sequence.,2.1 Base Model and Training Objective,[0],[0]
"The intra-attention context at time t, cintt , is computed as
sintti = ( hdect )ᵀ",2.1 Base Model and Training Objective,[0],[0]
W inthdeci ∈ R (6) cintt = t−1∑ i=1,2.1 Base Model and Training Objective,[0],[0]
( sintti∑n j=1 s int tj ),2.1 Base Model and Training Objective,[0],[0]
"hdeci ∈ Rd hid (7)
",2.1 Base Model and Training Objective,[0],[0]
The decoder generates tokens by interpolating between selecting words from the source document via a pointer network as well as selecting words from a fixed output vocabulary.,2.1 Base Model and Training Objective,[0],[0]
"Let zt denote the ground-truth label as to whether the tth
output word should be generated by the selecting from the output vocabulary as opposed to from the source document.",2.1 Base Model and Training Objective,[0],[0]
"We compute p(zt), the probability that the decoder generates from the output vocabulary, as
rt",2.1 Base Model and Training Objective,[0],[0]
=,2.1 Base Model and Training Objective,[0],[0]
"[h dec t ; c tmp t ; c int t ] ∈ R3d hid (8)
p(zt) = sigmoid(W",2.1 Base Model and Training Objective,[0],[0]
zrt + b z) ∈ R,2.1 Base Model and Training Objective,[0],[0]
"(9)
",2.1 Base Model and Training Objective,[0],[0]
"The probability of selecting the word yt from a fixed vocabulary at time step t is defined as
pgen(yt) = softmax (W genrt + b gen) (10)
",2.1 Base Model and Training Objective,[0],[0]
"We set pcp(yt), the probability of copying the word yt from the source document, to the temporal attention distribution αtmpt .",2.1 Base Model and Training Objective,[0],[0]
"The joint probability of using the generator and generating the word yt at time step t, p(zt, yt), is then
p(zt, yt) =",2.1 Base Model and Training Objective,[0],[0]
"p(yt | zt)p(zt) (11)
the likelihood of which is
log p(zt, yt) = log p(yt | zt) + log p(zt) =",2.1 Base Model and Training Objective,[0],[0]
"zt log p
gen(yt)",2.1 Base Model and Training Objective,[0],[0]
+ (1− zt) log pcp(yt),2.1 Base Model and Training Objective,[0],[0]
+ zt log p(zt),2.1 Base Model and Training Objective,[0],[0]
"+ (1− zt) log (1− p (zt))
",2.1 Base Model and Training Objective,[0],[0]
"= zt (log p gen(yt) + log p(zt))
+ (1− zt) (log pcp(yt) + log (1− p (zt)))",2.1 Base Model and Training Objective,[0],[0]
"(12)
",2.1 Base Model and Training Objective,[0],[0]
The objective function combines maximum likelihood estimation with policy learning.,2.1 Base Model and Training Objective,[0],[0]
"Let m denote the length of the ground-truth summary, The maximum likelihood loss Lml is computed as
Lml = − m∑ t=1 log p(zt, yt) (13)
Policy learning uses ROUGE-L as its reward function and a self-critical baseline using the greedy decoding policy (Rennie et al., 2016).",2.1 Base Model and Training Objective,[0],[0]
"Let ysam denote the summary obtained by sampling from the current policy p, ygre and zgre the summary and generator choice obtained by greedily choosing from p(zt, yt), R(y) the ROUGE-L score of the summary y, and Θ the model parameters.",2.1 Base Model and Training Objective,[0],[0]
"The policy learning loss is
R̂ = R (ysam)−R (ygre)",2.1 Base Model and Training Objective,[0],[0]
"(14) Lpg = −E zsam ∼p(z),
ysam ∼p(y|z)",2.1 Base Model and Training Objective,[0],[0]
"[R̂] (15)
where we use greedy predictions by the model according to eq. (13) as a baseline for variance reduction.",2.1 Base Model and Training Objective,[0],[0]
"The policy gradient, as per Schulman et al. (2015), is
∇ΘLpg",2.1 Base Model and Training Objective,[0],[0]
≈ −R̂ m∑ t=1,2.1 Base Model and Training Objective,[0],[0]
"∇Θ log p (zsamt , ysamt ) (16)
",2.1 Base Model and Training Objective,[0],[0]
"The final loss is a mixture between the maximum likelihood loss and the policy learning loss, weighted by a hyperparameter γ.
",2.1 Base Model and Training Objective,[0],[0]
L = (1− γ)Lml + γLpg (17),2.1 Base Model and Training Objective,[0],[0]
The decoder is an essential component of the base model.,2.2 Language Model Fusion,[0],[0]
"Given the source document and the previously generated summary tokens, the decoder both extracts relevant parts of the source document through the pointer network as well as composes paraphrases from the fixed vocabulary.",2.2 Language Model Fusion,[0],[0]
We decouple these two responsibilities by augmenting the decoder with an external language model.,2.2 Language Model Fusion,[0],[0]
"The language model assumes responsibility of generating from the fixed vocabulary, and allows the decoder to focus on attention and extraction.",2.2 Language Model Fusion,[0],[0]
"This decomposition has the added benefit of easily incorporating external knowledge about fluency or domain specific styles via pre-training the language model on a large scale text corpora.
",2.2 Language Model Fusion,[0],[0]
The architecture of our language model is based on Merity et al. (2018).,2.2 Language Model Fusion,[0],[0]
"We use a 3-layer unidirectional LSTM with weight-dropped LSTM units.
",2.2 Language Model Fusion,[0],[0]
"Let et denote the embedding of the word generated during time step t. The hidden state of the language model at the l-th layer is
hlml,t = LSTM lm 3 ( et−1, h lm l,t−1 ) (18)
",2.2 Language Model Fusion,[0],[0]
"At each time step t, we combine the hidden state of the last language model LSTM layer, hlm3,t, with rt defined in eq.",2.2 Language Model Fusion,[0],[0]
(8) in a fashion similar to Sriram et al. (2017).,2.2 Language Model Fusion,[0],[0]
Let denote element-wise multiplication.,2.2 Language Model Fusion,[0],[0]
"We use a gating function whose output
gt filters the content of the language model hidden state.
ft = sigmoid ( W lm[rt;h lm 3,t] + b lm ) (19)
gt = W fuse([rt; gt hlm3,t]) + bfuse (20) hfuset = ReLU (gt) (21)
",2.2 Language Model Fusion,[0],[0]
"We then replace the output distribution of the language model pgen (yt) in eq. 10 with
pgen (yt) = softmax ( W genhfuset + b gen ) (22)",2.2 Language Model Fusion,[0],[0]
"In order to produce an abstractive summary, the model cannot exclusively copy from the source document.",2.3 Abstractive Reward,[0],[0]
"In particular, the model needs to parse large chunks of the source document and create concise summaries using phrases not in the source document.",2.3 Abstractive Reward,[0],[0]
"To encourage this behavior, we propose a novelty metric that promotes the generation of novel words.
",2.3 Abstractive Reward,[0],[0]
We define a novel phrase in the summary as one that is not in the source document.,2.3 Abstractive Reward,[0],[0]
"Let ng (x, n) denote the function that computes the set of unique n-grams in a document x, xgen the generated summary, xsrc the source document, and ‖s‖ the number of words in s. The unnormalized novelty metric N is defined as the fraction of unique n-grams in the summary that are novel.
",2.3 Abstractive Reward,[0],[0]
"N (xgen, n)",2.3 Abstractive Reward,[0],[0]
"= ‖ng (xgen, n)− ng (xsrc, n)‖
‖ng (xgen, n)‖ (23)
",2.3 Abstractive Reward,[0],[0]
"To prevent the model for receiving high novelty rewards by outputting very short summaries, we normalize the metric by the length ratio of the generated and ground-truth summaries.",2.3 Abstractive Reward,[0],[0]
Let xgt denote the ground-truth summary.,2.3 Abstractive Reward,[0],[0]
"We define the novelty metric as
Rnov (xgen, n)",2.3 Abstractive Reward,[0],[0]
"= N (xgen, n) ‖xgen‖ ‖xgt‖
(24)
",2.3 Abstractive Reward,[0],[0]
"We incorporate the novelty metric as a reward into the policy gradient objective in eq. (15), alongside the original ROUGE-L metric.",2.3 Abstractive Reward,[0],[0]
"In doing so, we encourage the model to generate summaries that both overlap with human written ground-truth summaries as well as incorporate novel words not in the source document:
R (y) =",2.3 Abstractive Reward,[0],[0]
λrouRrou (ysam) +,2.3 Abstractive Reward,[0],[0]
"λnovRnov (ysam) (25)
where λrou and λnov are hyperparameters that control the weighting of each reward.",2.3 Abstractive Reward,[0],[0]
"We train our model on the CNN/Daily Mail dataset (Hermann et al., 2015; Nallapati et al., 2016).",3.1 Datasets,[0],[0]
Previous works on abstractive summarization either use an anonymized version of this dataset or the original article and summary texts.,3.1 Datasets,[0],[0]
"Due to these different formats, it is difficult to compare the overall ROUGE scores and performance between each version.",3.1 Datasets,[0],[0]
"In order to compare against previous results, we train and evaluate on both versions of this dataset.",3.1 Datasets,[0],[0]
"For the anonymized version, we follow the pre-processing steps described in Nallapati et al. (2016), and the pre-processing steps of See et al. (2017) for the the full-text version.
",3.1 Datasets,[0],[0]
We use named entities and the source document to supervise the model regarding when to use the pointer and when to use the generator (e.g. zt in eq.,3.1 Datasets,[0],[0]
(13).,3.1 Datasets,[0],[0]
"Namely, during training, we teach the model to point from the source document if the word in the ground-truth summary is a named entity, an out-of-vocabulary word, or a numerical value that is in the source document.",3.1 Datasets,[0],[0]
We obtain the list of named entities from Hermann et al. (2015).,3.1 Datasets,[0],[0]
"For each dataset version, we train a language model consisting of a 400-dimensional word embedding layer and a 3-layer LSTM with each layer having a hidden size of 800 dimensions, except the last input layer which has an output size of 400.",3.2 Language Models,[0],[0]
"The final decoding layer shares weights with the embedding layer (Inan et al., 2017; Press and Wolf, 2016).",3.2 Language Models,[0],[0]
"We also use DropConnect (Wan et al., 2013) in the hidden-to-hidden connections, as well as the non-monotonically triggered asynchronous gradient descent optimizer from Merity et al. (2018).
",3.2 Language Models,[0],[0]
"We train this language model on the CNN/Daily Mail ground-truth summaries only, following the same training, validation, and test splits as our main experiments.",3.2 Language Models,[0],[0]
"The two LSTMs of our bidirectional encoder are 200-dimensional, and out decoder LSTM is 400- dimensional.",3.3 Training details,[0],[0]
"We restrict the input vocabulary for the embedding matrix to 150,000 tokens, and the output decoding layer to 50,000 tokens.",3.3 Training details,[0],[0]
"We limit the size of input articles to the first 400 tokens, and the summaries to 100 tokens.",3.3 Training details,[0],[0]
"We use scheduled sampling (Bengio et al., 2015) with a probability of 0.25 when calculating the maximum-likelihood training loss.",3.3 Training details,[0],[0]
"We also set n = 3 when computing our novelty reward Rnov(xgen, n).",3.3 Training details,[0],[0]
"For our final training loss using reinforcement learning, we set γ = 0.9984, λrou = 0.9, and λnov = 0.1.",3.3 Training details,[0],[0]
"Finally, we use the trigram repetition avoidance heuristic defined by Paulus et al. (2017) during beam search decoding to ensure that the model does not output twice the same trigram in a given summary, reducing the amount of repetitions.",3.3 Training details,[0],[0]
"We also create a novelty baseline by taking the outputs of our base model, without RL training and without the language model, and inserting random words not present in the article after each summary token with a probability r = 0.0005.",3.4 Novelty baseline,[0],[0]
"This baseline will intuitively have a higher percentage of novel n-grams than our base model outputs while being very similar to these original outputs, hence keeping the ROUGE score difference relatively small.",3.4 Novelty baseline,[0],[0]
"We obtain a validation and test perplexity of 65.80 and 66.61 respectively on the anonymized dataset, and 81.13 and 82.98 on the full-text dataset with the language models described in Section 3.2.
",4.1 Quantitative analysis,[0],[0]
The ROUGE scores and novelty scores of our final summarization model on both versions of the CNN/Daily Mail dataset are shown in Table 2.,4.1 Quantitative analysis,[0],[0]
"We report the ROUGE-1, ROUGE-2, and ROUGEL F-scores as well as the percentage of novel ngrams, marked NN-n, in the generated summaries, with n from 1 to 4.",4.1 Quantitative analysis,[0],[0]
Results are omitted in cases where they have not been made available by previous authors.,4.1 Quantitative analysis,[0],[0]
"We also include the novel n-gram scores for the ground-truth summaries as a comparison to indicate the level of abstraction of human written summaries.
",4.1 Quantitative analysis,[0],[0]
"Even though our model outputs significantly fewer novel n-grams than human written summaries, it has a much higher percentage of novel n-grams than all the previous abstractive approaches.",4.1 Quantitative analysis,[0],[0]
"It also achieves state-of-the-art ROUGE-L performance on both dataset versions, and obtains ROUGE-1 and ROUGE-2 scores close to state-of-the-art results.",4.1 Quantitative analysis,[0],[0]
"In order to evaluate the relative impact of each of our individual contributions, we run ablation studies comparing our model ablations against each other and against the novelty baseline.",4.2 Ablation study,[0],[0]
The results of these different models on the validation set of the anonymized CNN/Daily Mail dataset are shown in Table 3.,4.2 Ablation study,[0],[0]
"Results show that our base model trained with the maximum-likelihood loss only and using the language model in the decoder (ML, with LM) has higher ROUGE scores, novel unigrams, and novel bigrams scores than our base model without the language model (ML).",4.2 Ablation study,[0],[0]
ML with LM also beats the novelty baseline for these metrics.,4.2 Ablation study,[0],[0]
"When training these models with reinforcement learning using the ROUGE reward (ML+RL ROUGE and ML+RL ROUGE with LM), the model with language model obtains higher ROUGE-1 and ROUGE-2 scores.",4.2 Ablation study,[0],[0]
"However, it also loses its novel unigrams and bigrams advantage.",4.2 Ablation study,[0],[0]
"Finally, using the mixed ROUGE and novelty rewards (ML+RL ROUGE+Novel) produces both higher ROUGE scores and more novel unigrams with the language model than without
it.",4.2 Ablation study,[0],[0]
This indicates that the combination of the language model in the decoder and the novelty reward during training makes our model produce more novel unigrams while maintaining high ROUGE scores.,4.2 Ablation study,[0],[0]
"In order to understand the correlation between ROUGE and novel n-gram scores across different architectures, and to find the model type that gives the best trade-off between each of these metrics, we plot the ROUGE-1 and novel unigram scores for the five best iterations of each model type on the anonymized dataset, as well as the ROUGE-2 and novel bigram scores on a separate plot.",4.3 ROUGE vs novelty trade-off,[0],[0]
We also include the novelty baseline described in Section 4.2 for values of r between 0.005 and 0.035.,4.3 ROUGE vs novelty trade-off,[0],[0]
"For each model type, we indicate the Pareto frontier by a line plot (Ben-Tal, 1980), illustrating which models of a given type give the best combination of ROUGE and novelty scores.",4.3 ROUGE vs novelty trade-off,[0],[0]
"These plots are shown in Figure 2.
",4.3 ROUGE vs novelty trade-off,[0],[0]
"These plots show that there exist an inverse correlation between ROUGE and novelty scores in all model types, illustrating the challenge of choosing a model that performs well in both.",4.3 ROUGE vs novelty trade-off,[0],[0]
"Given that, our final model (ML+RL ROUGE+Novel, with LM) provides the best trade-off of ROUGE-1 scores compared to novel unigrams, indicated by the higher Pareto frontier in the first plot.",4.3 ROUGE vs novelty trade-off,[0],[0]
"Similarly, our final model gives one of the best trade-offs of ROUGE-2 scores to novel bigrams, even though the same model without LM produces more novel
bigrams with a lower ROUGE-2 score.",4.3 ROUGE vs novelty trade-off,[0],[0]
"In order to ensure the quality of our model outputs, we ask 5 human evaluators to rate 100 randomly selected full-text test summaries, giving them two scores from 1 to 10 respectively for readability and relevance given the original article.",4.4 Qualitative evaluation,[0],[0]
We also include the full-text test outputs from See et al. (2017) and Liu et al. (2018) for comparison.,4.4 Qualitative evaluation,[0],[0]
Evaluators are shown different summaries corresponding to the same article side by side without being told which models have generated them.,4.4 Qualitative evaluation,[0],[0]
The mean score and confidence interval at 95% for each model and each evaluation criterion are reported in Table 4.,4.4 Qualitative evaluation,[0],[0]
"These results show that our model matches the relevance score of See et al. (2017) and Liu et al. (2018), but is slightly inferior to them in terms of readability.",4.4 Qualitative evaluation,[0],[0]
Text summarization.,5 Related work,[0],[0]
"Existing summarization approaches are usually either extractive or abstrac-
tive.",5 Related work,[0],[0]
"In extractive summarization, the model selects passages from the input document and combines them to form a shorter summary, sometimes with a post-processing step to ensure final coherence of the output (Neto et al., 2002; Dorr et al., 2003; Filippova and Altun, 2013; Colmenares et al., 2015; Nallapati et al., 2017).",5 Related work,[0],[0]
"While extractive models are usually robust and produce coherent summaries, they cannot create concise summaries that paraphrase the source document using new phrases.
",5 Related work,[0],[0]
Abstractive summarization allows the model to paraphrase the source document and create concise summaries with phrases not in the source document.,5 Related work,[0],[0]
"The state-of-the-art abstractive summarization models are based on sequence-tosequence models with attention (Bahdanau et al., 2015).",5 Related work,[0],[0]
"Extensions to this model include a selfattention mechanism (Paulus et al., 2017) and an article coverage vector (See et al., 2017) to prevent repeated phrases in the output summary.",5 Related work,[0],[0]
"Different training procedures have also been used improve the ROUGE score (Paulus et al., 2017) or textual
entailment (Pasunuru and Bansal, 2018) with reinforcement learning; as well as generative adversarial networks to generate more natural summaries (Liu et al., 2018).
",5 Related work,[0],[0]
Several datasets have been used to train and evaluate summarization models.,5 Related work,[0],[0]
"The Gigaword (Graff and Cieri, 2003) and some DUC datasets (Over et al., 2007) have been used for headline generation models (Rush et al., 2015; Nallapati et al., 2016), where the generated summary is shorter than 75 characters.",5 Related work,[0],[0]
"However, generating longer summaries is a more challenging task, especially for abstractive models.",5 Related work,[0],[0]
"Nallapati et al. (2016) have proposed using the CNN/Daily Mail dataset (Hermann et al., 2015) to train models for generating longer, multi-sentence summaries up to 100 words.",5 Related work,[0],[0]
"The New York Times dataset (Sandhaus, 2008) has also been used as a benchmark for the generation of long summaries (Durrett et al., 2016; Paulus et al., 2017).
",5 Related work,[0],[0]
Training strategies for sequential models.,5 Related work,[0],[0]
The common approach to training models for sequence generation is maximum likelihood estimation with teacher forcing.,5 Related work,[0],[0]
"At each time step, the model is given the previous ground-truth output and predicts the current output.",5 Related work,[0],[0]
"The sequence objective is the accumulation of cross entropy losses from each time step.
",5 Related work,[0],[0]
"Despite its popularity, this approach for sequence generation is suboptimal due to exposure bias (Huszar, 2015) and loss-evaluation mismatch (Wiseman and Rush, 2016).",5 Related work,[0],[0]
Goyal et al. (2016) propose one way to reduce exposure bias by explicitly forcing the hidden representations of the model to be similar during training and inference.,5 Related work,[0],[0]
Bengio et al. (2015) and Wiseman and Rush (2016) propose an alternate method that exposes the network to the test dynamics during training.,5 Related work,[0],[0]
"Reinforcement learning methods (Sutton and Barto, 1998), such as policy learning (Sutton
et al., 1999), mitigate the mismatch between the optimization objective and the evaluation metrics by directly optimizing evaluation metrics.",5 Related work,[0],[0]
"This approach has led to consistent improvements in domains such as image captioning (Zhang et al., 2017) and abstractive text summarization (Paulus et al., 2017).
",5 Related work,[0],[0]
"A recent approach to training sequential models utilizes generative adversarial networks to improving the human perceived quality of generated outputs (Fedus et al., 2018; Guimaraes et al., 2017; Liu et al., 2018).",5 Related work,[0],[0]
Such models use an additional discriminator network that distinguishes between natural and generated output to guide the generative model towards outputs akin to human-written text.,5 Related work,[0],[0]
"We introduced a new abstractive summarization model which uses an external language model in the decoder, as well as a new reinforcement learning reward to encourage summary abstraction.",6 Conclusions,[0],[0]
"Experiments on the CNN/Daily Mail dataset show that our model generates summaries that are much more abstractive that previous approaches, while maintaining high ROUGE scores close to or above the state of the art.",6 Conclusions,[0],[0]
"Future work could be done on closing the gap to match human levels of abstraction, which is still very far ahead from our model in terms of novel n-grams.",6 Conclusions,[0],[0]
Including mechanisms to promote paraphrase generation in the summary generator could be an interesting direction.,6 Conclusions,[0],[0]
Abstractive text summarization aims to shorten long text documents into a human readable form that contains the most important facts from the original document.,abstractText,[0],[0]
"However, the level of actual abstraction as measured by novel phrases that do not appear in the source document remains low in existing approaches.",abstractText,[0],[0]
We propose two techniques to improve the level of abstraction of generated summaries.,abstractText,[0],[0]
"First, we decompose the decoder into a contextual network that retrieves relevant parts of the source document, and a pretrained language model that incorporates prior knowledge about language generation.",abstractText,[0],[0]
"Second, we propose a novelty metric that is optimized directly through policy learning to encourage the generation of novel phrases.",abstractText,[0],[0]
"Our model achieves results comparable to state-of-the-art models, as determined by ROUGE scores and human evaluations, while achieving a significantly higher level of abstraction as measured by n-gram overlap with the source document.ive text summarization aims to shorten long text documents into a human readable form that contains the most important facts from the original document.",abstractText,[0],[0]
"However, the level of actual abstraction as measured by novel phrases that do not appear in the source document remains low in existing approaches.",abstractText,[0],[0]
We propose two techniques to improve the level of abstraction of generated summaries.,abstractText,[0],[0]
"First, we decompose the decoder into a contextual network that retrieves relevant parts of the source document, and a pretrained language model that incorporates prior knowledge about language generation.",abstractText,[0],[0]
"Second, we propose a novelty metric that is optimized directly through policy learning to encourage the generation of novel phrases.",abstractText,[0],[0]
"Our model achieves results comparable to state-of-the-art models, as determined by ROUGE scores and human evaluations, while achieving a significantly higher level of abstraction as measured by n-gram overlap with the source document.",abstractText,[0],[0]
Improving Abstraction in Text Summarization,title,[0],[0]
"Proceedings of NAACL-HLT 2018, pages 58–68 New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics",text,[0],[0]
"Morphologically complex words (MCWs) are multi-layer structures which consist of different subunits, each of which carries semantic information and has a specific syntactic role.",1 Introduction,[0],[0]
Table 1 gives a Turkish example to show this type of complexity.,1 Introduction,[0],[0]
This example is a clear indication that word-based models are not suitable to process such complex languages.,1 Introduction,[0],[0]
"Accordingly, when translating MRLs, it might not be a good idea to treat words as atomic units as it demands a large vocabulary that im-
poses extra overhead.",1 Introduction,[0],[0]
"Since MCWs can appear in various forms we require a very large vocabulary to i) cover as many morphological forms and words as we can, and ii) reduce the number of OOVs.",1 Introduction,[0],[0]
"Neural models by their nature are complex, and we do not want to make them more complicated by working with large vocabularies.",1 Introduction,[0],[0]
"Furthermore, even if we have quite a large vocabulary set, clearly some words would remain uncovered by that.",1 Introduction,[0],[0]
"This means that a large vocabulary not only complicates the entire process, but also does not necessarily mitigate the OOV problem.",1 Introduction,[0],[0]
"For these reasons we propose an NMT engine which works at the character level.
",1 Introduction,[0],[0]
"In this paper, we focus on translating into MRLs and issues associated with word formation on the target side.",1 Introduction,[0],[0]
"To provide a better translation we do not necessarily need a large target lexicon, as an MCW can be gradually formed during decoding by means of its subunits, similar to the solution proposed in character-based decoding models (Chung et al., 2016).",1 Introduction,[0],[0]
"Generating a complex word character-by-character is a better approach compared to word-level sampling, but it has other disadvantages.
",1 Introduction,[0],[0]
"One character can co-occur with another with almost no constraint, but a particular word or morpheme can only collocate with a very limited number of other constituents.",1 Introduction,[0],[0]
"Unlike words, characters are not meaning-bearing units and do not preserve syntactic information, so (in the extreme case) the
58
chance of sampling each character by the decoder is almost equal to the others, but this situation is less likely for words.",1 Introduction,[0],[0]
"The only constraint that prioritize which character should be sampled is information stored in the decoder, which we believe is insufficient to cope with all ambiguities.",1 Introduction,[0],[0]
"Furthermore, when everything is segmented into characters the target sentence with a limited number of words is changed to a very long sequence of characters, which clearly makes it harder for the decoder to remember such a long history.",1 Introduction,[0],[0]
"Accordingly, character-based information flows in the decoder may not be as informative as wordor morpheme-based information.
",1 Introduction,[0],[0]
In the character-based NMT model everything is almost the same as its word-based counterpart except the target vocabulary whose size is considerably reduced from thousands of words to just hundreds of characters.,1 Introduction,[0],[0]
"If we consider the decoder as a classifier, it should in principle be able to perform much better over hundreds of classes (characters) rather than thousands (words), but the performance of character-based models is almost the same as or slightly better than their wordbased versions.",1 Introduction,[0],[0]
"This underlines the fact that the character-based decoder is perhaps not fed with sufficient information to provide improved performance compared to word-based models.
",1 Introduction,[0],[0]
"Character-level decoding limits the search space by dramatically reducing the size of the target vocabulary, but at the same time widens the search space by working with characters whose sampling seems to be harder than words.",1 Introduction,[0],[0]
"The freedom in selection and sampling of characters can mislead the decoder, which prevents us from taking the maximum advantages of character-level decoding.",1 Introduction,[0],[0]
"If we can control the selection process with other constraints, we may obtain further benefit from restricting the vocabulary set, which is the main goal followed in this paper.
",1 Introduction,[0],[0]
In order to address the aforementioned problems we redesign the neural decoder in three different scenarios.,1 Introduction,[0],[0]
In the first scenario we equip the decoder with an additional morphology table including target-side affixes.,1 Introduction,[0],[0]
We place an attention module on top of the table which is controlled by the decoder.,1 Introduction,[0],[0]
"At each step, as the decoder samples a character, it searches the table to find the most relevant information which can enrich its state.",1 Introduction,[0],[0]
Signals sent from the table can be interpreted as additional constraints.,1 Introduction,[0],[0]
"In the second scenario we share
the decoder between two output channels.",1 Introduction,[0],[0]
The first one samples the target character and the other one predicts the morphological annotation of the character.,1 Introduction,[0],[0]
This multi-tasking approach forces the decoder to send morphology-aware information to the final layer which results in better predictions.,1 Introduction,[0],[0]
In the third scenario we combine these two models.,1 Introduction,[0],[0]
"Section 3 provides more details on our models.
",1 Introduction,[0],[0]
"Together with different findings that will be discussed in the next sections, there are two main contributions in this paper.",1 Introduction,[0],[0]
We redesigned and tuned the NMT framework for translating into MRLs.,1 Introduction,[0],[0]
It is quite challenging to show the impact of external knowledge such as morphological information in neural models especially in the presence of large parallel corpora.,1 Introduction,[0],[0]
"However, our models are able to incorporate morphological information into decoding and boost its quality.",1 Introduction,[0],[0]
We inject the decoder with morphological properties of the target language.,1 Introduction,[0],[0]
"Furthermore, the novel architecture proposed here is not limited to morphological information alone and is flexible enough to provide other types of information for the decoder.",1 Introduction,[0],[0]
There are several models for NMT of MRLs which are designed to deal with morphological complexities.,2 NMT for MRLs,[0],[0]
García-Martínez et al. (2016) and Sennrich and Haddow (2016) adapted the factored machine translation approach to neural models.,2 NMT for MRLs,[0],[0]
Morphological annotations can be treated as extra factors in such models.,2 NMT for MRLs,[0],[0]
Jean et al. (2015) proposed a model to handle very large vocabularies.,2 NMT for MRLs,[0],[0]
Luong et al. (2015) addressed the problem of rare words and OOVs with the help of a post-translation phase to exchange unknown tokens with their potential translations.,2 NMT for MRLs,[0],[0]
Sennrich et al. (2016) used subword units for NMT.,2 NMT for MRLs,[0],[0]
The model relies on frequent subword units instead of words.,2 NMT for MRLs,[0],[0]
Costa-jussà and Fonollosa (2016) designed a model for translating from MRLs.,2 NMT for MRLs,[0],[0]
The model encodes source words with a convolutional module proposed by Kim et al. (2016).,2 NMT for MRLs,[0],[0]
"Each word is represented by a convolutional combination of its characters.
",2 NMT for MRLs,[0],[0]
Luong and Manning (2016) used a hybrid model for representing words.,2 NMT for MRLs,[0],[0]
"In their model, unseen and complex words are encoded with a character-based representation, with other words encoded via the usual surface-form embeddings.",2 NMT for MRLs,[0],[0]
"Vylomova et al. (2016) compared differ-
ent representation models (word-, morpheme, and character-level models) which try to capture complexities on the source side, for the task of translating from MRLs.
",2 NMT for MRLs,[0],[0]
Chung et al. (2016) proposed an architecture which benefits from different segmentation schemes.,2 NMT for MRLs,[0],[0]
"On the encoder side, words are segmented into subunits with the byte-pair segmentation model (bpe) (Sennrich et al., 2016), and on the decoder side, one target character is produced at each time step.",2 NMT for MRLs,[0],[0]
"Accordingly, the target sequence is treated as a long chain of characters without explicit segmentation.",2 NMT for MRLs,[0],[0]
Grönroos et al. (2017) focused on translating from English into Finnish and implicitly incorporated morphological information into NMT through multi-task learning.,2 NMT for MRLs,[0],[0]
"Passban (2018) comprehensively studied the problem of translating MRLs and addressed potential challenges in the field.
",2 NMT for MRLs,[0],[0]
"Among all the models reviewed in this section, the network proposed by Chung et al. (2016) could be seen as the best alternative for translating into MRLs as it works at the character level on the decoder side and it was evaluated in different settings on different languages.",2 NMT for MRLs,[0],[0]
"Consequently, we consider it as a baseline model in our experiments.",2 NMT for MRLs,[0],[0]
We propose a compatible neural architecture for translating into MRLs.,3 Proposed Architecture,[0],[0]
The model benefits from subword- and character-level information and improves upon the state-of-the-art model of Chung et al. (2016).,3 Proposed Architecture,[0],[0]
"We manipulated the model to incorporate morphological information and developed three new extensions, which are discussed in Sections 3.1, 3.2, and 3.3.",3 Proposed Architecture,[0],[0]
In the first extension an additional table containing the morphological information of the target language is plugged into the decoder to assist with word formation.,3.1 The Embedded Morphology Table,[0],[0]
"Each time the decoder samples from the target vocabulary, it searches the morphology table to find the most relevant affixes given its current state.",3.1 The Embedded Morphology Table,[0],[0]
"Items selected from the table act as guiding signals to help the decoder sample a better character.
",3.1 The Embedded Morphology Table,[0],[0]
"Our base model is an encoder-decoder model with attention (Bahdanau et al., 2014), implemented using gated recurrent units (GRUs) (Cho et al., 2014).",3.1 The Embedded Morphology Table,[0],[0]
"We use a four-layer model in our
experiments.",3.1 The Embedded Morphology Table,[0],[0]
"Similar to Chung et al. (2016) and Wu et al. (2016), we use bidirectional units to encode the source sequence.",3.1 The Embedded Morphology Table,[0],[0]
Bidirectional GRUs are placed only at the input layer.,3.1 The Embedded Morphology Table,[0],[0]
The forward GRU reads the input sequence in its original order and the backward GRU reads the input in the reverse order.,3.1 The Embedded Morphology Table,[0],[0]
Each hidden state of the encoder in one time step is a concatenation of the forward and backward states at the same time step.,3.1 The Embedded Morphology Table,[0],[0]
"This type of bidirectional processing provides a richer representation of the input sequence.
",3.1 The Embedded Morphology Table,[0],[0]
"On the decoder side, one target character is sampled from a target vocabulary at each time step.",3.1 The Embedded Morphology Table,[0],[0]
"In the original encoder-decoder model, the probability of predicting the next token yi is estimated based on i) the current hidden state of the decoder, ii) the last predicted token, and iii) the context vector.",3.1 The Embedded Morphology Table,[0],[0]
"This process can be formulated as p(yi|y1, ..., yi−1,x) = g(hi, yi−1, ci), where g(.) is a softmax function, yi is the target token (to be predicted), x is the representation of the input sequence, hi is the decoder’s hidden state at the i-th time step, and ci indicates the context vector which is a weighted summary of the input sequence generated by the attention module.",3.1 The Embedded Morphology Table,[0],[0]
"ci is generated via the procedure shown in (1):
ci = n∑
j=1
αijsj
αij = exp (eij)∑ n k=1 exp (eik) ; eij = a(sj , hi−1)
(1)
where αij denotes the weight of the j-th hidden state of the encoder (sj) when the decoder predicts the i-th target token, and a() shows a combinatorial function which can be modeled through a simple feed-forward connection.",3.1 The Embedded Morphology Table,[0],[0]
"n is the length of the input sequence.
",3.1 The Embedded Morphology Table,[0],[0]
"In our first extension, the prediction probability is conditioned on one more constraint in addition to those three existing ones, as in p(yi|y1, ..., yi−1,x) = g(hi, yi−1, ci, cmi ), where cmi is the morphological context vector and carries information from those useful affixes which can enrich the decoder’s information.",3.1 The Embedded Morphology Table,[0],[0]
cmi is generated via an attention module over the morphology table which works in a similar manner to wordbased attention model.,3.1 The Embedded Morphology Table,[0],[0]
"The attention procedure for
generating cmi is formulated as in (2):
cmi =
|A|∑
u=1
βiufu
βiu = exp (emiu)∑ |A| v=1 exp (eiv) ; emiu = a m(fu, hi−1)
(2) where fu represents the embedding of the u-th affix (u-th column) in the morphology/affix tableA, βiu is the weight assigned to fu when predicting the i-th target token, and am is a feed-forward connection between the morphology table and the decoder.
",3.1 The Embedded Morphology Table,[0],[0]
"The attention module in general can be considered as a search mechanism, e.g. in the original encoder-decoder architecture the basic attention module finds the most relevant input words to make the prediction.",3.1 The Embedded Morphology Table,[0],[0]
"In multi-modal NMT (Huang et al., 2016; Calixto et al., 2017) an extra attention module is added to the basic one in order to search the image input to find the most relevant image segments.",3.1 The Embedded Morphology Table,[0],[0]
"In our case we have a similar additional attention module which searches the morphology table.
",3.1 The Embedded Morphology Table,[0],[0]
"In this scenario, the morphology table including the target language’s affixes can be considered as an external knowledge repository that sends auxiliary signals which accompany the main input sequence at all time steps.",3.1 The Embedded Morphology Table,[0],[0]
Such a table certainly includes useful information for the decoder.,3.1 The Embedded Morphology Table,[0],[0]
"As we are not sure which affix preserves those pieces of useful information, we use an attention module to search for the best match.",3.1 The Embedded Morphology Table,[0],[0]
The attention module over the table works as a filter which excludes irrelevant affixes and amplifies the impact of relevant ones by assigning different weights (β values).,3.1 The Embedded Morphology Table,[0],[0]
"In the first scenario, we embedded a morphology table into the decoder in the hope that it can enrich sampling information.",3.2 The Auxiliary Output Channel,[0],[0]
"Mathematically speaking, such an architecture establishes an extra constraint
for sampling and can control the decoder’s predictions.",3.2 The Auxiliary Output Channel,[0],[0]
"However, this is not the only way of constraining the decoder.",3.2 The Auxiliary Output Channel,[0],[0]
"In the second scenario, we define extra supervision to the network via another predictor (output channel).",3.2 The Auxiliary Output Channel,[0],[0]
"The first channel is responsible for generating translations and predicts one character at each time step, and the other one tries to understand the morphological status of the decoder by predicting the morphological annotation (li) of the target character.
",3.2 The Auxiliary Output Channel,[0],[0]
"The approach in the second scenario proposes a multi-task learning architecture, by which in one task we learn translations and in the other one morphological annotations.",3.2 The Auxiliary Output Channel,[0],[0]
"Therefore, all network modules –especially the last hidden layer just before the predictors– should provide information which is useful enough to make correct predictions in both channels, i.e. the decoder should preserve translation as well as morphological knowledge.",3.2 The Auxiliary Output Channel,[0],[0]
"Since we are translating into MRLs this type of mixed information (morphology+translation) can be quite useful.
",3.2 The Auxiliary Output Channel,[0],[0]
"In our setting, the morphological annotation li predicted via the second channel shows to which part of the word or morpheme the target character belongs, i.e. the label for the character is the morpheme that includes it.",3.2 The Auxiliary Output Channel,[0],[0]
We clarify the prediction procedure via an example from our training set (see Section 4).,3.2 The Auxiliary Output Channel,[0],[0]
"When the Turkish word ‘terbiyesizlik’ is generated, the first channel is supposed to predict t, e, r, up to k, one after another.",3.2 The Auxiliary Output Channel,[0],[0]
"For the same word, the second channel is supposed to predict stem-C for the fist 7 steps as the first 7 characters ‘terbiye’ belong to the stem of the word.",3.2 The Auxiliary Output Channel,[0],[0]
The C sign indicates that stem-C is a class label.,3.2 The Auxiliary Output Channel,[0],[0]
"The second channel should also predict siz-C when the first channel predicts s (eighth character), i (ninth character), and z (tenth character), and lik-C when the first channel samples the last three characters.",3.2 The Auxiliary Output Channel,[0],[0]
"Clearly, the second channel is a classifier which works over the {stem-C, siz-C, lik-C, ...} classes.",3.2 The Auxiliary Output Channel,[0],[0]
"Figure 1 illustrates a segment of a sentence including this Turkish word and explains which class
tags should be predicted by each channel.",3.2 The Auxiliary Output Channel,[0],[0]
To implement the second scenario we require a single-source double-target training corpus: [source sentence]→ [sequence of target characters & sequence of morphological annotations] (see Section 4).,3.2 The Auxiliary Output Channel,[0],[0]
The objective function should also be manipulated accordingly.,3.2 The Auxiliary Output Channel,[0],[0]
"Given a training set {xt,yt,mt}Tt=1 the goal is to maximize the joint loss function shown in (3):
λ T∑
t=1
logP (yt|xt; θ)+(1−λ) T∑
t=1
logP (mt|xt; θ)
(3) where xt is the t-th input sentence whose translation is a sequence of target characters shown by yt.",3.2 The Auxiliary Output Channel,[0],[0]
mt is the sequence of morphological annotations and T is the size of the training set.,3.2 The Auxiliary Output Channel,[0],[0]
θ is the set of network parameters and λ is a scalar to balance the contribution of each cost function.,3.2 The Auxiliary Output Channel,[0],[0]
λ is adjusted on the development set during training.,3.2 The Auxiliary Output Channel,[0],[0]
"In the first scenario, we aim to provide the decoder with useful information about morphological properties of the target language, but we are not sure whether signals sent from the table are what we really need.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"They might be helpful or even harmful, so there should be a mechanism to control their quality.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"In the second scenario we also have a similar problem as the last layer requires some information to predict the correct morphological class through the second channel, but there is no guarantee to ensure that information in the decoder is sufficient for this sort of prediction.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"In order to address these problems, in the third extension we combine both scenarios as they are complementary and can potentially help each other.
",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"The morphology table acts as an additional useful source of knowledge as it already consists of affixes, but its content should be adapted according to the decoder and its actual needs.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"Accordingly, we need a trainer to update the table properly.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
The extra prediction channel plays this role for us as it forces the network to predict the target language’s affixes at the output layer.,3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
The error computed in the second channel is backpropagated to the network including the morphology table and updates its affix information into what the decoder actually needs for its prediction.,3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"Therefore, the second output channel helps us train better affix embeddings.
",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
The morphology table also helps the second predictor.,3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"Without considering the table, the last layer only includes information about the input sequence and previously predicted outputs, which is not directly related to morphological information.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"The second attention module retrieves useful affixes from the morphology table and concatenates to the last layer, which means the decoder is explicitly fed with morphological information.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"Therefore, these two modules mutually help each other.",3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
The external channel helps update the morphology table with high-quality affixes (backward pass) and the table sends its high-quality signals to the prediction layer (forward pass).,3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
The relation between these modules and the NMT architecture is illustrated in Figure 2.,3.3 Combining the Extended Output Layer and the Embedded Morphology Table,[0],[0]
"As previously reviewed, different models try to capture complexities on the encoder side, but to the best of our knowledge the only model which proposes a technique to deal with complex constituents on the decoder side is that of Chung et al. (2016), which should be an appropriate baseline for our comparisons.",4 Experimental Study,[0],[0]
"Moreover, it outperforms other existing NMT models, so we prefer to compare our network to the best existing model.",4 Experimental Study,[0],[0]
This model is referred to as CDNMT in our experiments.,4 Experimental Study,[0],[0]
"In the next sections first we explain our experimental setting, corpora, and how we build the morphology table (Section 4.1), and then report experimental results (Section 4.2).",4 Experimental Study,[0],[0]
"In order to make our work comparable we try to follow the same experimental setting used in CDNMT, where the GRU size is 1024, the affix and word embedding size is 512, and the beam width is 20.",4.1 Experimental Setting,[0],[0]
"Our models are trained using stochastic gradient descent with Adam (Kingma and Ba, 2015).",4.1 Experimental Setting,[0],[0]
"Chung et al. (2016) and Sennrich et al. (2016) demonstrated that bpe boosts NMT, so similar to CDNMT we also preprocess the source side of our corpora using bpe.",4.1 Experimental Setting,[0],[0]
"We use WMT-15 corpora1 to train the models, newstest-2013 for tuning and newstest-2015 as the test sets.",4.1 Experimental Setting,[0],[0]
"For English–Turkish (En–Tr) we use the OpenSubtitle2016 collection (Lison and Tiedemann, 2016).",4.1 Experimental Setting,[0],[0]
"The training side of the English–German (En–De), English–Russian (En– Ru), and En–Tr corpora include 4.5, 2.1, and 4 million parallel sentences, respectively.",4.1 Experimental Setting,[0],[0]
We randomly select 3K sentences for each of the development and test sets for En–Tr.,4.1 Experimental Setting,[0],[0]
"For all language pairs we keep the 400 most frequent characters as the target-side character set and replace the remainder (infrequent characters) with a specific character.
",4.1 Experimental Setting,[0],[0]
One of the key modules in our architecture is the morphology table.,4.1 Experimental Setting,[0],[0]
In order to implement it we use a look-up table whose columns include embeddings for the target language’s affixes (each column represents one affix) which are updated during training.,4.1 Experimental Setting,[0],[0]
"As previously mentioned, the table is intended to provide useful, morphological information so it should be initialized properly, for which we use a morphology-aware embeddinglearning model.",4.1 Experimental Setting,[0],[0]
"To this end, we use the neural language model of Botha and Blunsom (2014) in which each word is represented via a linear combination of the embeddings of its surface form and subunits, e.g. −−−−−−−−−→ terbiyesizlik =
−−−−−−−−−→ terbiyesizlik +−−−−→
terbiye",4.1 Experimental Setting,[0],[0]
+ −→ siz,4.1 Experimental Setting,[0],[0]
+,4.1 Experimental Setting,[0],[0]
−→ lik.,4.1 Experimental Setting,[0],[0]
"Given a sequence of words, the neural language model tries to predict the next word, so it learns sentence-level dependencies as well as intra-word relations.",4.1 Experimental Setting,[0],[0]
"The model trains surface form and subword-level embeddings which provides us with high-quality affix embeddings.
",4.1 Experimental Setting,[0],[0]
"Our neural language model is a recurrent network with a single 1000-dimensional GRU layer, which is trained on the target sides of our parallel corpora.",4.1 Experimental Setting,[0],[0]
The embedding size is 512 and we use a batch size of 100 to train the model.,4.1 Experimental Setting,[0],[0]
"Before training the neural language model, we need
1http://www.statmt.org/wmt15/
to manipulate the training corpus to decompose words into morphemes for which we use Morfessor (Smit et al., 2014), an unsupervised morphological analyzer.",4.1 Experimental Setting,[0],[0]
"Using Morfessor each word is segmented into different subunits where we consider the longest part as the stem of each word; what appears before the stem is taken as a member of the set of prefixes (there might be one or more prefixes) and what follows the stem is considered as a member of the set of suffixes.
",4.1 Experimental Setting,[0],[0]
"Since Morfessor is an unsupervised analyzer, in order to minimize segmentation errors and avoid noisy results we filter its output and exclude subunits which occur fewer than 500 times.2 After decomposing, filtering, and separating stems from affixes, we extracted several affixes which are reported in Table 2.",4.1 Experimental Setting,[0],[0]
"We emphasize that there might be wrong segmentations in Morfessor’s output, e.g. Turkish is a suffix-based language, so there are no prefixes in this language, but based on what Morfessor generated we extracted 11 different types of prefixes.",4.1 Experimental Setting,[0],[0]
"We do not post-process Morfessor’s outputs.
",4.1 Experimental Setting,[0],[0]
"Using the neural language model we train word, stem, and affix embeddings, and initialize the look-up table (but not other parts) of the decoder using those affixes.",4.1 Experimental Setting,[0],[0]
The look-up table includes high-quality affixes trained on the target side of the parallel corpus by which we train the translation model.,4.1 Experimental Setting,[0],[0]
"Clearly, such an affix table is an additional knowledge source for the decoder.",4.1 Experimental Setting,[0],[0]
It preserves information which is very close to what the decoder actually needs.,4.1 Experimental Setting,[0],[0]
"However, there might be some missing pieces of information or some incompatibility between the decoder and the table, so we do not freeze the morphology table during training, but let the decoder update it with respect to its needs in the forward and backward passes.
",4.1 Experimental Setting,[0],[0]
"2The number may seem a little high, but for a corpus with more than 115M words this is not a strict threshold in practice.",4.1 Experimental Setting,[0],[0]
Table 3 summarizes our experimental results.,4.2 Experimental Results,[0],[0]
"We report results for the bpe→char setting, which means the source token is a bpe unit and the decoder samples a character at each time step.",4.2 Experimental Results,[0],[0]
CDNMT is the baseline model.,4.2 Experimental Results,[0],[0]
"Table 3 includes scores reported from the original CDNMT model (Chung et al., 2016) as well as the scores from our reimplementation.",4.2 Experimental Results,[0],[0]
"To make our work comparable and show the impact of the new architecture, we tried to replicate CDNMT’s results in our experimental setting, we kept everything (parameters, iterations, epochs etc.) unchanged and evaluated the extended model in the same setting.",4.2 Experimental Results,[0],[0]
"Table 3 reports BLEU scores (Papineni et al., 2002) of our NMT models.
",4.2 Experimental Results,[0],[0]
"Table 3 can be interpreted from different perspectives but the main findings are summarized as follows:
•",4.2 Experimental Results,[0],[0]
"The morphology table yields significant improvements for all languages and settings.
",4.2 Experimental Results,[0],[0]
•,4.2 Experimental Results,[0],[0]
The morphology table boosts the En–Tr engine more than others and we think this is because of the nature of the language.,4.2 Experimental Results,[0],[0]
"Turkish is an agglutinative language in which morphemes are clearly separable from each other, but in German and Russian morphological transformations rely more on fusional operations rather than agglutination.
",4.2 Experimental Results,[0],[0]
"• It seems that there is a direct relation between the size of the morphology table and the gain provided for the decoder, because Russian and Turkish have bigger tables and benefit from the table more than German which has fewer affixes.
",4.2 Experimental Results,[0],[0]
"• The auxiliary output channel is even more useful than the morphology table for all settings but En–Ru, and we think this is because of the morpheme-per-word ratio in Russian.",4.2 Experimental Results,[0],[0]
"The number of morphemes attached to a Russian word is usually more than those of German and Turkish words in our corpora, and it makes the prediction harder for the classifier (the more the number of suffixes attached to a word, the harder the classification task).
",4.2 Experimental Results,[0],[0]
"• The combination of the morphology table and the extra output channel provides the best result for all languages.
",4.2 Experimental Results,[0],[0]
"Figure 3 depicts the impact of the morphology table and the extra output channel for each language.
",4.2 Experimental Results,[0],[0]
To further study our models’ behaviour and ensure that our extensions do not generate random improvements we visualized some attention weights when generating ‘terbiyesizlik’.,4.2 Experimental Results,[0],[0]
"In Figure 4, the upper figure shows attention weights for all Turkish affixes, where the y axis shows different time steps and the x axis includes attention weights of all affixes (304 columns) for those time steps, e.g. the first row and the first column represents the attention weight assigned to the first Turkish affix when sampling t in ‘terbiyesizlik’.",4.2 Experimental Results,[0],[0]
"While at the first glance the figure may appear to be somewhat confusing, but it provides some interesting insights which we elaborate next.
",4.2 Experimental Results,[0],[0]
In addition to the whole attention matrix we also visualized a subset of weights to show how the morphology table provides useful information.,4.2 Experimental Results,[0],[0]
"In the second figure we study the behaviour of the morphology table for the first (t1), fifth (i5), ninth
(i9), and twelfth (i12) time steps when generating the same Turkish word ‘t1erbi5yesi9zli12k’.",4.2 Experimental Results,[0],[0]
t1 is the first character of the word.,4.2 Experimental Results,[0],[0]
"We also have three i characters from different morphemes, where the first one is part of the stem, the second one belongs to the suffix ‘siz’, and the third one to ‘lik’.",4.2 Experimental Results,[0],[0]
It is interesting to see how the table reacts to the same character from different parts.,4.2 Experimental Results,[0],[0]
For each time step we selected the top-10 affixes which have the highest attention weights.,4.2 Experimental Results,[0],[0]
"The set of top-10 affixes can be different for each step, so we made a union of those sets which gives us 22 affixes.",4.2 Experimental Results,[0],[0]
"The bottom part of Figure 4 shows the attention weights for those 22 affixes at each time step.
",4.2 Experimental Results,[0],[0]
After analyzing the weights we observed interesting properties about the morphology table and the auxiliary attention module.3,4.2 Experimental Results,[0],[0]
"The main findings about the behaviour of the table are as follows:
•",4.2 Experimental Results,[0],[0]
The model assigns high attention weights to stem-C for almost all time steps.,4.2 Experimental Results,[0],[0]
"However, the weights assigned to this class for t1 and i5 are much higher than those of affix characters (as they are part of the stem).",4.2 Experimental Results,[0],[0]
"The vertical lines in both figures approve this feature (bad behaviour).
",4.2 Experimental Results,[0],[0]
"• For some unknown reasons there are some affixes which have no direct relation to that particulate time step but they receive a high attention, such as maz in t12 (bad behaviour).
",4.2 Experimental Results,[0],[0]
"• For almost all time steps the highest attention weight belongs to the class which is expected
3Our observations are not based on this example alone as we studied other random examples, and the table shows consistent behaviour for all examples.
to be selected, e.g. weights for (i5,stem-C) or (i9,siz-C) (good behaviour).
",4.2 Experimental Results,[0],[0]
•,4.2 Experimental Results,[0],[0]
"The morphology table may send bad or good signals but it is consistent for similar or cooccurring characters, e.g. for the last three time steps l11, i12, and k13, almost the same set of affixes receives the highest attention weights.",4.2 Experimental Results,[0],[0]
"This consistency is exactly what we are looking for, as it can define a reliable external constraint for the decoder to guide it.",4.2 Experimental Results,[0],[0]
Vertical lines on the figure also confirm this fact.,4.2 Experimental Results,[0],[0]
"They show that for a set of consecutive characters which belong to the same morpheme the attention module sends a signal from a particular affix (good behaviour).
",4.2 Experimental Results,[0],[0]
• There are some affixes which might not be directly related to that time step but receive high attention weights.,4.2 Experimental Results,[0],[0]
"This is because those affixes either include the same character which the decoder tries to predict (e.g. i-C for i4 or t-C and tin-C for t1), or frequently appear with that part of the word which includes the target character (e.g. mi-C has a high weight when predicting t1 because t1 belongs to terbiye which frequently collocates with mi-C: terbiye+mi) (good behaviour).
",4.2 Experimental Results,[0],[0]
"Finally, in order to complete our evaluation study we feed the English-to-German NMT model with the sentence ‘Terms and conditions for sending contributions to the BBC’, to show how the model behaves differently and generates a better target sentence.",4.2 Experimental Results,[0],[0]
"Translations generated by our models are illustrated in Table 4.
",4.2 Experimental Results,[0],[0]
"The table demonstrates that our architecture is able to control the decoder and limit its selections, e.g. the word ‘allgemeinen’ generated by the baseline model is redundant.",4.2 Experimental Results,[0],[0]
"There is no constraint to inform the baseline model that this word should not be generated, whereas our proposed architecture controls the decoder in such situations.",4.2 Experimental Results,[0],[0]
"After analyzing our model, we realized that there are strong attention weights assigned to the w-space (indicating white space characters) and BOS (beginning of the sequence) columns of the affix table while sampling the first character of the word ‘Geschäft’, which shows that the decoder is informed about the start point of the sequence.",4.2 Experimental Results,[0],[0]
"Similar to the baseline model’s decoder, our decoder can sample any character including ‘a’ of ‘allgemeinen’ or ‘G’ of ‘Geschäft’.",4.2 Experimental Results,[0],[0]
"Translation information stored in the baseline decoder is not sufficient for selecting the right character ‘G’, so the decoder wrongly starts with ‘i’ and continues along a wrong path up to generating the whole word.",4.2 Experimental Results,[0],[0]
"However, our decoder’s information is accompanied with signals from the affix table which force it to start with a better initial character, whose sampling leads to generating the correct target word.
",4.2 Experimental Results,[0],[0]
Another interesting feature about the table is the new structure ‘Geschäft s bedingungen’ generated by the improved model.,4.2 Experimental Results,[0],[0]
"As the reference translation shows, in the correct form these two structures should be glued together via ‘s’, which can be considered as an infix.",4.2 Experimental Results,[0],[0]
"As our model is supposed to detect this sort of intra-word relation, it treats the whole structure as two compounds which are connected to one another via an infix.",4.2 Experimental Results,[0],[0]
"Although this is not a correct translation and it would be trivial to post-edit into the correct output form, it is interesting to see how our mechanism forces the decoder to pay attention to intra-word relations.
",4.2 Experimental Results,[0],[0]
"Apart from these two interesting findings, the number of wrong character selections in the baseline model is considerably reduced in the improved model because of our enhanced architecture.",4.2 Experimental Results,[0],[0]
In this paper we proposed a new architecture to incorporate morphological information into the NMT pipeline.,5 Conclusion and Future Work,[0],[0]
"We extended the state-of-the-art NMT model (Chung et al., 2016) with a morphology table.",5 Conclusion and Future Work,[0],[0]
The table could be considered as an external knowledge source which is helpful as it increases the capacity of the model by increasing the number of network parameters.,5 Conclusion and Future Work,[0],[0]
We tried to benefit from this advantage.,5 Conclusion and Future Work,[0],[0]
"Moreover, we managed to fill the table with morphological information to further boost the NMT model when translating into MRLs.",5 Conclusion and Future Work,[0],[0]
Apart from the table we also designed an additional output channel which forces the decoder to predict morphological annotations.,5 Conclusion and Future Work,[0],[0]
The error signals coming from the second channel during training inform the decoder with morphological properties of the target language.,5 Conclusion and Future Work,[0],[0]
"Experimental results show that our techniques were useful for NMT of MRLs.
",5 Conclusion and Future Work,[0],[0]
As our future work we follow three main ideas.,5 Conclusion and Future Work,[0],[0]
i),5 Conclusion and Future Work,[0],[0]
We try to find more efficient ways to supply morphological information for both the encoder and decoder. ii),5 Conclusion and Future Work,[0],[0]
"We plan to benefit from other types of information such as syntactic and semantic annotations to boost the decoder, as the table is not limited to morphological information alone and can preserve other sorts of information.",5 Conclusion and Future Work,[0],[0]
iii),5 Conclusion and Future Work,[0],[0]
"Finally, we target sequence generation for fusional languages.",5 Conclusion and Future Work,[0],[0]
"Although our model showed significant improvements for both German and Russian, the proposed model is more suitable for generating sequences in agglutinative languages.",5 Conclusion and Future Work,[0],[0]
"We thank our anonymous reviewers for their valuable feedback, as well as the Irish centre for highend computing (www.ichec.ie) for providing computational infrastructures.",Acknowledgments,[0],[0]
This work has been supported by the ADAPT Centre for Digital Content Technology which is funded under the SFI Research Centres Programme (Grant 13/RC/2106) and is co-funded under the European Regional Development Fund.,Acknowledgments,[0],[0]
"Recently, neural machine translation (NMT) has emerged as a powerful alternative to conventional statistical approaches.",abstractText,[0],[0]
"However, its performance drops considerably in the presence of morphologically rich languages (MRLs).",abstractText,[0],[0]
Neural engines usually fail to tackle the large vocabulary and high out-of-vocabulary (OOV) word rate of MRLs.,abstractText,[0],[0]
"Therefore, it is not suitable to exploit existing word-based models to translate this set of languages.",abstractText,[0],[0]
"In this paper, we propose an extension to the state-of-the-art model of Chung et al. (2016), which works at the character level and boosts the decoder with target-side morphological information.",abstractText,[0],[0]
"In our architecture, an additional morphology table is plugged into the model.",abstractText,[0],[0]
"Each time the decoder samples from a target vocabulary, the table sends auxiliary signals from the most relevant affixes in order to enrich the decoder’s current state and constrain it to provide better predictions.",abstractText,[0],[0]
"We evaluated our model to translate English into German, Russian, and Turkish as three MRLs and observed significant improvements.",abstractText,[0],[0]
Improving Character-based Decoding Using Target-Side Morphological Information for Neural Machine Translation,title,[0],[0]
"The Gibbs sampler of Geman & Geman (1984), also known as the Glauber dynamics or the heat-bath algorithm, is a leading Markov chain Monte Carlo (MCMC) method for approximating expectations unavailable in closed form.",1. Introduction,[0],[0]
"First detailed as a technique for restoring degraded images (Geman & Geman, 1984), Gibbs sampling has since found diverse applications in statistical physics (Janke, 2008), stochastic optimization and parameter estimation (Geyer, 1991), and Bayesian inference (Lunn et al., 2000).
",1. Introduction,[0],[0]
"The hallmark of any Gibbs sampler is conditional simulation: individual variables are successively simulated from the univariate conditionals of a multivariate target distribu-
1Department of Computer Science, Stanford University, Stanford, CA 94305 USA 2Microsoft Research New England, One Memorial Drive, Cambridge, MA 02142 USA.",1. Introduction,[0],[0]
"Correspondence to: Ioannis Mitliagkas <imit@stanford.edu>, Lester Mackey <lmackey@microsoft.com>.
",1. Introduction,[0],[0]
"Proceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017.",1. Introduction,[0],[0]
"Copyright 2017 by the author(s).
tion.",1. Introduction,[0],[0]
"The principal degree of freedom is the scan, the order in which variables are sampled (He et al., 2016).",1. Introduction,[0],[0]
"While it is common to employ a systematic scan, sweeping through each variable in turn, or a uniform random scan, sampling each variable with equal frequency, it is known that nonuniform scans can lead to more accurate inferences both in theory and in practice (Liu et al., 1995; Levine & Casella, 2006).",1. Introduction,[0],[0]
This effect is particularly pronounced when certain variables are of greater inferential interest.,1. Introduction,[0],[0]
"Past approaches to optimizing Gibbs sampler scans were based on asymptotic quality measures approximated with the output of a Markov chain (Levine et al., 2005; Levine & Casella, 2006).
",1. Introduction,[0],[0]
"In this work, we propose a computable non-asymptotic scan quality measure for discrete target distributions based on Dobrushin’s notion of variable influence (Dobrushin & Shlosman, 1985).",1. Introduction,[0],[0]
"We show that for a given subset of variables, this Dobrushin variation (DV) bounds the marginal total variation between a target distribution and T steps of Gibbs sampling with a specified scan.",1. Introduction,[0],[0]
"More generally, Dobrushin variation bounds a weighted total variation based on userinputted importance weights for each variable.",1. Introduction,[0],[0]
We couple this quality measure with an efficient procedure for optimizing scan quality by minimizing Dobrushin variation.,1. Introduction,[0],[0]
"Our Dobrushin-optimized Gibbs samplers (DoGS) come equipped with a guaranteed bound on scan quality, are never worse than the standard uniform random and systematic scans, and can be tailored to a target number of sampling steps and a subset of target variables.",1. Introduction,[1.0],"['Our Dobrushin-optimized Gibbs samplers (DoGS) come equipped with a guaranteed bound on scan quality, are never worse than the standard uniform random and systematic scans, and can be tailored to a target number of sampling steps and a subset of target variables.']"
"Moreover, Dobrushin variation can be used to evaluate and compare the quality of any user-specified set of scans prior to running any expensive simulations.
",1. Introduction,[0.9999999419470352],"['Moreover, Dobrushin variation can be used to evaluate and compare the quality of any user-specified set of scans prior to running any expensive simulations.']"
"The improvements achieved by DoGS are driven by an inputted matrix, ¯C, of pairwise variable influence bounds discussed in more detail in Section 3.",1. Introduction,[0],[0]
"While DoGS can be used with any discrete distribution, it was designed for targets with total influence k ¯Ck < 1, measured in any matrix norm.",1. Introduction,[1.0],"['While DoGS can be used with any discrete distribution, it was designed for targets with total influence k ¯Ck < 1, measured in any matrix norm.']"
"This criterion is known to hold for a variety of distributions, including Ising models with sufficiently high temperatures, hard-core lattice gas models, random graph colorings (Hayes, 2006), and classes of weighted constraint satisfaction problems (Feng et al., 2017).",1. Introduction,[1.0],"['This criterion is known to hold for a variety of distributions, including Ising models with sufficiently high temperatures, hard-core lattice gas models, random graph colorings (Hayes, 2006), and classes of weighted constraint satisfaction problems (Feng et al., 2017).']"
"Moreover, as we will see in Section 4.1, suitable variable influence bounds are readily available for pairwise and binary Markov random fields.",1. Introduction,[1.0],"['Moreover, as we will see in Section 4.1, suitable variable influence bounds are readily available for pairwise and binary Markov random fields.']"
"These user-friendly bounds give rise to total
influence k ¯Ck < 1 in all of our experiments and thereby enable improvements in both inferential speed and accuracy over standard scans.
",1. Introduction,[0],[0]
The remainder of the paper is organized as follows.,1. Introduction,[0],[0]
Section 2 reviews Gibbs sampling and standard but computationally intractable measures of Gibbs sampler quality.,1. Introduction,[0],[0]
"In Section 3, we introduce our scan quality measure and its relationship to (weighted) total variation.",1. Introduction,[0],[0]
We describe our procedures for selecting high-quality Gibbs sampler scans in Section 4.,1. Introduction,[0],[0]
"In Section 5, we apply our techniques to three popular applications of the Gibbs sampler: joint image segmentation and object recognition, MCMC maximum likelihood estimation with intractable gradients, and inference in the Ising model.",1. Introduction,[1.0],"['In Section 5, we apply our techniques to three popular applications of the Gibbs sampler: joint image segmentation and object recognition, MCMC maximum likelihood estimation with intractable gradients, and inference in the Ising model.']"
"In each case, we observe substantial improvements in full or marginal total variation over standard scans.",1. Introduction,[0],[0]
"Section 6 presents our conclusions and discussion of future work.
",1. Introduction,[0.9999999829558235],['Section 6 presents our conclusions and discussion of future work.']
Notation For any vector v and index,1. Introduction,[0],[0]
"i, we let v",1. Introduction,[0],[0]
"i represent the subvector of v with entry v
i removed.",1. Introduction,[0],[0]
We use diag(v) for a square diagonal matrix with v on the diagonal and for element-wise multiplication.,1. Introduction,[1.0],['We use diag(v) for a square diagonal matrix with v on the diagonal and for element-wise multiplication.']
"The i-th standard basis vector is denoted by e
i , I represents an identity matrix, 1 signifies a vector of ones, and kCk is the spectral norm of matrix C. We use the shorthand",1. Introduction,[0],[0]
"[p] , {1, . . .",1. Introduction,[0],[0]
", p}.",1. Introduction,[0],[0]
"Consider a target distribution ⇡ on a finite p-dimensional state space, X p.",2. Gibbs sampling and total variation,[0],[0]
"Our inferential goal is to approximate expectations – means, moments, marginals, and more complex function averages, E
⇡
[f(X)]",2. Gibbs sampling and total variation,[0],[0]
"= P
x2Xp ⇡(x)f(x) – under ⇡, but we assume that both exact computation and direct sampling from ⇡ are prohibitive due to the large number of states, |X |p.",2. Gibbs sampling and total variation,[0],[0]
"Markov chain Monte Carlo (MCMC) algorithms attempt to skirt this intractability by simulating a sequence of random vectors X0, X1, . . .",2. Gibbs sampling and total variation,[0],[0]
", XT 2 X p from tractable distributions such that expectations over XT are close to expectations under ⇡.",2. Gibbs sampling and total variation,[0],[0]
"Algorithm 1 summarizes the specific recipe employed by the Gibbs sampler (Geman & Geman, 1984), a leading MCMC algorithm which successively simulates single variables from their tractable conditional distributions.",2.1. Gibbs sampling,[0],[0]
"The principal degree of freedom in a Gibbs sampler is the scan, the sequence of p-dimensional probability vectors q
1 , . . .",2.1. Gibbs sampling,[0],[0]
", q T
determining the probability of resampling each variable on each round of Gibbs sampling.",2.1. Gibbs sampling,[0],[0]
"Typically one selects between the uniform random scan, q
t = (1/p, . . .",2.1. Gibbs sampling,[0],[0]
", 1/p) for all t, where variable indices are selected uniformly at random on each round and the systematic scan, q
t = e (t mod p)+1
for each t, which repeatedly cycles through each variable
Algorithm 1 Gibbs sampling (",2.1. Gibbs sampling,[0],[0]
"Geman & Geman, 1984) input Scan (q
t
)
T t=1 ; starting distribution µ; single-variable conditionals of target distribution, ⇡(·|X i)
",2.1. Gibbs sampling,[0],[0]
"Sample from starting distribution: X0 ⇠ µ for t in 1, 2, . . .",2.1. Gibbs sampling,[0],[0]
", T do
Sample variable index to update using scan: i t ⇠ q t",2.1. Gibbs sampling,[0],[0]
Sample Xt,2.1. Gibbs sampling,[0],[0]
it ⇠ ⇡(·|Xt 1 it ) from its conditional Copy remaining variables: Xt it = X t 1,2.1. Gibbs sampling,[0],[0]
"it
end for
output Sample sequence (Xt)T t=0
in turn.",2.1. Gibbs sampling,[0],[0]
"However, non-uniform scans are known to lead to better approximations (Liu et al., 1995; Levine & Casella, 2006), motivating the need for practical procedures for evaluating and improving Gibbs sampler scans.",2.1. Gibbs sampling,[0],[0]
"Let ⇡ t represent the distribution of the t-th step, Xt, of a Gibbs sampler.",2.2. Total variation,[1.0],"['Let ⇡ t represent the distribution of the t-th step, Xt, of a Gibbs sampler.']"
The quality of a T -step,2.2. Total variation,[0],[0]
"Gibbs sampler and its scan is typically measured in terms of total variation (TV) distance between ⇡
T
and the target distribution ⇡:
Definition 1.",2.2. Total variation,[0],[0]
"The total variation distance between probability measures µ and ⌫ is the maximum difference in expectations over all [0, 1]-valued functions,
kµ ⌫k TV , sup f",2.2. Total variation,[0],[0]
":Xp![0,1] |E µ",2.2. Total variation,[0],[0]
[f(X)],2.2. Total variation,[0],[0]
E ⌫,2.2. Total variation,[0],[0]
[f(Y )],2.2. Total variation,[0],[0]
"|.
We view TV as providing a bound on the bias of a large class of Gibbs sampler expectations; note, however, that TV does not control the variance of these expectations.",2.2. Total variation,[0],[0]
"While we typically sample all p variables in the process of Gibbs sampling, it is common for some variables to be of greater interest than others.",2.3. Marginal and weighted total variation,[0],[0]
"For example, when modeling a large particle system, we may be interested principally in the behavior in local region of the system; likewise, when segmenting an image into its component parts, a particular region, like the area surrounding a face, is often of primary interest.",2.3. Marginal and weighted total variation,[1.0],"['For example, when modeling a large particle system, we may be interested principally in the behavior in local region of the system; likewise, when segmenting an image into its component parts, a particular region, like the area surrounding a face, is often of primary interest.']"
"In these cases, it is more natural to consider a marginal total variation that measures the discrepancy in expectation over only those variables of interest.
",2.3. Marginal and weighted total variation,[0],[0]
Definition 2 (Marginal total variation).,2.3. Marginal and weighted total variation,[0],[0]
The marginal total variation between probability measures µ and ⌫ on a subset of variables S 2,2.3. Marginal and weighted total variation,[0],[0]
"[p] is the maximum difference in expectations over all [0, 1]-valued functions of X
S , the restriction of X to the coordinates in S:
kµ ⌫k S,TV , sup f :X",2.3. Marginal and weighted total variation,[0],[0]
"|S|![0,1] E µ
⇥",2.3. Marginal and weighted total variation,[0],[0]
f X S ⇤ E ⌫ ⇥,2.3. Marginal and weighted total variation,[0],[0]
"f Y S ⇤ .
",2.3. Marginal and weighted total variation,[0],[0]
"More generally, we will seek to control an arbitrary userdefined weighted total variation that assigns an independent non-negative weight to each variable and hence controls the approximation error for functions with varying sensitivities in each variable.",2.3. Marginal and weighted total variation,[0],[0]
Definition 3 (d-bounded differences).,2.3. Marginal and weighted total variation,[0],[0]
We say f : X p !,2.3. Marginal and weighted total variation,[0],[0]
"R has d-bounded differences for d 2 Rd if, for all X,Y 2 X p,
|f(X) f(Y )",2.3. Marginal and weighted total variation,[0],[0]
"|  pX
i=1
d i I[X",2.3. Marginal and weighted total variation,[0],[0]
i 6=,2.3. Marginal and weighted total variation,[0],[0]
"Y i ].
",2.3. Marginal and weighted total variation,[0],[0]
"For example, every function with range [0, 1] is a 1- Lipschitz feature, and the value of the first variable, x 7!",2.3. Marginal and weighted total variation,[0],[0]
"x
1 , is an e
1 -Lipschitz feature.",2.3. Marginal and weighted total variation,[0.9999999873984108],"['x 1 , is an e 1 -Lipschitz feature.']"
This definition leads to a measure of sample quality tailored to d-bounded difference functions.,2.3. Marginal and weighted total variation,[0],[0]
Definition 4 (d-weighted total variation).,2.3. Marginal and weighted total variation,[0],[0]
"The d-weighted total variation between probability measures µ and ⌫ is the maximum difference in expectations across d-bounded difference functions:
",2.3. Marginal and weighted total variation,[0],[0]
"kµ ⌫k d,TV , sup d bounded di↵erencef |E µ",2.3. Marginal and weighted total variation,[0],[0]
[f(X)],2.3. Marginal and weighted total variation,[0],[0]
E ⌫,2.3. Marginal and weighted total variation,[0],[0]
[f(Y )],2.3. Marginal and weighted total variation,[0],[0]
|,2.3. Marginal and weighted total variation,[0],[0]
"variation
Since the direct computation of total variation measures is typically prohibitive, we will define an efficiently computable upper bound on the weighted total variation of Definition 4.",3. Measuring scan quality with Dobrushin,[0.9999999970143072],"['variation Since the direct computation of total variation measures is typically prohibitive, we will define an efficiently computable upper bound on the weighted total variation of Definition 4.']"
"Our construction is inspired by the Gibbs sampler convergence analysis of Dobrushin & Shlosman (1985).
",3. Measuring scan quality with Dobrushin,[0],[0]
"The first step in Dobrushin’s approach is to control total variation in terms of coupled random vectors, (X
t , Y t ) T
t=0 , where Xt has the distribution, ⇡
t , of the t-th step of the Gibbs sampler and Y t follows the target distribution ⇡.",3. Measuring scan quality with Dobrushin,[0],[0]
"For any such coupling, we can define the marginal coupling probability p
t,i , P(Xt i 6=",3. Measuring scan quality with Dobrushin,[0],[0]
Y t i ).,3. Measuring scan quality with Dobrushin,[0],[0]
"The following lemma, a generalization of results in (Dobrushin & Shlosman, 1985; Hayes, 2006), shows that weighted total variation is controlled by these marginal coupling probabilities.",3. Measuring scan quality with Dobrushin,[1.0],"['The following lemma, a generalization of results in (Dobrushin & Shlosman, 1985; Hayes, 2006), shows that weighted total variation is controlled by these marginal coupling probabilities.']"
"The proof is given in Appendix A.1, and similar arguments can be found in Rebeschini & van Handel (2014).",3. Measuring scan quality with Dobrushin,[1.0],"['The proof is given in Appendix A.1, and similar arguments can be found in Rebeschini & van Handel (2014).']"
Lemma 5 (Marginal coupling controls weighted TV).,3. Measuring scan quality with Dobrushin,[1.0],['Lemma 5 (Marginal coupling controls weighted TV).']
"For any joint distribution (X, Y ) such that X ⇠ µ and Y ⇠ ⌫ for probability measures µ and ⌫ on X p and any nonnegative weight vector d 2 Rp,
kµ ⌫k d,TV
 X
i
d i P(X i 6=",3. Measuring scan quality with Dobrushin,[0.995260823949647],"['For any joint distribution (X, Y ) such that X ⇠ µ and Y ⇠ ⌫ for probability measures µ and ⌫ on X p and any nonnegative weight vector d 2 Rp, kµ ⌫k d,TV  X i d i P(X i 6= Y i ).']"
"Y i ).
",3. Measuring scan quality with Dobrushin,[0],[0]
"Dobrushin’s second step is to control the marginal coupling probabilities p
t in terms of influence, a measure of how much a change in variable j affects the conditional distribution of variable i.
Definition 6 (Dobrushin influence matrix).",3. Measuring scan quality with Dobrushin,[0],[0]
"The Dobrushin influence of variable j on variable i is given by
C ij , max (X,Y )",3. Measuring scan quality with Dobrushin,[0],[0]
"2Nj k⇡(·|X i) ⇡(·|Y i)kTV (1)
where (X, Y ) 2 N j signifies X l = Y l for all l 6=",3. Measuring scan quality with Dobrushin,[0],[0]
"j.
This influence matrix is at the heart of our efficiently computable measure of scan quality, Dobrushin variation.",3. Measuring scan quality with Dobrushin,[0.9983766059172088],"['This influence matrix is at the heart of our efficiently computable measure of scan quality, Dobrushin variation.']"
Definition 7 (Dobrushin variation).,3. Measuring scan quality with Dobrushin,[0],[0]
"For any nonnegative weight vector d 2 Rp and entrywise upper bound ¯C on the Dobrushin influence (1), we define the Dobrushin variation of a scan (q
t
)
T t=1
as
V(q 1 , . .",3. Measuring scan quality with Dobrushin,[0],[0]
.,3. Measuring scan quality with Dobrushin,[0],[0]
", q T ; d, ¯C) , d>B(q T ) · · · B(q 1 )1
for B(q) , (I diag(q)(I ¯C)).
",3. Measuring scan quality with Dobrushin,[0],[0]
Theorem 8 shows that Dobrushin variation dominates weighted TV and thereby provides target- and scan-specific guarantees on the weighted TV quality of a Gibbs sampler.,3. Measuring scan quality with Dobrushin,[0],[0]
"The proof in Appendix A.2 rests on the fact that, for each t, b
t , B(q t ) · · · B(q 1 )1 provides an elementwise upper bound on the vector of marginal coupling probabilities, p
t .",3. Measuring scan quality with Dobrushin,[0.99999991009771],"['The proof in Appendix A.2 rests on the fact that, for each t, b t , B(q t ) · · · B(q 1 )1 provides an elementwise upper bound on the vector of marginal coupling probabilities, p t .']"
Theorem 8 (Dobrushin variation controls weighted TV).,3. Measuring scan quality with Dobrushin,[0],[0]
"Suppose that ⇡
T is the distribution of the T -th step of a Gibbs sampler with scan (q
t
)
T t=1 .",3. Measuring scan quality with Dobrushin,[0],[0]
"Then, for any nonnegative weight vector d 2 Rp and entrywise upper bound ¯C on the Dobrushin influence (1),
k⇡ T ⇡k d,TV  V (q t ) T t=1 ; d, ¯C .",3. Measuring scan quality with Dobrushin,[0],[0]
We next present an efficient algorithm for improving the quality of any Gibbs sampler scan by minimizing Dobrushin variation.,4. Improving scan quality with DoGS,[0],[0]
We will refer to the resulting customized Gibbs samplers as Dobrushin-optimized Gibbs samplers or DoGS for short.,4. Improving scan quality with DoGS,[1.0],['We will refer to the resulting customized Gibbs samplers as Dobrushin-optimized Gibbs samplers or DoGS for short.']
"Algorithm 2 optimizes Dobrushin variation using coordinate descent, with the selection distribution q
t for each time step serving as a coordinate.",4. Improving scan quality with DoGS,[0.9999999341544085],"['Algorithm 2 optimizes Dobrushin variation using coordinate descent, with the selection distribution q t for each time step serving as a coordinate.']"
"Since Dobrushin variation is linear in each q
t , each coordinate optimization (in the absence of ties) selects a degenerate distribution, a single coordinate, yielding a fully deterministic scan.",4. Improving scan quality with DoGS,[0.9999999401906002],"['Since Dobrushin variation is linear in each q t , each coordinate optimization (in the absence of ties) selects a degenerate distribution, a single coordinate, yielding a fully deterministic scan.']"
"If m  p is a bound on the size of the Markov blanket of each variable, then our forward-backward algorithm runs in time O(kdk
0 + min(m log p + m2, p)T ) with O(p + T ) storage for deterministic input scans.",4. Improving scan quality with DoGS,[1.0000000725459626],"['If m  p is a bound on the size of the Markov blanket of each variable, then our forward-backward algorithm runs in time O(kdk 0 + min(m log p + m2, p)T ) with O(p + T ) storage for deterministic input scans.']"
"The T (m log p + m2) term arises from maintaining the derivative vector, w, in an efficient sorting structure, like a max-heap.
",4. Improving scan quality with DoGS,[0.999999943707295],"['The T (m log p + m2) term arises from maintaining the derivative vector, w, in an efficient sorting structure, like a max-heap.']"
"A user can initialize DoGS with any baseline scan, including a systematic or uniform random scan, and the resulting customized scan is guaranteed to have the same or better Dobrushin variation.",4. Improving scan quality with DoGS,[1.0],"['A user can initialize DoGS with any baseline scan, including a systematic or uniform random scan, and the resulting customized scan is guaranteed to have the same or better Dobrushin variation.']"
"Moreover, DoGS scans will always
Algorithm 2 DoGS: Scan selection via coordinate descent input Scan (q
⌧
)
T ⌧=1 ; variable weights d; influence entrywise upper bound ¯C; (optional) target accuracy ✏.
//",4. Improving scan quality with DoGS,[0],[0]
Forward:,4. Improving scan quality with DoGS,[0],[0]
"Precompute coupling bounds of Section 3, // b
t = B(q t ) · · · B(q 1 )1 = B(q t )b t 1 with b0 = 1.
//",4. Improving scan quality with DoGS,[0],[0]
Only store b = b T and sequence of changes ( b t ) T 1 t=0 .,4. Improving scan quality with DoGS,[0],[0]
//,4. Improving scan quality with DoGS,[0],[0]
"Also precompute Dobrushin variation V = d>b
T
// and derivatives w = @V/@q T = d",4. Improving scan quality with DoGS,[0],[0]
(I ¯C)b T .,4. Improving scan quality with DoGS,[0],[0]
"b 1, V d>b, w d",4. Improving scan quality with DoGS,[0],[0]
"(I ¯C)b for t in 1, 2, . . .",4. Improving scan quality with DoGS,[0],[0]
"T do
b t 1 diag (qt)(I ¯C)b",4. Improving scan quality with DoGS,[0],[0]
"b b b
t 1 // bt = bt 1 bt 1 V V d> b
t 1 // V = d>bt w w + d (I ¯C)",4. Improving scan quality with DoGS,[0],[0]
"b
t 1 //",4. Improving scan quality with DoGS,[0],[0]
"w = d (I ¯C)bt end for
",4. Improving scan quality with DoGS,[0],[0]
"// Backward: Optimize scan one step, q⇤ t , at a time.",4. Improving scan quality with DoGS,[0],[0]
"for t in T, T 1, . . .",4. Improving scan quality with DoGS,[0],[0]
", 1 do
If V  ✏, then q⇤ t
q t ; break // early stopping b b + b
t 1 // bt 1 = bt + bt 1 //",4. Improving scan quality with DoGS,[0],[0]
"Update w = @V/@q
t = d t (I ¯C)b t 1
// for d> t , d>B(q⇤ T ) · · · B(q⇤ t+1 ) and d> T , d> w w d",4. Improving scan quality with DoGS,[0],[0]
(I ¯C),4. Improving scan quality with DoGS,[0],[0]
b t 1 //,4. Improving scan quality with DoGS,[0],[0]
"Pick probability vector q⇤
t minimizing d> t B(q t )b",4. Improving scan quality with DoGS,[0],[0]
"t 1
q⇤ t
e argmini wi
V V + d>",4. Improving scan quality with DoGS,[0],[0]
diag(q⇤ t q t )b,4. Improving scan quality with DoGS,[0],[0]
"// V = d> t 1bt 1
d >",4. Improving scan quality with DoGS,[0],[0]
d>,4. Improving scan quality with DoGS,[0],[0]
"diag(q⇤ t
)",4. Improving scan quality with DoGS,[0],[0]
(I ¯C),4. Improving scan quality with DoGS,[0],[0]
d> d> d> //,4. Improving scan quality with DoGS,[0],[0]
"d>
t 1 = d > t B(q⇤ t )
w",4. Improving scan quality with DoGS,[0],[0]
w+ d (I ¯C)b //,4. Improving scan quality with DoGS,[0],[0]
"w = d t 1 (I ¯C)bt 1
end for
output Optimized scan (q ⌧ ) t 1 ⌧=1 , (q⇤ ⌧ ) T ⌧=t
be d-ergodic (i.e., k⇡ T ⇡k d,TV ! 0",4. Improving scan quality with DoGS,[0],[0]
"as T ! 1) when initialized with a systematic or uniform random scan and ¯C
< 1.",4. Improving scan quality with DoGS,[0],[0]
"This follows from the following proposition, which shows that Dobrushin variation—and hence the dweighted total variation by Theorem 8—goes to 0 under these conditions and standard scans.",4. Improving scan quality with DoGS,[0],[0]
"The proof relies on arguments in (Hayes, 2006) and is outlined in Appendix A.3.",4. Improving scan quality with DoGS,[0],[0]
Proposition 9.,4. Improving scan quality with DoGS,[0],[0]
"Suppose that ¯C is an entrywise upper bound on the Dobrushin influence matrix (1) and that (q
t
)
T t=1 is a systematic or uniform random scan.",4. Improving scan quality with DoGS,[0],[0]
"If ¯C < 1, then, for any nonnegative weight vector d, the Dobrushin variation vanishes as the chain length T increases.",4. Improving scan quality with DoGS,[0],[0]
"That is,
lim T!1 V(q 1 , . . .",4. Improving scan quality with DoGS,[0],[0]
", q T ; d, ¯C) = 0.",4. Improving scan quality with DoGS,[0],[0]
An essential input to our algorithms is the entrywise upper bound ¯C on the influence matrix (1).,4.1. Bounding influence,[0],[0]
"Fortunately, Liu &
Domke (2014) showed that useful influence bounds are particularly straightforward to compute for any pairwise Markov random field (MRF) target,
⇡(X) / exp( P
i,j P a,b2X ✓ ij
ab
I[X i = a, X j = b]).",4.1. Bounding influence,[0],[0]
"(2)
Theorem 10 (Pairwise MRF influence (Liu & Domke, 2014, Lems. 10, 11)).",4.1. Bounding influence,[0],[0]
"Using the shorthand (s) , 1
1+e s , the influence (1) of the target ⇡ in (2) satisfies
C ij  max xj ,yj |2 ( 1 2 max a,b (✓ij axj ✓ij ayj ) (✓ij bxj ✓ij byj ))",4.1. Bounding influence,[0],[0]
"1|.
",4.1. Bounding influence,[0],[0]
Pairwise MRFs with binary variables X,4.1. Bounding influence,[0],[0]
"i 2 { 1, 1} are especially common in statistical physics and computer vision.",4.1. Bounding influence,[0],[0]
"A general parameterization for binary pairwise MRFs is given by
⇡(X) / exp( P i 6=j ✓ijXiXj + P i",4.1. Bounding influence,[0],[0]
✓,4.1. Bounding influence,[0],[0]
"i X i ), (3)
and our next theorem, proved in Appendix A.4, leverages the strength of the singleton parameters ✓
i to provide a tighter bound on the influence of these targets.",4.1. Bounding influence,[0],[0]
Theorem 11 (Binary pairwise influence).,4.1. Bounding influence,[0],[0]
"The influence (1) of the target ⇡ in (3) satisfies
C ij
 |exp(2✓ij) exp( 2✓ij)| b ⇤
(1 + b⇤ exp(2✓ ij ))",4.1. Bounding influence,[0],[0]
"(1 + b⇤ exp( 2✓ ij ))
for b⇤ = max(e 2 P k 6=j |✓ik| 2✓i , min[e2 P k 6=j |✓ik| 2✓i , 1]).
",4.1. Bounding influence,[0],[0]
"Theorem 11 in fact provides an exact computation of the Dobrushin influence C
ij whenever b⇤ 6= 1.",4.1. Bounding influence,[0],[0]
"The only approximation comes from the fact that the value b⇤ = 1 may not belong to the set B = {e2 P k 6=j ✓ikXk 2✓i | X 2 { 1, 1}p}.",4.1. Bounding influence,[0],[0]
"An exact computation of C ij
would replace the cutoff of 1 with its closest approximation in B.
So far, we have focused on bounding influence in pairwise MRFs, as these bounds are most relevant to our experiments; indeed, in Section 5, we will use DoGS in conjunction with the bounds of Theorems 10 and 11 to improve scan quality for a variety of inferential tasks.",4.1. Bounding influence,[0],[0]
"However, user-friendly bounds are also available for non-pairwise MRFs (note that any discrete distribution can be represented as an MRF with parameters in the extended reals), and we include a simple extension of Theorem 11 that applies to binary MRFs with higher-order interactions.",4.1. Bounding influence,[0],[0]
Its proof is in Appendix A.5 Theorem 12 (Binary higher-order influence).,4.1. Bounding influence,[0],[0]
"The target
⇡(X) / exp( P S2S ✓S Q k2S",4.1. Bounding influence,[0],[0]
Xk + P,4.1. Bounding influence,[0],[0]
"i ✓ i X i ),
for X 2 { 1, 1}d and S a set of non-singleton subsets of [p], has influence (1) satisfying
C",4.1. Bounding influence,[0],[0]
"ij
 |",4.1. Bounding influence,[0],[0]
"exp(2 P S2S:i,j2S |✓S |) exp( 2 P S2S:i,j2S |✓S |)| b ⇤
(1+b ⇤ ) 2
for b⇤ = max(exp( 2 P
S2S:i2S,j /2S |",4.1. Bounding influence,[0],[0]
"✓S | 2✓
i
), min(exp(2 P
S2S:i2S,j /2S |",4.1. Bounding influence,[0],[0]
"✓S | 2✓i), 1)).",4.1. Bounding influence,[0],[0]
"In related work, Latuszynski et al. (2013) recently analyzed an abstract class of adaptive Gibbs samplers parameterized by an arbitrary scan selection rule.",4.2. Related Work,[0],[0]
"However, as noted in their Rem. 5.13, no explicit scan selection rules were provided in that paper.",4.2. Related Work,[0],[0]
"The only prior concrete scan selection rules of which we are aware are the Minimax Adaptive Scans with asymptotic variance or convergence rate objective functions (Levine & Casella, 2006).",4.2. Related Work,[0],[0]
"Unless some substantial approximation is made, it is unclear how to implement these procedures when the target distribution of interest is not Gaussian.
",4.2. Related Work,[0],[0]
"Levine & Casella (2006) approximate these Minimax Adaptive Scans for specific mixture models by considering single ad hoc features of interest; the approach has many hyperparameters to tune including the order of the Taylor expansion approximation, which sample points are used to approximate asymptotic quantities online, and the frequency of adaptive updating.",4.2. Related Work,[0],[0]
"Our proposed quality measure, Dobrushin variation, requires no approximation or tuning and can be viewed as a practical non-asymptotic objective function for the abstract scan selection framework of Levine and Casella.",4.2. Related Work,[0],[0]
"In the spirit of (Lacoste-Julien et al., 2011), DoGS can also be viewed as an approximate inference scheme calibrated for downstream inferential tasks depending only on subsets of variables.
",4.2. Related Work,[0],[0]
Levine et al. (2005) employ the Minimax Adaptive Scans of Levine and Casella by finding the mode of their target distribution using EM and then approximating the distribution by a Gaussian.,4.2. Related Work,[0],[0]
They report that this approach to scan selection introduces substantial computational overhead (10 minutes of computation for an Ising model with 64 variables).,4.2. Related Work,[0],[0]
"As we will see in Section 5, the overhead of DoGS scan selection is manageable (15 seconds of computation for an Ising model with 1 million variables) and outweighed by the increase in scan quality and sampling speed.",4.2. Related Work,[0],[0]
"In this section, we demonstrate how our proposed scan quality measure and efficient optimization schemes can be used to both evaluate and improve Gibbs sampler scans when either the full distribution or a marginal distribution is of principal interest.",5. Experiments,[0],[0]
"For all experiments with binary MRFs, we adopt the model parameterization of (3) (with no additional temperature parameter) and use Theorem 11 to produce the Dobrushin influence bound ¯C. On all ensuing plots, the numbers in the legend state the best guarantee achieved for each algorithm plotted.",5. Experiments,[0],[0]
"Due to space constraints, we display only one representative plot per experiment; the analogous plots from independent replicates of each experiment can be found in Appendix B.
2",5. Experiments,[0],[0]
"In our first experiment, we illustrate how Dobrushin variation can be used to select between standard scans and how DoGS can be used to efficiently improve upon standard scan quality when total variation quality is of interest.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
We remind the reader that both scan evaluation and scan selection are performed offline prior to any expensive simulation from the Gibbs sampler.,5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"Our target is a 10 ⇥ 10 Ising model arranged in a two-dimensional lattice, a standard model of ferromagnetism in statistical physics.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"In the notation of (3), we draw the unary parameters ✓
i uniformly at random from {0, 1}, and the interaction parameters uniformly at random: ✓
ij
⇠ Uniform([0, 0.25]).
",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"Figure 1 compares, as a function of the number of steps T , the total variation guarantee provided by Dobrushin variation (see Theorem 8) for the standard systematic and uniform random scans.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"We see that the systematic scan, which traverses variables in row major order, obtains a significantly better TV guarantee than its uniform random counterpart for all sampling budgets T .",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"Hence, the systematic scan would be our standard scan of choice for this target.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
DoGS (Algorithm 2) initialized with d = 1 and the systematic scan further improves the systematic scan guarantee by two orders of magnitude.,5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
Iterating Algorithm 2 on its own scan output until convergence (“Iterated DoGS” in Figure 1) provides additional improvement.,5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"However, since we consistently find that the bulk of the improvement is obtained with a single run of Algorithm 2, non-iterated DoGS remains our recommended recipe for quickly improving scan quality.
",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"Note that since our TV guarantee is an upper bound provided by the exact computation of Dobrushin variation, the actual gains in TV may differ from the gains in Dobrushin variation.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"In practice and as evidenced in Section 5.4, we find that the actual gains in (marginal) TV over standard scans are typically larger than the Dobrushin variation gains.",5.1. Evaluating and optimizing Gibbs sampler scans,[0],[0]
"In this experiment, we demonstrate that using DoGS to optimize a scan can result in dramatic inferential speed-ups.",5.2. End-to-end wall clock time performance,[0],[0]
This effect is particularly pronounced for targets with a large number of variables and in settings that require repeated sampling from a low-bias Gibbs sampler.,5.2. End-to-end wall clock time performance,[0],[0]
"The setting is the exactly same as in the previous experiment, with the exception of model size: here we simulate a 103⇥103 Ising model, with 1 million variables in total.",5.2. End-to-end wall clock time performance,[0],[0]
"We target a single marginal X
1 with d = e 1 and take a systematic scan of length T = 2 ⇥ 106 as our input scan.",5.2. End-to-end wall clock time performance,[0],[0]
"After measuring the Dobrushin variation ✏ of the systematic scan, we use an efficient length-doubling scheme to select a DoGS scan: (0) initialize ˜T = 2; (1) run Algorithm 2 with the first ˜T steps of the systematic scan as input; (2) if the resulting DoGS scan has Dobrushin variation less than ✏, we keep it; otherwise we double ˜T and return to step (1).",5.2. End-to-end wall clock time performance,[0],[0]
"The resulting DoGS scan has length ˜T = 16.
0
We repeatedly draw independent sample points from either the length T systematic scan Gibbs sampler or the length ˜T DoGS scan Gibbs sampler.",5.2. End-to-end wall clock time performance,[0],[0]
"Figure 2 evaluates the bias of the resulting Monte Carlo estimates of E
⇡",5.2. End-to-end wall clock time performance,[0],[0]
"[X 1 ] as a function of time, including the 15s of setup time for DoGS on this 1 million variable model.",5.2. End-to-end wall clock time performance,[0],[0]
"In comparison, Levine et al. (2005) report 10 minutes of setup time for their adaptive Gibbs scans when processing a 64 variable Ising model.",5.2. End-to-end wall clock time performance,[0],[0]
"The bottom plot of Figure 2 uses the average measured time for a single step1, the measured setup time for DoGS and the size of the two scan sequences to give an estimate of the speedup as a function of the number of sample points drawn.",5.2. End-to-end wall clock time performance,[0],[0]
Additional timing experiments are deferred to Appendix B.2.,5.2. End-to-end wall clock time performance,[0],[0]
"estimation
We next illustrate how DoGS can be used to accelerate MCMC maximum likelihood estimation, while providing guarantees on parameter estimation quality.",5.3. Accelerated MCMC maximum likelihood,[0],[0]
"We replicate
1Each Gibbs step took 12.65µs on a 2015 Macbook Pro.
the Ising model maximum likelihood estimation experiment of (Domke, 2015, Sec. 6) and show how we can provide the same level of accuracy faster.",5.3. Accelerated MCMC maximum likelihood,[0],[0]
Our aim is to learn the parameters of binary MRFs based on training samples with independent Rademacher entries.,5.3. Accelerated MCMC maximum likelihood,[0],[0]
"On each step of MCMCMLE, Domke uses Gibbs sampling with a uniform random scan to produce an estimate of the gradient of the log likelihood.",5.3. Accelerated MCMC maximum likelihood,[0],[0]
"Our DoGS variant employs Algorithm 2 with d = 1, early stopping parameter ✏ = 0.01, and a Dobrushin influence bound constructed from the latest parameter estimate ˆ✓ using Theorem 11.",5.3. Accelerated MCMC maximum likelihood,[0],[0]
"We set the number of gradient steps, MC steps per gradient, and independent runs of Gibbs sampling to the suggested values in (Domke, 2015).",5.3. Accelerated MCMC maximum likelihood,[0],[0]
"After each gradient update, we record the distance between the optimal and estimated parameters.",5.3. Accelerated MCMC maximum likelihood,[0],[0]
Figure 3 displays the estimation error of five independent replicates of this experiment using each of two scans (uniform or DoGS) for two models (a 3⇥ 3 and a 4⇥ 4 Ising model).,5.3. Accelerated MCMC maximum likelihood,[0],[0]
The results show that DoGS consistently achieves the desired parameter accuracy much more quickly than standard Gibbs.,5.3. Accelerated MCMC maximum likelihood,[0],[0]
In this section we demonstrate how DoGS can be used to dramatically speed up marginal inference while providing target-dependent guarantees.,5.4. Customized scans for fast marginal mixing,[0],[0]
"We use a 40⇥ 40 non-toroidal Ising model and set our feature to be the top left variable with d = e
1 .",5.4. Customized scans for fast marginal mixing,[0],[0]
Figure 4 compares guarantees for a uniform random scan and a systematic scan; we also see how we can further improve the total variation guarantees by feeding a systematic scan into Algorithm 2.,5.4. Customized scans for fast marginal mixing,[0],[0]
"Again we see that a single run of Algorithm 2 yields the bulk of the improvement, and iterated applications only provide small further benefits.",5.4. Customized scans for fast marginal mixing,[0],[0]
"For the DoGS sequence, the figure also shows a histogram of the distance of sampled variables from the target variable, X
1
, at the top left corner of the grid.
",5.4. Customized scans for fast marginal mixing,[0],[0]
Figure 5 shows that optimizing our objective actually improves performance by reducing the marginal bias much more quickly than systematic scan.,5.4. Customized scans for fast marginal mixing,[0],[0]
"For completeness, we include additional experiments on a toroidal Ising model in Appendix B.3.",5.4. Customized scans for fast marginal mixing,[0],[0]
"recognition
The Markov field aspect model (MFAM) of Verbeek & Triggs (2007) is a generative model for images designed to automatically divide an image into its constituent parts (image segmentation) and label each part with its semantic object class (object recognition).",5.5. Targeted image segmentation and object,[0],[0]
"For each test image k, the MFAM extracts a discrete feature descriptor from each image patch i, assigns a latent object class label X
i
2 X to
each patch, and induces the posterior distribution
⇡(X|y; k) / exp( P
(i,j) spatial neighbors I{Xi = Xj} (4) +",5.5. Targeted image segmentation and object,[0],[0]
"P i log( P a2X ✓k,a a,yiI{Xi = a})),
over the configuration of patch levels X .",5.5. Targeted image segmentation and object,[0],[0]
"When the Potts parameter = 0, this model reduces to probabilistic latent semantic analysis (PLSA) (Hofmann, 2001), while a positive value of encourages nearby patches to belong to similar classes.",5.5. Targeted image segmentation and object,[0],[0]
"Using the Microsoft Research Cambridge (MSRC) pixel-wise labeled image database v12, we follow the weakly supervised setup of Verbeek & Triggs (2007) to fit the PLSA parameters ✓ and to a training set of images and then, for each test image k, use Gibbs sampling to generate patch label configurations X targeting the MFAM posterior (4) with = 0.48.",5.5. Targeted image segmentation and object,[0],[0]
"We generate a segmentation by assigning each patch the most frequent label encountered during Gibbs sampling and evaluate the accuracy of this labeling using the Hamming error described in (Verbeek & Triggs, 2007).",5.5. Targeted image segmentation and object,[0],[0]
"This experiment is repeated over 20 indepen-
2http://research.microsoft.com/vision/cambridge/recognition/
dently generated 90% training / 10% test partitions of the 240 image dataset.
",5.5. Targeted image segmentation and object,[0],[0]
"We select our DoGS scan to target a 12⇥ 8 marginal patch rectangle at the center of each image (the {0,1} entries of d indicate whether a patch is in the marginal rectangle highlighted in Figure 6) and compare its segmentation accuracy and efficiency with that of a standard systematic scan of length T = 620.",5.5. Targeted image segmentation and object,[0],[0]
"We initialize DoGS with the systematic scan, the influence bound ¯C of Theorem 10, and a target accuracy ✏ equal to the marginal Dobrushin variation guarantee of the systematic scan.",5.5. Targeted image segmentation and object,[0],[0]
"In 11.5ms, the doubling scheme described in Section 5.2 produced a DoGS sequence of length 110 achieving the Dobrushin variation guarantee ✏ on marginal TV.",5.5. Targeted image segmentation and object,[0],[0]
Figure 7 shows that DoGS achieves a slightly better average Hamming error than systematic scan using a 5.5⇥ shorter sequence.,5.5. Targeted image segmentation and object,[0],[0]
"Systematic scan takes 1.2s to resample each variable of interest, while DoGS consumes 0.37s.",5.5. Targeted image segmentation and object,[0],[0]
"Moreover, the 11.5ms DoGS scan selection was performed only once and then used to segment all test images.",5.5. Targeted image segmentation and object,[0],[0]
"For
each chain, X0 was initialized to the maximum a posteriori patch labeling under the PLSA model (obtained by setting = 0",5.5. Targeted image segmentation and object,[0],[0]
in the MFAM).,5.5. Targeted image segmentation and object,[0],[0]
We introduced a practical quality measure – Dobrushin variation – for evaluating and comparing existing Gibbs sampler scans and efficient procedures – DoGS – for developing customized fast-mixing scans tailored to marginals or distributional features of interest.,6. Discussion,[0],[0]
"We deployed DoGS for three common Gibbs sampler applications – joint image segmentation and object recognition, MCMC maximum likelihood estimation, and Ising model inference – and in each case achieved higher quality inferences with significantly smaller sampling budgets than standard Gibbs samplers.",6. Discussion,[0],[0]
"In the future, we aim to enlist DoGS for additional applications in computer vision and natural language processing, extend the reach of DoGS to models containing continuous variables, and integrate DoGS into large inference engines built atop Gibbs sampling.",6. Discussion,[0],[0]
The pairwise influence matrix of Dobrushin has long been used as an analytical tool to bound the rate of convergence of Gibbs sampling.,abstractText,[0],[0]
"In this work, we use Dobrushin influence as the basis of a practical tool to certify and efficiently improve the quality of a discrete Gibbs sampler.",abstractText,[0],[0]
"Our Dobrushin-optimized Gibbs samplers (DoGS) offer customized variable selection orders for a given sampling budget and variable subset of interest, explicit bounds on total variation distance to stationarity, and certifiable improvements over the standard systematic and uniform random scan Gibbs samplers.",abstractText,[0],[0]
"In our experiments with joint image segmentation and object recognition, Markov chain Monte Carlo maximum likelihood estimation, and Ising model inference, DoGS consistently deliver higher-quality inferences with significantly smaller sampling budgets than standard Gibbs samplers.",abstractText,[0],[0]
Improving Gibbs Sampler Scan Quality with DoGS,title,[0],[0]
