0	9	This paper is about weighted correlation clustering (Bansal et al., 2004), a combinatorial optimization problem whose feasible solutions are all clusterings of a graph, and whose objective function is a sum of weights w0, w1 : E → R+0 defined on the edgesE of the graph.
1	14	The weightw0e is added to the sum if the nodes {u, v} = e ∈ E are in the same cluster, and the weight w1e is added to the sum if these nodes are in distinct clusters.
3	28	Weighted correlation clustering has found applications in the fields of network analysis (Cesa-Bianchi et al., 2012) and, more recently, computer vision (Kappes et al., 2011; Keuper et al., 2015; Insafutdinov et al., 2016; Beier et al., 2017; Tang et al., 2017), partly due to its key property that the number of clusters is not fixed, constrained or penalized in the problem statement but is instead defined by the (any) solution.
7	8	We make the following contributions: Firstly, in order to reduce instances in size, we establish partial optimality conditions on the graph and weights that can be checked combinatorially in polynomial time and determine the values of some variables in an optimal solution.
33	19	Weighted correlation clustering is a combinatorial optimization problem whose feasible solutions are all clusterings of a graph.
35	37	We call a partition Π of V a clustering if every S ∈ Π induces a connected subgraph (cluster) of G. For any clustering Π of G, we denote by E0Π the set of those edges whose nodes are in the same cluster, and by E1Π the (complementary) set of those edges whose nodes are in distinct clusters: E0Π = {uv ∈ E | ∃S ∈ Π : u ∈ S and v ∈ S}, (1) E1Π = E \ E0Π.
38	12	G, w0 and w1 is the optimization problem min Π ∑ e∈E0Π w0e + ∑ e∈E1Π w1e .
49	9	For practical purposes a linear programming (LP) relaxation of PMC is derived as follows.
53	7	The lower bounds thus obtained can serve to solve (small) instances of the minimum cost multicut problem by branch-and-cut because the cycle relaxation has no integer vertices except the incidence vectors of multicuts, according to Lemma 1.
88	17	In this section, we study partial optimality for PMC.
89	16	More precisely, we establish conditions on an edge e ∈ E which guarantee that xe assumes one particular value, either 0 or 1, in at least one optimal solution (weak persistency).
90	9	Fixations to 0 are of particular interest as they can be implemented as edge contractions (with subsequent merging of parallel edges), which effectively reduce the size of a given instance of the problem.
93	12	There are (at least) two ways this can happen: 1.
103	16	An edge f ∈ E is called dominant attractive iff cf > 0 and there exists a cut B with f ∈ EB such that cf ≥ ∑ e∈EB\{f} |ce| .
105	10	(21) An edge is called dominant iff it is dominant attractive or dominant repulsive.
112	9	Therefore, the vector x̂ ∈ {0, 1}E defined by x̂e =  0 if e = f 1 if e ∈ EB , e 6= f x̂∗e else is a feasible solution to PSC.
133	17	Afterwards, the edge f is dominant attractive and we can contract f .
136	12	5: if deg v = 1 then 6: Get neighbor u ∈ V .
147	9	Since Algorithm 1 only contracts or deletes edges, fixing the variables according to Lemma 4, the updated graph still has treewidth at most 2.
152	14	7: Increase lower bound L = L+ yC .
153	16	8: Remove all edges e ∈ E with we = 0 from G. 9: end while 10: if C−(G, c) = ∅ then 11: return y, L 12: end if 13: end for the reformulation PSC.
160	8	These steps are repeated until there are no conflicted cycles left.
161	13	The absolute running time of ICP as well as the quality of the output lower bounds depends on the choice of cycles C. We pursue the following strategy that we found to perform well empirically in both aspects: In each iteration of the main loop, we choose a repulsive edge e = uv ∈ E− such that u and v are in the same connected component of G+ = (V,E+).
163	9	We apply this search for conflicted cycles in rounds of increasing cycle length, using breadth-first search with an early termination criterion based on the hop distance.
177	9	From Kappes et al. (2015), we consider all three collections of instances: Image Segmentation contains instances w.r.t.
220	11	We have shown advantages of each of these constructions empirically.
221	14	Checking a subset of our partial optimality conditions recursively gives a fast combinatorial algorithm that efficiently reduces the size of problem instances.
222	46	Conceptually, it solves the problem for series-parallel graphs to optimality, in linear time.
223	47	Our dual heuristic algorithm provides nontrivial lower bounds and valuable dual information fast.
224	51	For future work, it is relevant to examine if more sophisticated dual solvers such as MPC benefit from a “warm-start” that transforms and exploits the heuristic dual solution.
