0	20	This article is about the set of all decompositions (clusterings) of a graph.
1	15	A decomposition of a graph G = (V,E) is a partition Π of the node set V such that, for every subset U ∈ Π of nodes, the subgraph of G induced by U is connected.
2	14	An example is depicted in Fig.
5	26	A multicut of G is a subset M ⊆ E of edges such that, for every (chordless) cycle C ⊆ E of G, we have |M ∩ C| 6= 1.
7	64	For any graph G, a one-to-one relation exists between the decompositions and the multicuts of G. The multicut induced by a decomposition is the set of edges that straddle distinct components.
8	71	Multicuts are useful in the study of decompositions as the characteristic function x ∈ {0, 1}E of a multicut x−1(1) of G makes explicit, for every pair {v, w} ∈ E of neighboring nodes, whether v and w are in distinct components.
10	15	The multicuts of G′ lifted from G are still in one-to-one relation with the decompositions of G. Yet, they are a more expressive model of these decompositions than the multicuts of G. We apply lifted multicuts in three ways: Firstly, we study problems related to the definition of a class of decompositions by must-cut or must-join constraints (Section 4).
11	43	Such constraints have applications where defining a decomposition totally is an ambiguous and tedious task, e.g., in the field of image segmentation.
14	33	The second problem is to decide whether a consistent set of must-join and must-cut constraints is maximally specific, i.e., whether no such constraint can be added without changing the set of decompositions that satisfy the constraints.
20	16	To extend this metric to the classes of decompositions definable by must-join and must-cut constraints, we define a metric on partial lifted multicuts that characterize these classes, connecting results of Sections 4 and 5.
23	77	As a third application of lifted multicuts, we study the optimization of graph decompositions by minimum cost lifted multicuts.
25	15	Its applications in the field of computer vision are mentioned below.
65	15	For any {v, w} ∈ dom x̃, we constrain the nodes v and w to the same component if x̃vw = 0 and to distinct components if x̃vw = 1.
67	12	We show that this decision problem is NP-complete.
68	16	Definition 4 For any connected graph G = (V,E), any graph G′ = (V,E′) with E ⊆ E′, and any x̃ ∈ {0, 1, ∗}E′ , the elements of XGG′ [x̃] := {x ∈ XGG′ | ∀e ∈ dom x̃ : xe = x̃e} (7) are called the completions of x̃ in XGG′ .
72	24	Lemma 6 Consistency can be decided efficiently if E ⊆ dom x̃ or ∀vw ∈ dom x̃ \ E : x̃vw = 1 ∨ ∃P ∈ vw-path(G)∀e ∈ P : x̃e = 0 (10)
77	13	For any x̃ ∈ X̃GG′ , the edges E′[x̃] := {e ∈ E′ | ∀x, x′ ∈ XGG′ [x̃] : xe = x′e} (11) are called decided.
95	20	Lemma 10 For any connected graph G = (V,E), any graph G′ = (V,E′) with E ⊆ E′ and any x ∈ XG, the closure y := clGG′ x of x w.r.t.
98	22	Lemma 11 In the special case thatE′ = E orE ⊆ dom x̃, the closure can be computed efficiently.
115	28	We compare classes of decompositions definable by mustjoin and must-cut constraints by comparing partial lifted multicuts that characterize these decompositions.
119	12	By Theorem 6, d̃θE′ with θ ∈ [ 12 , 1] well-defines a metric on these classes of decompositions and hence a means of comparing the classes of decompositions definable by must-join and must-cut constraints.
121	22	As a third and final application of lifted multicuts, we turn to the optimization of graph decompositions by lifted multicuts of minimum cost.
123	106	(25) If E′ = E, (25) specializes to the minimum cost multicut problem w.r.t.
125	17	If E′ ⊃ E, the minimum cost lifted multicut problem w.r.t.
129	12	G′ and c, the minimum cost lifted multicut problem w.r.t.G,G′ and c is such that any feasible solution x ∈ XGG′ indicates by xvw = 0 that the nodes v and w are connected in G by a path of edges labeled 0.
134	15	In general, the lifted multicut polytope ΞGG′ w.r.t.
136	52	By Lemma 5, the system of cycle inequalities (2) for G′ and cut inequalities (6) for G and G′ is redundant as a description ofXGG′ and thus of ΞGG′ .
137	19	Below, we study the geometry of ΞGG′ .
140	22	The strategy is to construct, for any e ∈ E′, an x ∈ XGG′ with xe = 0 and “as many ones as possible”.
144	13	12 and 13 and Lemmata 12 and 13.
