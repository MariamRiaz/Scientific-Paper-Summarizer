{"sections": [{"heading": "1. Introduction", "text": "As a popular algorithm for the estimation of latent variable models, the expectation-maximization (EM) algorithm (Dempster et al., 1977; Wu, 1983) has been widely used in machine learning and statistics (Jain et al., 1999; Tseng, 2004; Han et al., 2011; Little & Rubin, 2014). Although EM is well-known to often converge to an empirically good local estimator (Wu, 1983), finite sample theoretical guarantees for its performance have not been established until recent\n1Facebook, Inc., Menlo Park, CA 94025 2Department of Computer Science, University of Virginia, Charlottesville, VA 22904, USA 3Department of Computer Science, University of Illinois at Urbana-Champaign, Urbana, IL 61801. Correspondence to: Quanquan Gu <qg5w@virginia.edu>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nstudies (Balakrishnan et al., 2014; Wang et al., 2014; Yi & Caramanis, 2015). Specifically, the first local convergence theory and finite sample statistical rates of convergence for the conventional EM algorithm and its gradient ascent variant were established in Balakrishnan et al. (2014). Later on, Wang et al. (2014) extended the conventional EM algorithm as well as gradient ascent EM algorithm to the high-dimensional setting, where the number of parameters is comparable to or even larger than the sample size. A key idea used in their algorithms is an additional truncation step after the maximization step (M-step), which is able to exploit the intrinsic sparse structure of the high-dimensional latent variable models. Yi & Caramanis (2015) also proposed a high-dimensional EM algorithm, which, instead of using truncation, uses a regularized M-estimator in the M-step. In the high-dimensional setting, the gradient EM algorithm is especially appealing, because exact maximization based M-step can be very time consuming, or even ill-posed. Nonetheless, gradient EM algorithms can still be computationally prohibitive when the number of observations is also large, since they need to calculate the full gradient at each iteration, whose time complexity is linear in the sample size.\nIn this paper, we address the aforementioned computational challenge in the large-scale high-dimensional setting, by proposing a novel variance-reduced stochastic gradient EM algorithm with theoretical guarantees. Our algorithm is along the line of gradient EM algorithms (Balakrishnan et al., 2014; Wang et al., 2014), where the M-step is achieved by one-step gradient ascent rather than (regularized) exact maximization (Yi & Caramanis, 2015). Instead of using a full gradient at each iteration as in existing gradient EM algorithms, we significantly reduce the computational cost by utilizing stochastic variance-reduced gradient, which is inspired by recent advances in stochastic optimization (Roux et al., 2012; Johnson & Zhang, 2013; Shalev Shwartz & Zhang, 2013; Defazio et al., 2014; Zhang & Gu, 2016). To accommodate the special bivariate structure of the Qfunction (i.e., the expected value of the log likelihood function, with respect to the conditional distribution of the latent variable given the observed variable under the current estimate of the model parameter) in EM algorithm, we design a novel semi-stochastic variance-reduced gradient which sets\nour work apart from all existing methods and greatly helps reduce the intrinsic variance of the stochastic gradient of the Q-function in the EM algorithm. We apply our algorithm to two popular latent variable models and thorough numerical experiments are provided to backup our theory. In particular, we summarize our major contributions as follows:\n\u2022 We propose a novel high-dimensional EM algorithm by incorporating variance reduction into the stochastic gradient method for EM. Specifically, we design a novel semi-stochastic gradient tailored to the bivariate structure of the Q-function in the EM algorithm. To the best of our knowledge, this is the first work ever that brings variance reduction into the stochastic gradient EM algorithm in the high-dimensional scenario. \u2022 We prove that our proposed algorithm converges at a linear rate to the unknown model parameter and achieves the best-known statistical rate of convergence with a mild condition on the initialization. \u2022 We show that the proposed algorithm has an improved overall computational complexity over the state-of-theart algorithm. Specifically, to achieve an optimization error of , our algorithm needs O ( (N + b\u03ba2) \u00b7 log(1/ )\n) gradient evaluations1, where N is the sample size, b is the mini batch size that will be discussed later, and \u03ba is the restricted condition number. In contrast, the gradient complexity of the state-of-the-art high-dimensional EM algorithm (Wang et al., 2014) is O ( \u03baN log(1/ ) ) . As\nlong as \u03ba \u2264 N/b, which holds in most real cases, the overall gradient complexity of our algorithm is less than Wang et al. (2014). \u2022 Different from the proof technique used in existing work\n(Balakrishnan et al., 2014; Wang et al., 2014; Yi & Caramanis, 2015), which analyzes both the population and sample versions of the Q-function, we directly analyze the sample version of the Q-function. Our proof is much simpler and provides a good interface to analyze the semistochastic gradient.\nThe rest of the paper is organized as follows. We introduce the related work in Section 2, and then present our algorithm and its applications to two representative latent variable models in Section 3. We demonstrate the main theoretical result as well as its implication to specific latent variable models in Section 4, followed by experimental results in Section 5. Finally, we conclude our paper and point out some future work in Section 6.\nNotation: Let A = [Aij ] \u2208 Rd\u00d7d be a matrix and v = (v1, . . . , vd)\n> \u2208 Rd be a vector. We define the `q1Throughout this paper, we consider the calculation of the gradient of the Q-function over a data point as a unit gradient evaluation cost. And we use the gradient complexity, i.e., the number of gradient evaluation units, to fairly compare different algorithms.\nnorm (q \u2265 1) of v as \u2016v\u2016q = (\u2211d j=1 |vj |q )1/q\n. Specifically, \u2016v\u20160 denotes the number of nonzero entries of v, \u2016v\u20162 = \u221a\u2211d j=1 v 2 j and \u2016v\u2016\u221e = maxj |vj |. For q \u2265 1, we define \u2016A\u2016q as the operator norm of A. Specifically, \u2016A\u20162 is the spectral norm. We let \u2016A\u2016\u221e,\u221e = maxi,j |Aij |. For an integer d > 1, we define [d] = {1, . . . , d}. For an index set I \u2208 [d] and vector v \u2208 Rd, we use vI \u2208 Rd to denote the vector where [vI ]j = vj if j \u2208 I , and [vI ]j = 0 otherwise. We use supp(v) to denote the index set of its nonzero entries, and supp(v, s) to denote the index set of top s largest |vj |\u2019s. C is used to denote some absolute constants. The values of these constants may be different from case to case. \u03bbmax(A) and \u03bbmin(A) are used to denote the largest and smallest eigenvalues of matrix A. We use B(r;\u03b2) to denote the ball centered at \u03b2 with radius r."}, {"heading": "2. Related Work", "text": "In this section, we discuss some related work in detail. Even with its long history in theory and practice of the EM algorithm (Dempster et al., 1977; Wu, 1983; Tseng, 2004), the finite sample statistical guarantees on EM algorithm have not been pursued until recent research (Balakrishnan et al., 2014; Wang et al., 2014; Yi & Caramanis, 2015). In a pioneering work by Balakrishnan et al. (2014), both statistical and computational analysis of EM algorithm was conducted in the classical regime. Specifically, the authors treated EM algorithms as a special perturbed form of standard gradient methods, and they showed that with an appropriate initialization, their algorithm achieves a locally linear convergence rate to the unknown model parameter. However, their work is limited to the classical regime. While in the high-dimensional regime, when data dimension is much larger than the number of samples, the M-step is often intractable or even not well defined. In order to extend this work to the high-dimensional scenario, Wang et al. (2014) addressed this challenge by inserting a truncation step to enforce the sparsity of the parameter. They proved that their algorithm also enjoys locally linear convergence to the model parameter up to certain statistical error. Yi & Caramanis (2015) proposed a high-dimensional extension of EM algorithms via a regularized M-estimator, and provided similar theoretical guarantees. In addition, both Balakrishnan et al. (2014) and Wang et al. (2014) proposed gradient variants of the EM algorithm, which can be computationally faster than exact maximization based EM.\nAlthough the gradient based EM algorithms (Balakrishnan et al., 2014; Wang et al., 2014) have been proved to achieve guaranteed performance, these deterministic approaches can incur huge computational cost in big data and highdimensional scenario since they need costly calculation of full gradient at each iteration. Stochastic gradient methods are a common workaround to large scale optimization (Bot-\ntou, 2010; Gemulla et al., 2011), because one only needs to calculate a mini-batch of the stochastic gradients each time. However, due to the intrinsic variance introduced by the stochastic gradient, these methods often have a slower convergence rate compared with full gradient methods. Therefore, a lot of variance reduction techniques have been proposed to reduce the variance of the stochastic gradient and pursue a faster convergence rate. One of the most popular methods is the stochastic variance-reduced gradient (SVRG) (Johnson & Zhang, 2013). Inspired by this method, various machine learning tasks (Li et al., 2016; Chen & Gu, 2016; Garber & Hazan, 2015) have utilized the stochastic variance reduction technique to provide improved performance of nonconvex optimization with univariate structures. Recently, Reddi et al. (2016); Allen-Zhu & Hazan (2016) also analyzed SVRG for the general univariate nonconvex finite-sum optimization. Motivated by all of these SVRG methods, one natural question is that, can we accelerate gradient based EM algorithms using SVRG? We show in this work that the answer is in the affirmative. Since all the aforementioned SVRG methods can not be applied to the special bivariate structure of the Q-function, in order to incorporate the variance reduction technique into stochastic gradient based EM algorithms, we need to construct a new semi-stochastic gradient."}, {"heading": "3. Methodology", "text": "In this section, we present our proposed algorithm. We first introduce the general framework of the EM method, and then give two representative high-dimensional latent variable models as examples before going into the details of our algorithm."}, {"heading": "3.1. Background", "text": "We now briefly review the latent variable model and the conventional EM algorithm. Let Y \u2208 Y be the observed random variable and Z \u2208 Z be the latent random variable with joint distribution f\u03b2(y, z) and conditional distribution p\u03b2(z|y), with the model parameter \u03b2 \u2208 Rd. Given N observations {yi}Ni=1 of Y , the EM algorithm aims at maximizing the Q-function\nQ\u0304N (\u03b2;\u03b2 \u2032) =\n1\nN N\u2211 i=1 \u222b Z p\u03b2\u2032(z|yi) \u00b7 log f\u03b2(yi, z) dz.\nParticularly, in the l-th iteration of EM algorithm, we evaluate Q\u0304N (\u03b2;\u03b2(l)) in the E-step, and perform the maximization of Q\u0304N (\u03b2;\u03b2(l)) on \u03b2 in the M-step. For example, in the standard gradient ascent implementation of EM algorithm, the M-step is given by\n\u03b2(l+1) = \u03b2(l) + \u03b7\u22071Q\u0304N (\u03b2(l);\u03b2(l)),\nwhere\u22071Q\u0304N (\u00b7; \u00b7) denotes the gradient on the first variable and \u03b7 is the learning rate.\nIn the high-dimensional regime, we assume \u03b2\u2217 \u2208 Rd is sparse with \u2016\u03b2\u20160 \u2264 s\u2217. In order to ensure the sparsity of the estimator, Wang et al. (2014) proposed to use a truncation step (i.e., T-step) following the M-step."}, {"heading": "3.2. Illustrative Examples", "text": "We now introduce two representative latent variable models as running examples for high-dimensional EM algorithms.\nExample 3.1 (Sparse Gaussian Mixture Model). The random variable Y \u2208 Rd is given by\nY = Z \u00b7 \u03b2\u2217 + V ,\nwhere Z is a random variable with P(Z = 1) = P(Z = \u22121) = 1/2, and V \u223cN(0,\u03a3) is a Gaussian random vector, with \u03a3 being the covariance matrix, V and Z are independent, and \u2016\u03b2\u2217\u20160 \u2264 s\u2217. We assume \u03a3 is known for simplicity.\nExample 3.2 (Mixture of Sparse Linear Regression). Let X \u2208 Rd \u223c N(0,\u03a3) be a Gaussian random vector, and V \u223cN(0, \u03c32) be a univariate normal random variable. The random variable Y \u2208 R is given by\nY = Z \u00b7X>\u03b2\u2217 + V,\nwhere Z is a random variable with P(Z = 1) = P(Z = \u22121) = 1/2. Here X , V and Z are independent, and \u2016\u03b2\u20160 \u2264 s\u2217. In addition, we assume that \u03c3 is known."}, {"heading": "3.3. Proposed Algorithm", "text": "Now we present our high-dimensional EM algorithm based on stochastic variance-reduced gradient ascent. The outline of the proposed algorithm is described in Algorithm 1.\nSince our algorithm is based on stochastic gradient, we divide theN samples into nmini-batches {Di}ni=1, and define function {qi}ni=1 on these mini-batches, i.e., qi(\u03b2;\u03b2\u2032) = 1/b \u2211 j\u2208Di \u222b Z p\u03b2\u2032(z|yj) \u00b7 log f\u03b2(yj , z) dz, where we let b be the mini-batch size, and N = nb. Let Qn(\u03b2;\u03b2\u2032) = 1/n \u2211n i=1 qi(\u03b2;\u03b2\n\u2032). It is easy to show that Qn(\u03b2;\u03b2\u2032) = Q\u0304N (\u03b2;\u03b2 \u2032).\nNote that in Algorithm 1, to ensure the sparsity of the output estimator , we use the hard thresholding operator (Blumensath & Davies, 2009),Hs(v) = vsupp(v,s), which only keeps the largest s entries in magnitude of a vector v \u2208 Rd. The sparsity parameter s controls the sparsity level of the estimated parameter, and is critical to the estimation error as we will show later.\nWe can see that there are two layers of iterations in our algorithm. For each outer iteration, we first conduct E-step,\nAlgorithm 1 Variance Reduced Stochastic Gradient EM Algorithm (VRSGEM) 1: Parameter: Sparsity Parameter s, Maximum Number of\nOuter Iterations m, Number of Inner Iterations T , learning rate \u03b7\n2: Initialization: \u03b2\u0303(0) = Hs(\u03b2init), 3: For l = 0 to m\u2212 1 4: E-step:\nEvaluate Qn ( \u03b2; \u03b2\u0303(l) ) with the dataset\n\u03b2\u0303 = \u03b2\u0303(l), \u00b5\u0303 = \u22071Qn(\u03b2\u0303; \u03b2\u0303) 5: M-step:\n\u03b2(0) = \u03b2\u0303 Randomly select jl uniformly from {0, . . . , T \u2212 1}\n6: For t = 0 to jl Randomly select i from [n] uniformly\n7: v(t) = \u22071qi ( \u03b2(t); \u03b2\u0303 ) \u2212\u22071qi ( \u03b2\u0303; \u03b2\u0303 ) + \u00b5\u0303, 8: \u03b2(t+0.5) = \u03b2(t) + \u03b7v(t), 9: T-step: \u03b2(t+1) = Hs(\u03b2(t+0.5))\n10: End For 11: \u03b2\u0303(l+1) = \u03b2(jl+1) 12: End For 13: Output: \u03b2\u0302 = \u03b2\u0303(m)\nwhere we compute the averaged gradient \u00b5\u0303 based on the whole dataset and the model parameter from last outer iteration. This averaged gradient will be used repetitively in the M-step for variance reduction. In M-step, we have the inner iterations. We first determine the number of inner iterations, which is randomly selected from [T ] uniformly. At each inner iteration, we make use of the variance reduction technique. Note that we extend the variance reduction idea originally proposed by Johnson & Zhang (2013) to the bivariate structure of the Q-function. Specifically, we design a novel semi-stochastic gradient on mini-batches as v(t) = \u22071qi(\u03b2(t); \u03b2\u0303) \u2212 \u22071qi(\u03b2\u0303; \u03b2\u0303) + \u00b5\u0303, which fixes the second variable within each outer iteration for the sake of convergence guarantee. While the standard gradient implementation of EM algorithm (Wang et al., 2014) uses \u22071Q\u0304N (\u03b2(t);\u03b2(t)) to update the parameter at each iteration, our newly designed semi-stochastic gradient is proved to better reduce the variance and attain a lower gradient complexity. After finishing all the inner iterations, we use the output from the last inner iteration as the output of this outer iteration. We use the output from the last outer iteration as the final estimator.\nWe believe our newly proposed semi-stochastic gradient is of independent interest for the stochastic optimization of functions with bivariate structures, to prove a faster rate of convergence."}, {"heading": "4. Main Theoretical Results", "text": "In this section, we show the main theory on the theoretical guarantees of our proposed Algorithm 1. We also present the implications of our algorithm applied to two models\ndescribed in Section 3.2.\nTo facilitate the technical analysis of our algorithm, we focus on the resampling version of Algorithm 1 following the convention of previous work (Wang et al., 2014; Yi & Caramanis, 2015). The key difference between the resampling version and Algorithm 1 is that we split the whole dateset into m subsets and use one subset for each outer iteration. The details of the resampling version of our algorithm is provided in the longer version of this paper. It is worth noting that the resampling version of our algorithm is able to decouple the dependence between consecutive outer iterations, and it is only used to simplify the technical proof. In practice including our experiment, we use Algorithm 1 rather than the resampling version.\nBefore we present the main results, we introduce three conditions that are essential for our analysis.\nCondition 4.1 (Smoothness). For any \u03b2,\u03b21,\u03b22 \u2208 B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217), where p \u2208 (0, 1) is a model-dependent constant, for any i \u2208 [n], qi(\u00b7; \u00b7) in Algorithm 1 satisfies the smoothness condition with respect to the first variable with parameter L:\u2225\u2225\u22071qi(\u03b21;\u03b2)\u2212\u22071qi(\u03b22;\u03b2)\u2225\u22252 \u2264 L\u2225\u2225\u03b21 \u2212 \u03b22\u2225\u22252. Condition 4.1 says that the gradient of qi(\u00b7; \u00b7) we use in each inner iteration is Lipschitz continuous with respect to the first variable when the first and second variables are within the ball B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217). There exists a wide range of models with this condition holding.\nCondition 4.2 (Concavity). For all \u03b2,\u03b21,\u03b22 \u2208 B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217), where p \u2208 (0, 1) is a model-dependent constant, the function Qn(\u00b7; \u00b7) satisfies the strong concavity condition with parameter \u00b5:[\n\u22071Qn(\u03b21;\u03b2)\u2212\u22071Qn(\u03b22;\u03b2) ]>\n(\u03b21 \u2212 \u03b22) \u2264 \u2212\u00b5\u2016\u03b22 \u2212 \u03b21\u201622.\nCondition 4.2 requires Qn(\u00b7; \u00b7) to be strongly concave with respect to the first variable when the first and second variables are within the ball B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217). This is a reasonable requirement when N is large enough.\nCondition 4.3 (First-order stability). For the true model parameter \u03b2\u2217 and any \u03b2 \u2208 B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217), where p \u2208 (0, 1) is a model-dependent constant, Qn ( \u00b7; \u00b7 )\nsatisfies the first-order stability with parameter \u03b3:\u2225\u2225\u22071Qn(\u03b2\u2217;\u03b2)\u2212\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2225\u22252 \u2264 \u03b3\u2225\u2225\u03b2 \u2212 \u03b2\u2217\u2225\u22252. Condition 4.3 requires that the gradient \u22071Qn(\u03b2\u2217; \u00b7) is stable with regard to the second variable, with the second variable within the ball B(p\u2016\u03b2\u2217\u20162;\u03b2\u2217). There are actually\nvarious versions of this condition in previous work (Yi & Caramanis, 2015; Balakrishnan et al., 2014) on population versionQ(\u00b7; \u00b7) = E[Qn(\u00b7, \u00b7)]. Here we impose the condition on the sample Q-function, i.e., Qn(\u00b7, \u00b7), because our proof technique directly analyzes the sample Q-function. Intuitively, when the sample size N is sufficiently large, Qn(\u00b7; \u00b7) andQ(\u00b7; \u00b7) should be close. Therefore, this condition should hold for Qn(\u00b7; \u00b7) as well.\nDue to the space limit, we verify the above conditions for the two examples in the longer version of this paper. We use \u03ba = L/\u00b5 to denote the condition number ."}, {"heading": "4.1. Theory for the Generic Model", "text": "With the above conditions on qi(\u00b7; \u00b7) and Qn(\u00b7; \u00b7), we have the following theorem to characterize the estimation error of our estimator \u03b2\u0303(r) returned by the resampling version of Algorithm 1.\nTheorem 4.4. Suppose qi(\u00b7; \u00b7) satisfies Condition 4.1 and Qn(\u00b7; \u00b7) satisfies Conditions 4.2, 4.3. We also assume that \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2 \u2264 p \u2225\u2225\u03b2\u2217\u2225\u2225 2 , where p \u2208 (0, 1). If \u03b7 \u2264 \u00b5/(8L2), and T and s are chosen such that\n\u03c1 = 1\nT (1\u2212 \u03c4) +\n2\u03b1\u03b7 [ \u03b7L2 + (2\u03b7 + L/\u00b52)\u03b32 ] 1\u2212 \u03c4 < 1,\nwhere \u03c4 = \u03b1(1\u2212\u03b7\u00b5+ 2\u03b72L2) and \u03b1 = 1 + \u221a s\u2217/ \u221a s\u2212 s\u2217, then the estimator \u03b2\u0303(r) from the resampling version of Algorithm 1 satisfies\nE \u2225\u2225\u03b2\u0303(r)\u2212\u03b2\u2217\u2225\u2225\n2 \u2264 \u03c1r/2 \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2\n+\n\u221a 2s\u0303\u03b1\u03b7(2\u03b7 + L/\u00b52)\n(1\u2212 \u03c4)(1\u2212 \u03c1) \u2225\u2225\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2225\u2225\u221e,\n(4.1)\nwhere s\u0303 = 2s+ s\u2217.\nRemark 4.5. As suggested in Theorem 4.4 that by choosing an appropriate learning rate \u03b7, a sufficiently large number of inner iterations T , and sparsity parameter s such that \u03c1 < 1, we can achieve a linear convergence rate. Here we give an example to show that such \u03c1 is achievable. If we choose step size \u03b7 = \u00b5/(8L2), and truncation parameter s satisfies\ns >\n[ 4(1\u2212K)2\nK2 + 1\n] s\u2217,\nwhere\nK = 5\u00b52 96L2 \u2212 \u00b5 2\u03b32 12L4 \u2212 \u03b3 2 3L\u00b5 > 0.\nThen, we can get\n\u03b1 < 1\n1\u2212 5\u00b52/96L2 + \u00b52\u03b32/12L4 + \u03b32/3L\u00b5 ,\nand the contraction parameter \u03c1 in Theorem 4.4 can be simplified as\n\u03c1 \u2264 1 T (1\u2212 \u03c4) + 3 4 .\nTherefore, if we choose T \u2265 256\u03ba2/ ( 3(\u03b1 \u2212 1) ) , we can obtain \u03c1 \u2264 7/8, ensuring the linear convergence rate.\nRemark 4.6. The right hand side of (4.1) in Theorem 4.4 consists of two terms. The first term stands for the optimization error. The second term is the statistical error. According to Remark 4.5, we can ensure the linear convergence rate of our algorithm. Thus for any error bound > 0, we need r \u2265 2 log\u03c1\u22121 [\u2016\u03b2init \u2212 \u03b2\u2217\u20162/ ] iterations to let the optimization error \u03c1r/2\u2016\u03b2init \u2212 \u03b2\u2217\u20162 \u2264 , which basically requires O ( log(1/ ) ) outer iterations. For each outer iteration, we need to compute T gradients of qi(\u00b7, \u00b7), and one full gradient. Since we have T = O(\u03ba2), which is suggested in Remark 4.5, the gradient complexity of our algorithm would be O ( (N + b\u03ba2) \u00b7 log(1/ ) ) . Nevertheless, for the state-of-the-art gradient based high-dimensional EM algorithm (Wang et al., 2014), its gradient complexity is O ( \u03baN log(1/ ) ) . As long as \u03ba \u2264 N/b, the gradient complexity of our algorithm is less than that of Wang et al. (2014). Since in big data scenarios, N is always very large and b as the batch size is relatively small, this condition is naturally satisfied in most real applications.\nThe second term on the right-hand side of (4.1) stands for the upper bound of the statistical error, which depends on specific models as we will introduce later."}, {"heading": "4.2. Implications for Specific Models", "text": "Now we apply our algorithm to the two examples introduced in Section 3.2."}, {"heading": "4.2.1. SPARSE GAUSSIAN MIXTURE MODEL", "text": "The next corollary gives the implication of our main theory for sparse Gaussian mixture models.\nCorollary 4.7. Under the same conditions of Theorem 4.4 and suppose \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2\n\u2264 ( \u221a \u03bbmin(\u03a3)/\u03bbmax(\u03a3)/4) \u2225\u2225\u03b2\u2217\u2225\u2225 2 . Then with probability at least 1 \u2212 2e/d, the estimator \u03b2\u0302 = \u03b2\u0303(m) from the resampling version of Algorithm 1 satisfies\nE \u2225\u2225\u03b2\u0302 \u2212 \u03b2\u2217\u2225\u2225\n2 \u2264 \u03c1m/2 \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2\n+ C\u03a6\u03ba3/2 \u221a s\u2217 log d \u00b7 logN\nN , (4.2)\nwhere \u03a6 = \u03bbmin(\u03a3) ( \u2016\u03a3\u22121\u03b2\u2217\u2016\u221e + \u03c3\u03bb\u22121/2min (\u03a3) ) and \u03ba = L/\u00b5.\nProof Sketch. For sparse Gaussian mixture model, we have Conditions 4.1 to 4.3 hold with parameters L = 1/\u03bbmin(\u03a3), \u00b5 = 1/\u03bbmax(\u03a3), and \u03b3 = 20(\u03be2 + \u03be + 1 + \u03be\u22122)e\u2212\u03be\n2/64/\u03bbmin(\u03a3), where \u03be = \u2016\u03a3\u22121/2\u03b2\u2217\u20162 denotes the signal-to-noise ratio (SNR). Next, s\u0303 = 2s+ s\u2217 is of the same order as s\u2217. For the term \u2016\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2016\u221e in (4.1), we have the following inequality holds with probability at least 1\u2212 2e/d\n\u2016\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2016\u221e \u2264 C ( \u2016\u03a3\u22121\u03b2\u2217\u2016\u221e +\n\u03c3\u221a \u03bbmin(\u03a3)\n)\u221a log d \u00b7 logN\nN .\nThis completes the proof.\nRemark 4.8. We can see that the parameters in Conditions 4.1 and 4.2 are determined by the covariance matrix \u03a3, which is reasonable because \u03a3 actually denotes the variance of the data. For Condition 4.3, we need to introduce the signal-to-noise ratio (SNR). The concept of SNR in parameter estimation is also proposed in Balakrishnan et al. (2014); Dasgupta & Schulman (2007). Since we have extended the covariance matrix of noise from identity matrix in previous work to any positive definite matrix, our SNR is also a little bit different from their definition. Generally speaking, for GMM with lower SNR, the variance of the noise makes it harder or even impossible for the algorithm to converge. Therefore, it is always reasonable to have a requirement for the SNR of GMM to be large enough for reliable parameter estimation. Spectral method (Anandkumar et al., 2014) can be used to match the requirement on initialization for GMM, however, we find that random initialization also performs reasonably well in practice as we will show later.\nAccording to Remark 4.5, by choosing appropriate learning rate \u03b7, inner iterations T , and sparsity parameter s, we can ensure linear convergence rate of our algorithm. Therefore, from Corollary 4.7, we know that after O ( log ( N/(s\u2217 log d logN) )) number of iterations, the\noutput of our algorithm attainsO( \u221a s\u2217 log d \u00b7 logN/N) statistical error, which matches the best-known error bound (Wang et al., 2014; Yi & Caramanis, 2015) for Gaussian mixture model up to a logarithmic factor logN . Note that the extra logarithmic factor is due to the resampling strategy."}, {"heading": "4.2.2. MIXTURE OF SPARSE LINEAR REGRESSION", "text": "The implication of our main theory for mixture of linear regression is presented in the following corollary.\nCorollary 4.9. Under the same conditions of Theorem 4.4 and suppose \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2\n\u2264 ( \u221a \u03bbmin(\u03a3)/\u03bbmax(\u03a3)/32) \u2225\u2225\u03b2\u2217\u2225\u2225 2 . Then with probability at least 1 \u2212 2e/d, the estimator \u03b2\u0302 = \u03b2\u0303(m) from the\nresampling version of Algorithm 1 satisfies E \u2225\u2225\u03b2\u0302 \u2212 \u03b2\u2217\u2225\u2225\n2 \u2264 \u03c1m/2 \u2225\u2225\u03b2init \u2212 \u03b2\u2217\u2225\u2225 2\n+ C\u03ba3/2 ( \u2016\u03b2\u2217\u20162 +\n\u03c3\u221a \u03bbmax(\u03a3)\n)\u221a s\u2217 log d \u00b7 logN\nN ,\nwhere \u03ba = L/\u00b5.\nProof Sketch. For mixture of linear regression, we have Conditions 4.1 to 4.3 hold with parameters L = 2\u03bbmax(\u03a3), \u00b5 = \u03bbmin(\u03a3)/2, and \u03b3 = \u03b31\u03bbmax(\u03a3), where \u03b31 \u2208 (0, 1/3) is a constant. We also show that s\u0303 is of the same order as s\u2217. Next, for the term \u2016\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2016\u221e in (4.1), we have the following inequality holds with probability at least 1\u22122e/d\n\u2016\u22071Qn(\u03b2\u2217;\u03b2\u2217)\u2016\u221e\n\u2264 C ( \u03bbmax(\u03a3)\u2016\u03b2\u2217\u20162 + \u03bb1/2max(\u03a3)\u03c3 )\u221a log d \u00b7 logN N .\nThis completes the proof.\nRemark 4.10. According to Remark 4.5, our algorithm can achieve a linear convergence rate with appropriate learning rate \u03b7, inner iterations T , and sparsity parameter s. Thus Corollary 4.9 tells us that after O ( log ( N/(s\u2217 log d logN) )) number of outer iterations, the output of our algorithm achieves O( \u221a s\u2217 log d \u00b7 logN/N) statistical error, which matches the best-known statistical error (Yi & Caramanis, 2015) for mixture of linear regression up to a logarithmic factor from the resampling strategy. Specifically, the dependence on \u2016\u03b2\u2217\u20162 is due to the fundamental limits of EM, which also appears in Balakrishnan et al. (2014); Yi & Caramanis (2015). There is also a spectral method (Chaganty & Liang, 2013) helping the initialization of MLR, but we use random initialization which also performs well in our experiments."}, {"heading": "5. Experiments", "text": "In this section, we present experiment results to validate our theory. For parameter estimation, we use Gaussian mixture model and mixture of linear regression, and compare our proposed variance-reduced stochastic gradient EM algorithm (VRSGEM) with two state-of-the-art highdimensional EM algorithms as baselines:\n\u2022 (HDGEM) High-Dimensional Gradient EM algorithm proposed in Wang et al. (2014): the gradient variant of high-dimensional EM method enforcing sparsity structure. \u2022 (HDREM) High-Dimensional Regularized EM algorithm proposed in Yi & Caramanis (2015): the method based on decaying regularization.\nSince high-dimensional scenario is much more challenging, we only compare our algorithm with high-dimensional EM algorithms."}, {"heading": "5.1. Experimental Setup", "text": "For each latent variable model, we compare both the optimization error \u2016\u03b2\u0303(l) \u2212 \u03b2\u0302\u20162 featuring the convergence of the estimator to the local optima, and the overall estimation error \u2016\u03b2\u0303(l)\u2212\u03b2\u2217\u20162 featuring the overall estimation accuracy with regard to the true model parameter \u03b2\u2217. We also show the convergence comparison in terms of training time. All the comparisons are under two different parameter settings: s\u2217 = 5, d = 256, b = 100, N = 5000 and s\u2217 = 10, d = 512, b = 200, N = 10000. For VRSGEM, we choose m = 30, n = 50 and T = 50 across all settings and models. Besides the comparison of different algorithms, we also verify our statistical rate of convergence by plotting the statistical error \u2016\u03b2\u0302 \u2212 \u03b2\u2217\u2016 against \u221a s\u2217 log d/N . Specifically, we fix d = 512 and show the plots of three cases s\u2217 = 5, s\u2217 = 10 and s\u2217 = 15 with varying N .\nIn each experiment setting, we run 100 trials and show the averaged results. The learning rate \u03b7 is tuned by grid search and s is chosen by cross validation. We use random initialization."}, {"heading": "5.2. Gaussian Mixture Model", "text": "We test VRSGEM on Gaussian mixture models introduced in Section 3.2. For the sake of simplicity and better matching the problem setting of the baseline methods, the co-\nvariance matrix \u03a3 of V is chosen to be a diagonal matrix with all elements being 1. We randomly set two elements to \u03bbmax(\u03a3) = 10, and another two elements to \u03bbmin(\u03a3) = 0.1. The results are shown in Figures 1 and 2.\nFrom Figures 1(a) and 2(a), we can see that all three algorithms have linear convergence as Corollary 4.7 suggests. VRSGEM clearly enjoys a faster convergence rate than the baselines. Moreover, as shown in Figures 1(b) and 2(b), the performance on overall estimation error of our algorithm is as good as HDGEM, which is far better than HDREM. In terms of time consumption, our algorithm also enjoys a remarkable advantage over the baselines as shown in Figures 1(c), 1(d), 2(c) and 2(d).\nThe statistical error results are shown in Figure 5. From Figure 5(a), we can see that statistical error of VRSGEM shows a linear dependency on \u221a s\u2217 log d/N across different settings of s\u2217, verifying results in Corollary 4.7."}, {"heading": "5.3. Mixture of Linear Regression", "text": "Similar to the setting for GMM, we use the same covariance matrix \u03a3 in Section 5.2 for X here. For V , we let \u03c3 = 1. We show the results in Figures 3 and 4.\nFrom Figures 3(a) and 4(a), we can see that VRSGEM achieves linear convergence which is consistent with Corollary 4.9, and our algorithm significantly outperforms the\nbaselines in terms of optimization error. In terms of overall estimation error shown in Figures 3(b) and 4(b), VRSGEM is as good as HDGEM and beats HDREM by a remarkable margin. Our algorithm also beats the baselines in time consumption for convergence as we can see in Figures 3(c), 3(d), 4(c) and 4(d). Overall, VRSGEM achieves the best performance among all the methods.\nIn addition, from Figure 5(b), we can see that for MLR, the statistical error of VRSGEM is of order \u221a s\u2217 log d/N , which supports Corollary 4.9."}, {"heading": "6. Conclusions and Future Work", "text": "We propose a novel accelerated stochastic gradient EM algorithm based on a uniquely constructed semi-stochastic\nvariance reduced gradient. We show that with an appropriate initialization, the proposed algorithm converges at a linear rate and attains the optimal statistical rate. We apply our proposed algorithm to two popular latent variable models in the high-dimensional regime and numerical experiments are provided to support our theory.\nIt is worth noting that, the proposed algorithm is directly applicable to the classical regime, by dropping the T-step. It will give rise to an accelerated stochastic extension of conventional EM algorithm, and the corresponding theory in this paper can be extended to the classical regime analogously (Balakrishnan et al., 2014). We will investigate this by-product in our future work. We also plan to extend our algorithm to the estimation of high-dimensional latent variable models with low-rank parameters (Yi & Caramanis, 2015)."}, {"heading": "Acknowledgments", "text": "We would like to thank the anonymous reviewers for their helpful comments. This research was sponsored in part by the National Science Foundation under Grant Numbers CNS-1513939, CNS-1027965, IIS-1629161, IIS-1618948, IIS-1652539. The views and conclusions contained in this paper are those of the authors and should not be interpreted as representing any funding agencies."}], "year": 2017, "references": [{"title": "Variance reduction for faster non-convex optimization", "authors": ["Allen-Zhu", "Zeyuan", "Hazan", "Elad"], "venue": "arXiv preprint arXiv:1603.05643,", "year": 2016}, {"title": "Tensor decompositions for learning latent variable models", "authors": ["Anandkumar", "Animashree", "Ge", "Rong", "Hsu", "Daniel", "Kakade", "Sham M", "Telgarsky", "Matus"], "venue": "Journal of Machine Learning Research,", "year": 2014}, {"title": "Statistical guarantees for the EM algorithm: From population to sample-based analysis", "authors": ["Balakrishnan", "Sivaraman", "Wainwright", "Martin J", "Yu", "Bin"], "venue": "arXiv preprint arXiv:1408.2156,", "year": 2014}, {"title": "Iterative hard thresholding for compressed sensing", "authors": ["Blumensath", "Thomas", "Davies", "Mike E"], "venue": "Applied and Computational Harmonic Analysis,", "year": 2009}, {"title": "Large-scale machine learning with stochastic gradient descent", "authors": ["Bottou", "L\u00e9on"], "venue": "In Proceedings of COMPSTAT\u20192010,", "year": 2010}, {"title": "Spectral experts for estimating mixtures of linear regressions", "authors": ["Chaganty", "Arun Tejasvi", "Liang", "Percy"], "venue": "arXiv preprint arXiv:1306.3729,", "year": 2013}, {"title": "Accelerated stochastic block coordinate gradient descent for sparsity constrained nonconvex optimization", "authors": ["Chen", "Jinghui", "Gu", "Quanquan"], "venue": "In Proceedings of the ThirtySecond Conference on Uncertainty in Artificial Intelligence,", "year": 2016}, {"title": "A probabilistic analysis of EM for mixtures of separated, spherical Gaussians", "authors": ["Dasgupta", "Sanjoy", "Schulman", "Leonard"], "venue": "Journal of Machine Learning Research,", "year": 2007}, {"title": "Saga: A fast incremental gradient method with support for non-strongly convex composite objectives", "authors": ["Defazio", "Aaron", "Bach", "Francis", "Lacoste-Julien", "Simon"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2014}, {"title": "Maximum likelihood from incomplete data via the EM algorithm", "authors": ["A.P. Dempster", "N.M. Laird", "D.B. Rubin"], "venue": "Journal of the Royal Statistical Society. Series B (Statistical Methodology),", "year": 1977}, {"title": "Fast and simple pca via convex optimization", "authors": ["Garber", "Dan", "Hazan", "Elad"], "venue": "arXiv preprint arXiv:1509.05647,", "year": 2015}, {"title": "Data mining: concepts and techniques", "authors": ["Han", "Jiawei", "Pei", "Jian", "Kamber", "Micheline"], "year": 2011}, {"title": "Data clustering: a review", "authors": ["Jain", "Anil K", "Murty", "M Narasimha", "Flynn", "Patrick J"], "venue": "ACM computing surveys (CSUR),", "year": 1999}, {"title": "Accelerating stochastic gradient descent using predictive variance reduction", "authors": ["Johnson", "Rie", "Zhang", "Tong"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2013}, {"title": "Stochastic variance reduced optimization for nonconvex sparse learning", "authors": ["Li", "Xingguo", "Zhao", "Tuo", "Arora", "Raman", "Liu", "Han", "Haupt", "Jarvis"], "venue": "arXiv preprint arXiv:1605.02711,", "year": 2016}, {"title": "Statistical analysis with missing data", "authors": ["Little", "Roderick JA", "Rubin", "Donald B"], "year": 2014}, {"title": "Stochastic variance reduction for nonconvex optimization", "authors": ["Reddi", "Sashank J", "Hefny", "Ahmed", "Sra", "Suvrit", "P\u00f3cz\u00f3s", "Barnab\u00e1s", "Smola", "Alex"], "venue": "arXiv preprint arXiv:1603.06160,", "year": 2016}, {"title": "A stochastic gradient method with an exponential convergence rate for finite training sets", "authors": ["Roux", "Nicolas L", "Schmidt", "Mark", "Bach", "Francis R"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2012}, {"title": "Stochastic dual coordinate ascent methods for regularized loss minimization", "authors": ["Shalev Shwartz", "Shai", "Zhang", "Tong"], "venue": "Journal of Machine Learning Research,", "year": 2013}, {"title": "An analysis of the EM algorithm and entropylike proximal point methods", "authors": ["Tseng", "Paul"], "venue": "Mathematics of Operations Research,", "year": 2004}, {"title": "High dimensional expectation-maximization algorithm: Statistical optimization and asymptotic normality", "authors": ["Wang", "Zhaoran", "Gu", "Quanquan", "Ning", "Yang", "Liu", "Han"], "venue": "arXiv preprint arXiv:1412.8729,", "year": 2014}, {"title": "On the convergence properties of the EM algorithm", "authors": ["Wu", "C.F. Jeff"], "venue": "The Annals of Statistics, 11(1):95\u2013103,", "year": 1983}, {"title": "Regularized em algorithms: A unified framework and statistical guarantees", "authors": ["Yi", "Xinyang", "Caramanis", "Constantine"], "venue": "In Advances in Neural Information Processing Systems,", "year": 2015}, {"title": "Accelerated stochastic block coordinate descent with optimal sampling", "authors": ["Zhang", "Aston", "Gu", "Quanquan"], "venue": "In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,", "year": 2016}], "id": "SP:53d566fab75b01b0e44b3ccd7added16d520f89d", "authors": [{"name": "Rongda Zhu", "affiliations": []}, {"name": "Lingxiao Wang", "affiliations": []}, {"name": "Chengxiang Zhai", "affiliations": []}, {"name": "Quanquan Gu", "affiliations": []}], "abstractText": "We propose a generic stochastic expectationmaximization (EM) algorithm for the estimation of high-dimensional latent variable models. At the core of our algorithm is a novel semi-stochastic variance-reduced gradient designed for the Qfunction in the EM algorithm. Under a mild condition on the initialization, our algorithm is guaranteed to attain a linear convergence rate to the unknown parameter of the latent variable model, and achieve an optimal statistical rate up to a logarithmic factor for parameter estimation. Compared with existing high-dimensional EM algorithms, our algorithm enjoys a better computational complexity and is therefore more efficient. We apply our generic algorithm to two illustrative latent variable models: Gaussian mixture model and mixture of linear regression, and demonstrate the advantages of our algorithm by both theoretical analysis and numerical experiments. We believe that the proposed semi-stochastic gradient is of independent interest for general nonconvex optimization problems with bivariate structures.", "title": "High-Dimensional Variance-Reduced Stochastic Gradient Expectation-Maximization Algorithm"}